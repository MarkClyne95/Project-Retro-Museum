%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: 11610476aa6f93e44bd24d3d4ed94003, type: 3}
  m_Name: Code
  m_EditorClassIdentifier: 
  finalText: "; $420 = MD?L?tRT\r\n;               \r\n;    M = 1 if moving, 0 if
    still\r\n;    D = direction (0 = facing left, 1 = facing right)\r\n;    ? = ?\r\n;   
    L = on ladder\r\n;    ?A = set when Megaman is getting off ladder at top\r\n;   
    t = set when throwing something while standing\r\n;    R = set to make Megaman
    get stunned by Gutsman's eart-shaking jump\r\n;    T = set to make Megaman transform\r\n;\r\n;   
    R+T both set = megaman getting hit\r\n;\r\n; for enemies it works as follows\r\n;\r\n;
    $420,X = HDIT?BMC  (ObjectFlags)\r\n;\r\n;   H = object getting hit by Megaman's
    bullet\r\n;   D = direction (0 = facing left, 1 = facing right)\r\n;   I = set
    if invisible\r\n;   T = Temporary object that disappears after some time (bonus
    items etc)\r\n;   ? = ?\r\n;   B = set if object can collide with Megaman's bullets
    (ghostlike otherwise)\r\n;   M = set if object can collide with Megaman (ghostlike
    otherwise)\r\n;   C = set if object collides with BG\r\n;\r\n; freezing $640
    for enemies freezes them in a certain state...\r\n; freezing $440 for enemies
    freezes them in a certain frame...\r\n;\r\n; MegamanSpriteNum ($400):\r\n;\r\n;
    These are sprite frames.\r\n; These values correspond to what Megaman does.\r\n;
    If you set it to a weird value like $1A, it will appear as a shot instead.\r\n;
    Examples of these weird values are shown in MegamanWeaponFireData.\r\n; It is
    the same for ObjectSpriteNum and MegamanSpriteNum.\r\n;\r\n; #$00 = 00000000
    = standing\r\n; #$01 = 00000001 = firing megablaster (while standing)\r\n; #$02
    = 00000010 = standing while carrying gutsman rock\r\n; #$03 = 00000011 = moving
    slowly (also causes slow movement!)\r\n; #$04 = 00000100 = firing megablaster
    (while standing)\r\n; #$05 = 00000101 = moving slowly while carrying gutsman
    rock\r\n; #$06 = 00000110 = running\r\n; #$07 = 00000111 = running while firing
    megablaster\r\n; #$08 = 00000100 = running while carrying gutsman rock\r\n; #$09
    = 00001001 = jumping/falling\r\n; #$0A = 00001010 = firing megablaster while
    jumping\r\n; #$0B = 00001011 = jumping while carrying gutsman rock\r\n; #$0C
    = 00001100 = slowing down after running (also causes movement)\r\n; #$0F = 00001111
    = hitting ground\r\n; #$10 = 00010000 = walking with gun\r\n; #$12 = 00010010
    = getting hit by enemy\r\n; #$13 = 00010011 = Getting stun by Gutsman's earth-shaking
    jump\r\n; #$14 = 00010100 = transforming (when entering stage or after pause)\r\n;
    #$15 = 00010101 = On ladder\r\n; #$16 = 00010110 = Firing while on ladder\r\n;
    #$17 = 00010111 = Getting off at top of ladder\r\n; #$18 = 00011000 = Also firing
    on the ladder?\r\n; #$19 = 00011001 = Getting damage (sweatdrops)\r\n; #$31 =
    00110001 = \"READY\"\r\n; #$6E = 01101110 = Throwing something\r\n; #$6F = 01101111
    = Throwing something while jumping/falling\r\n; #$70 = 01110000 = Throwing something
    while on ladder\r\n;\r\n;\r\n;#$C0 = \"P\"\r\n;#$C1 = Cutman\r\n;#$C2 = Iceman\r\n;#$C3
    = Bombman\r\n;#$C4 = Fireman(?)\r\n;#$C5 = Elecman\r\n;#$C6 = Gutsman (rock either
    carried by megaman or airborne)\r\n;#$C7 = Magnet beam\r\n;\r\n\r\n; $41 = #1
    if game paused with SELECT, #0 otherwise\r\n\r\n\r\n\r\n; New weapon capsule
    uses $61F\r\n\r\n\r\n\r\nMiscCounter1                = $3C ;Counter used for
    various purposes\r\n\r\n\r\n\r\n; RLDUSsBA     (s = select, S = START)\r\n\r\n;
    Keys held down on this frame\r\nJoyPads                     = $14\r\nJoypad0                    
    = Joypads\r\nJoypad1                     = Joypads+1\r\n\r\nJoyPadsOld                 
    = $16\r\nJoypad0old                  = JoypadsOld\r\nJoypad1old                 
    = JoypadsOld+1\r\n\r\nForcedInputFlag             = $68\r\nForcedInputData            
    = $69\r\n\r\n; Keys pressed on this frame\r\nJoyD                        = $18\r\nJoyD0                      
    = JoyD\r\nJoyD1                       = JoyD+1\r\n\r\n\r\nScrollPosX                 
    = $1A\r\nScrollPosScreen             = $1B\r\nScrollPosY                  = $1E\r\n\r\n;
    $0D is used for plenty of purposes. Here's one.\r\nSpriteCounter              
    = $0D\r\n\r\nNMI_GfxUpdateDone           = $1F ;in Rockman2, at $1D\r\nFrameCounter               
    = $23 ;In Rockman2, at $1C\r\n\r\nRefObjectNum                = $2F\r\n\r\nNumberOfFramesSinceShooting
    = $61\r\n\r\nWritePaletteParam           = $34\r\nPaletteUpdateDelay         
    = $37\r\n\r\nLastRestartPointType        = $AB  ;0=level beginning, #$0C = point
    A, #$18 = point B\r\n\r\nPreviousEnemyIndex          = $8B\r\nCurrentEnemyIndex          
    = $8C\r\n\r\nZigZagFireStatus            = $8F\r\nAutoSpawnObjectFFcounter   
    = $92 ;unknown\r\n\r\nCurrentBeginScreen          = $27 ;In Rockman2, $14\r\n       
    ; ^The screen that begins the current strip. Only updated in transitions.\r\nCurrentEndScreen           
    = $28 ;In Rockman2, $15\r\n        ; ^The screen where the current strip ends.
    Only updated in transitions.\r\nCurrentOrderNum             = $29 ;In Rockman2,
    $38\r\n        ; ^Pointer to the order table. Only updated in transitions.\r\n\r\nObjectReceivedHitType      
    = $53\r\n\r\nUseTempScrollX              = $B4\r\nTempScrollPosX             
    = $B2\r\nTempScrollPosScreen         = $B3\r\n\r\nScreenMovedFlag   = $8D\r\n;Bit
    0: (&01) = New enemies may need to be loaded (screen has moved)\r\n;Bit 6: (&40)
    = Movement forward? 0=backward\r\n\r\nActivesLowerIndex = $8E\r\n;ActivesLowerIndex
    points to the first Active that may need to be cared of.\r\n;Actives before that
    index are of no concern.\r\n\r\nRoomActiveTable             = $720\r\n\r\nIgnoreStageSelection       
    = $BC\r\n\r\nSoundCodeParameter          = $A7\r\n\r\nCurrentRoomMonsterGraphicsIndex
    = $7A\r\n\r\n\r\nBonusPearlCount             = $AE ; Max: 99\r\n\r\nRandomSeed                 
    = $46 ; In Rockman2, at $4A\r\n\r\nLevelClearScoreInThousands  = $3D\r\n\r\nCurrentBank                
    = $42\r\n\r\n\r\nExtraLives                  = $A6\r\n\r\n\r\n\r\nDrawScoreAndMetersFlag     
    = $BB\r\n\r\n\r\nWeaponsOwned                = $5D               ; (MFCIGEB0)\r\nWeaponSelect               
    = $5F\r\n\r\nMeters                      = $6A            ; (from 0-28)\r\n;
    0 = \"P\" (just the old megablaster)\r\n; 1 = Cutman\r\n; 2 = Iceman\r\n; 3 =
    Bombman\r\n; 4 = Fireman\r\n; 5 = Elecman\r\n; 6 = Gutsman\r\n; 7 = Magnet beam\r\nMetersFraction             
    = $9E  ; (index 1 not used)\r\n\r\n\r\nWeaponFiring                = $60\r\n;
    $60 = non-zero if any of Megaman's weapons are at the screen\r\n; &7 = weapon
    number\r\n; |$40 = phase A\r\n; |$80 = phase B\r\n; Usually both phases are used
    at same time, but Gutsblock has two phases.\r\n\r\n\r\nTotalObjects               
    = $54\r\n\r\nObjectSpriteNum             = $400\r\nObjectFlags                
    = $420 ;also used for boss moves in stage select\r\nObjectUnknown440           
    = $440 ; low 4 bits: >0 if taken damage this frame\r\n                                  
    ; high 4 bits: possibly invulnerability timer?\r\nObjectPosScreen            
    = $460 ; aka. screen ID\r\nObjectPosX                  = $480\r\nObjectPosXfraction         
    = $4A0 ;Xpos fractional part\r\nObjectXSpeed                = $4C0\r\nObjectXSpeedFraction       
    = $4E0 \r\nObjectPosY                  = $600\r\nObjectPosYfraction         
    = $620\r\nObjectFireDelay             = $640 ;uncertain!! but delays objects
    somehow\r\nObjectYSpeedFraction        = $660\r\nObjectYSpeed               
    = $680\r\nObjectLifeCycleCounter      = $6A0\r\nObjectLifeMeter             =
    $6C0\r\nObjectType                  = $6E0 ; enemy ID \r\n\r\nLiftIndex        
    = $9A ;number of active lifts\r\nLiftUnknown9B     = $9B ;not table\r\nLiftXSpeedFraction=
    $9C ;not table\r\nLiftXSpeed        = $9D ;not table\r\nLiftUnknown9E     = $9E
    ;not table\r\nLiftPosScreen     = $700 ;table\r\nLiftPosX          = $708 ;table\r\nLiftPosY         
    = $710 ;table\r\nLiftDirection     = $718 ;table\r\n\r\nLiftXMovement       =
    $06 ;(temporary meaning..)\r\nLiftXScreenMovement = $07\r\n\r\n\r\nMagnetBeamLength       
    = $5A0\r\nMagnetBeamAge           = $5B0 ;0=not active, $9C = initial age\r\nMagnetBeamPosX         
    = $5C0\r\nMagnetBeamPosScreen     = $5D0\r\nMagnetBeamCyclePos      = $5E0\r\nMagnetBeamPosY         
    = $5F0\r\n\r\nIssuedSoundsList        = $580\r\nNumIssuedSounds         = $45\r\n\r\nMegamanBlinkState          
    = $55       ; Timer: 0 = not blinking. #$6F = max\r\nBossBlinkState             
    = $56\r\n\r\nSpriteTable             = $0200\r\nCurrentSpriteData       = SpriteTable+4
    (array of 4-byte records)\r\n; Structure:\r\n;   0 = Y coordinate\r\n;   1 =
    Tile number\r\n;   2 = Sprite attributes\r\n;   3 = X coordinate \r\n\r\n\r\nRawPPUtransferSize     
    = $5E\r\nRawPPUtransferAddress   = $0380\r\nRawPPUtransferBuf       = $0382\r\n\r\nTSAPPUtransferSize     
    = $1C\r\nTSAPPUtransfer0NTaddress   = $0300\r\nTSAPPUtransfer0NTdata      = $0302\r\nTSAPPUtransfer0AttrAddress
    = $0312\r\nTSAPPUtransfer0AttrData    = $0314\r\nTSAPPUtransfer0AttrAndMask =
    $0314\r\nTSAPPUtransfer0AttrOrMask  = $0315\r\n\r\nPPU2000value                      
    = $FF\r\nPPU2001value                       = $FE\r\n\r\n\r\nSpritePalettes 
    = $03E0\r\nBGPalettes      = $03D0\r\nUnknownPalettes = $03F0\r\n\r\nGutsmanStompCounter    
    = $47\r\nMegamanWalkTimer        = $94 ;perhaps this meaning.\r\nMegamanStallTimer      
    = $95 ;perhaps this meaning.\r\n\r\nCurrentTileState        = $30\r\n;CurrentTileState
    bits are:\r\n;  #$10: (bit 4) - Rockman is climbing up\r\n;  #$08: (bit 3) -
    Ladder above that\r\n;  #$04: (bit 2) - Ladder above\r\n;  #$02: (bit 1) - Ladder
    here\r\n;  #$01: (bit 0) - there is a ladder below this tile\r\n;\r\n; If both
    bits 2,3 are clear, this is a ladder top (or not ladder)\r\n; If the value is
    #$01, it's a ladder top\r\n\r\n\r\nCurrentStage            = $31\r\nBossCurrentStrategy    
    = $3E ;doubles as the boss number\r\nBossVariable3F          = $3F ;unknown meaning\r\nBossVariable43         
    = $43 ; unknown meaning, indicates strategy somehow\r\nBossVariable44         
    = $44 ; counter of some kind\r\n\r\nFightingBossNum         = $AC\r\n; $AC =
    boss we're fighting (value gets set at boss fight, invalid otherwise)\r\n;  
    0 = Cutman\r\n;   1 = Iceman\r\n;   2 = Bombman\r\n;   3 = Fireman\r\n;   4 =
    Elecman(?)\r\n;   5 = Gutsman\r\n;   6 = Stone giant\r\n\r\n\r\nCurrentRoomPointer     
    = $06 ;two 16-bit pointers, occupying 06 07 08 09\r\nCurrentStripeEndType   
    = $26\r\n; &3:\r\n;   0=right\r\n;   1=up\r\n;   2=left\r\n;   3=down\r\n\r\n\r\nCapsuleObtained            
    = $AD\r\nTeleportEnteredFlag         = $B0\r\n\r\nGutsmanWeaponTargetActive =
    $52\r\n\r\n; In weapon select menu (accessed by START button),\r\n; $5F gets
    set as follows:\r\n\r\n;\r\n; 0 = \"P\"\r\n; 1 = Bombman\r\n; 2 = Elecman\r\n;
    3 = Gutsman\r\n; 4 =\r\n; 5 = Cutman\r\n; 6 =\r\n; 7 = Magnet beam\r\n\r\nScore                      
    = $72\r\n\r\nRoomBlockData        = $8000\r\nRoomBlockPals        = $8300\r\nRoomOrderTable      
    = $8C00\r\nRoomPointerTable     = $8C30\r\nRoomLayoutTable      = $8C70\r\nRoomSpritePalettes1 
    = $8CA0 ;normal stages\r\nRoomSpritePalettes2  = $8CD0 ;wily stages\r\nRoomTileTable1      
    = $8D00 ;normal stages\r\nRoomTileTable2       = $8D20 ;wily stages\r\nRoomMonsterIndex    
    = $8D40 ;something common to both\r\nRoomMonsterGraphics  = $8D80 ;something
    common to both\r\nRoomActives1         = $8E00 ;normal stages\r\nRoomActives2        
    = $8EA0 ;wily stages\r\nRoomShutterBlockData = $8F40\r\nRoomShutterBlockPals
    = $8F70\r\nRoomShutterInfo      = $8F80\r\n\r\n\r\n;;;;;;;;;;;; BANK 7 BEGIN
    ;;;;;;;;;;;;;;;;;;\r\n\r\nBank 7:\r\n 1C000-112k   loaded into memory $C000(always)\r\n
    |\r\n  - all the CODE of the game\r\n\r\n0001C000: .byte 0,1,2,3,4,5,6,7   ;This
    table must be present in ROM for bankswitching to work properly\r\n\r\nReset:\r\n0001C008:
    78        sei\r\n0001C009: A9 01     lda #$01\r\n0001C00B: 8D 00 20  sta $2000\r\n0001C00E:
    A9 06     lda #$06\r\n0001C010: 8D 01 20  sta $2001\r\n0001C013: A9 05     lda
    #$05\r\n0001C015: 8D 05 C0  sta $C005\r\n0001C018: 4C 00 90  jmp Reset2                                     
    ; $9000\r\n\r\n\r\n;\r\n; if MegamanStallTimer != 0 then don't get joypad input
    in this frame\r\n;\r\n; if ForcedInputFlag != 0 then Joypad0 = ForcedInputData\r\n;\r\n\r\n\r\nNextFrame\r\n0001C01B:
    A5 95     lda MegamanStallTimer\r\n0001C01D: D0 08     bne +                                      
    ; $C027\r\n0001C01F: A5 14     lda JoyPad0\r\n0001C021: 85 16     sta JoyPad0old\r\n0001C023:
    A5 15     lda JoyPad1\r\n0001C025: 85 17     sta JoyPad1old\r\n+\r\n\r\n\r\n;
    Wait until our NMI's done what an NMI's gotta do...\r\n0001C027: A9 00     lda
    #$00\r\n0001C029: 85 1F     sta NMI_GfxUpdateDone\r\n-\r\n0001C02B: A5 1F    
    lda NMI_GfxUpdateDone\r\n0001C02D: F0 FC     beq -                                      
    ; $0001C02B\r\n\r\n0001C02F: A5 68     lda ForcedInputFlag\r\n0001C031: F0 07    
    beq +                                       ; $0001C03A\r\n0001C033: A5 69    
    lda ForcedInputData\r\n0001C035: 85 14     sta JoyPad0\r\n0001C037: 4C 4B C0 
    jmp ++                                      ; $C04B\r\n\r\n+\r\n0001C03A: A5
    95     lda MegamanStallTimer\r\n0001C03C: D0 1B     bne +++                                    
    ; $0001C059\r\n0001C03E: 98        tya\r\n0001C03F: 48        pha\r\n0001C040:
    8A        txa\r\n0001C041: 48        pha\r\n0001C042: 20 8D D5  jsr ReadJoypads                            
    ; $D58D\r\n0001C045: 68        pla\r\n0001C046: AA        tax\r\n0001C047: 68       
    pla\r\n\r\n0001C048: A8        tay\r\n0001C049: A5 14     lda JoyPad0\r\n\r\n++\r\n0001C04B:
    45 16     eor JoyPad0old\r\n0001C04D: 25 14     and JoyPad0\r\n0001C04F: 85 18    
    sta JoyD0\r\n0001C051: A5 15     lda Joypad1\r\n0001C053: 45 17     eor JoyPad1old\r\n0001C055:
    25 15     and Joypad1\r\n0001C057: 85 19     sta JoyD1\r\n\r\n+++\r\n0001C059:
    60        rts\r\n\r\n\r\nStageClear\r\n; What happens in regular stages.\r\n;1.
    Play item sound                                                  \r\n;2. Play
    stage clear music                                           \r\n;3. Load levelend
    gfx\r\n;4. Remove all objects except Megaman\r\n;5. Delay 383 frames\r\n;6. Hide
    energy bars\r\n;7. Draw first patch of text\r\n;8. Halt Megaman\r\n;9. Calculate
    score, 1000 points per frame\r\n;10. Delay 64 frames\r\n;11. Draw second patch
    of text\r\n;12. Calculate bonus pearls, one per frame (3000 points each)\r\n;13.
    Delay 383 frames\r\n;14. Reboot game without clearing game status\r\n;\r\n0001C05A:
    A9 00     lda #$00\r\n0001C05C: 85 3E     sta BossCurrentStrategy\r\n\r\n0001C05E:
    A9 FE     lda #$FE\r\n0001C060: 20 77 C4  jsr IssueSound                             
    ; $C477\r\n\r\n0001C063: A5 AC     lda FightingBossNum\r\n0001C065: C9 0A    
    cmp #$0A\r\n0001C067: D0 08     bne PlayStageClearMusic                     ;
    $0001C071\r\n\r\n0001C069: A9 00     lda #$00\r\n0001C06B: 20 77 C4  jsr IssueSound                             
    ; $C477\r\n\r\n0001C06E: 4C 79 C0  jmp ++                                     
    ; $C079\r\n\r\n; Play stage clear melody\r\nPlayStageClearMusic\r\n0001C071:
    A9 04     lda #$04\r\n0001C073: 20 77 C4  jsr IssueSound                             
    ; $C477\r\n\r\n0001C076: 20 04 C2  jsr ClearAllObjectsExceptMegaman           
    ; $C204\r\n\r\n++\r\n0001C079: A9 00     lda #$00\r\n0001C07B: 85 5C     sta
    $5C\r\n0001C07D: A9 B7     lda #$B7\r\n0001C07F: A2 0B     ldx #$0B\r\n0001C081:
    A0 08     ldy #$08\r\n0001C083: 20 BE F0  jsr DoPPUtransferRoutineF0BE\r\n0001C086:
    A5 AC     lda FightingBossNum\r\n0001C088: C9 0A     cmp #$0A\r\n0001C08A: D0
    0A     bne +                                       ; $C096\r\n; Whole game cleared?\r\n0001C08C:
    A9 FF     lda #$FF\r\n0001C08E: 20 16 D1  jsr TimeDelayWithAllObjectsHalted\r\n0001C091:
    A9 FF     lda #$FF\r\n0001C093: 20 16 D1  jsr TimeDelayWithAllObjectsHalted\r\n+
    ;Nope\r\n0001C096: A9 80     lda #$80\r\n0001C098: 20 16 D1  jsr TimeDelayWithAllObjectsHalted\r\n0001C09B:
    A9 FF     lda #$FF\r\n0001C09D: 20 16 D1  jsr TimeDelayWithAllObjectsHalted\r\n0001C0A0:
    A5 AC     lda FightingBossNum\r\n0001C0A2: C9 0A     cmp #$0A\r\n0001C0A4: D0
    08     bne +                                       ; $C0AE\r\n0001C0A6: 20 04
    C2  jsr ClearAllObjectsExceptMegaman            ; $C204\r\n\r\n0001C0A9: A9 F8    
    lda #$F8    ; Disable Megaman object\r\n0001C0AB: 8D 00 06  sta ObjectPosY+0                            
    ; $0600\r\n\r\n+\r\n0001C0AE: E6 BB     inc DrawScoreAndMetersFlag\r\n0001C0B0:
    A9 00     lda #$00\r\n0001C0B2: 85 2F     sta RefObjectNumber\r\n0001C0B4: A2
    02     ldx #$02 ;into the given slot\r\n0001C0B6: 20 63 C1  jsr SetNObjects\r\n\r\n0001C0B9:
    A2 05     ldx #$05\r\n-\r\n0001C0BB: 95 B5     sta $B5,x\r\n0001C0BD: CA       
    dex\r\n0001C0BE: 10 FB     bpl -                                           ;
    $C0BB\r\n\r\n0001C0C0: EE A0 06  inc ObjectLifeCycleCounter+0\r\n\r\n-\r\n0001C0C3:
    A2 00     ldx #$00\r\n0001C0C5: 20 81 C1  jsr LevelEndAddThousandPoints\r\n0001C0C8:
    20 AC C1  jsr $C1AC\r\n0001C0CB: 20 1B C0  jsr NextFrame                                 
    ; $C01B\r\n0001C0CE: C6 3D     dec LevelClearScoreInThousands\r\n0001C0D0: D0
    F1     bne -                                           ; $C0C3\r\n\r\n; wait
    1 second\r\n0001C0D2: A9 40     lda #$40\r\n0001C0D4: 20 0F C2  jsr TimeDelayNoMove                            
    ; $C20F\r\n\r\n0001C0D7: A9 00     lda #$00\r\n0001C0D9: 85 2F     sta RefObjectNumber\r\n0001C0DB:
    A2 05     ldx #$05\r\n0001C0DD: 20 63 C1  jsr SetNObjects\r\n0001C0E0: EE A0
    06  inc ObjectLifeCycleCounter+0\r\n0001C0E3: A5 AE     lda BonusPearlCount\r\n0001C0E5:
    F0 12     beq +                                           ; $C0F9\r\n-\r\n0001C0E7:
    A2 03     ldx #$03\r\n0001C0E9: 20 81 C1  jsr LevelEndAddThousandPoints\r\n0001C0EC:
    20 AC C1  jsr $C1AC\r\n0001C0EF: 20 BE C1  jsr $C1BE\r\n0001C0F2: 20 1B C0  jsr
    NextFrame                                   ; $C01B\r\n0001C0F5: C6 AE     dec
    BonusPearlCount\r\n0001C0F7: D0 EE     bne -                                          
    ; $C0E7\r\n+\r\n0001C0F9: 20 31 D1  jsr UpdateGraphics                             
    ; $D131\r\n0001C0FC: 20 AC C1  jsr $C1AC\r\n0001C0FF: 20 BE C1  jsr $C1BE\r\n\r\n;
    Wait 6-7 seconds\r\n0001C102: A9 FF     lda #$FF\r\n0001C104: 20 0F C2  jsr TimeDelayNoMove                              
    ; $C20F\r\n0001C107: A9 80     lda #$80\r\n0001C109: 20 0F C2  jsr TimeDelayNoMove                              
    ; $C20F\r\n\r\n0001C10C: 20 95 D4  jsr DisableNMI&PPU                         
    ; $D495\r\n0001C10F: C6 BB     dec DrawScoreAndMetersFlag\r\n\r\n0001C111: A2
    FF     ldx #$FF\r\n0001C113: 9A        txs\r\n\r\n0001C114: A9 05     lda #$05\r\n0001C116:
    8D 05 C0  sta $C005\r\n0001C119: 85 42     sta CurrentBank\r\n\r\n0001C11B: A6
    31     ldx CurrentStage\r\n0001C11D: E0 09     cpx #$09\r\n0001C11F: F0 16    
    beq +                                   ; $0001C137\r\n0001C121: E0 06     cpx
    #$06\r\n0001C123: B0 16     bcs ++                                  ; $0001C13B\r\n\r\n;
    Add new weapon/set boss defeated flag\r\n0001C125: A5 5D     lda WeaponsOwned\r\n0001C127:
    1D 48 C1  ora WeaponsOwnedTab,x\r\n0001C12A: 85 5D     sta WeaponsOwned\r\n\r\n0001C12C:
    A9 00     lda #$00\r\n0001C12E: 85 BC     sta IgnoreStageSelection\r\n0001C130:
    85 55     sta MegamanBlinkState\r\n0001C132: 85 68     sta ForcedInputFlag\r\n0001C134:
    4C 5A 90  jmp $905A\r\n\r\n; Prepare for ending\r\n+\r\n0001C137: E6 31     inc
    CurrentStage\r\n0001C139: C6 BB     dec DrawScoreAndMetersFlag\r\n\r\n; Prepare
    for Wilystage\r\n++\r\n0001C13B: A9 00     lda #$00\r\n0001C13D: 85 B4     sta
    UseTempScrollX\r\n0001C13F: 85 AB     sta LastRestartPointType\r\n0001C141: 85
    68     sta ForcedInputFlag\r\n0001C143: E6 31     inc CurrentStage\r\n0001C145:
    4C 6A 90  jmp $906A\r\n\r\n;C148                    C    I    B    F    E   
    G\r\nWeaponsOwnedTab  .byte $20, $10, $02, $40, $04, $08 ;See also: Lbl_b50d
    \r\n;C14E\r\nIndexIntoTheActiveThatPreventsEscapingRematch\r\n    .byte 0*6,
    5*6, 3*6, 4*6, 1*6, 6*6 ;indexes into RoomActiveTable\r\n\r\n; Objects in order:\r\n;   
    0: HP bar\r\n;    1: Score\r\nXPosTable1      .db $24, $80, $A0, $80, $88\r\nYPosTable1     
    .db $A0, $40, $58, $68, $80\r\nSpriteNumTable1     .db $80, $87, $89, $88, $8A,
    $89 ; \r\nSetNObjects\r\n0001C163: 20 7B F6  jsr InitActor\r\n0001C166: BD 53
    C1  lda XPosTable1,x\r\n0001C169: 9D 80 04  sta ObjectPosX,x\r\n0001C16C: BD
    58 C1  lda YPosTable1,x\r\n0001C16F: 9D 00 06  sta ObjectPosY,x\r\n0001C172:
    BD 5D C1  lda SpriteNumTable1,x\r\n0001C175: 9D 00 04  sta ObjectSpriteNum,x\r\n0001C178:
    A9 00     lda #$00\r\n0001C17A: 9D 20 04  sta ObjectFlags,x\r\n0001C17D: CA       
    dex\r\n0001C17E: D0 E3     bne SetNObjects\r\n\r\n0001C180: 60        rts\r\n\r\n\r\n;
    X = index to the digits\r\nLevelEndAddThousandPoints\r\n0001C181: A0 03     ldy
    #$03\r\n0001C183: 18        clc\r\n0001C184: A9 01     lda #$01\r\n-\r\n0001C186:
    75 B5     adc $B5,x\r\n0001C188: C9 0A     cmp #$0A\r\n0001C18A: 90 02     bcc
    +                                       ; $0001C18E\r\n0001C18C: E9 0A     sbc
    #$0A\r\n+\r\n0001C18E: 95 B5     sta $B5,x\r\n0001C190: A9 00     lda #$00\r\n0001C192:
    E8        inx\r\n0001C193: 88        dey\r\n0001C194: D0 F0     bne -                                      
    ; $0001C186\r\n\r\n0001C196: A9 10     lda #$10        ; Add 1,000 points to
    score\r\n0001C198: 85 05     sta $05\r\n0001C19A: 20 40 D4  jsr IncreaseScore                          
    ; $D440\r\n\r\n0001C19D: 20 31 D1  jsr UpdateGraphics                         
    ; $D131\r\n0001C1A0: A5 23     lda FrameCounter\r\n0001C1A2: 29 03     and #$03\r\n0001C1A4:
    D0 05     bne +                                       ; $C1AB\r\n0001C1A6: A9
    21     lda #$21        ; SFX for points\r\n0001C1A8: 20 77 C4  jsr IssueSound                             
    ; $C477\r\n+\r\n0001C1AB: 60        rts\r\n\r\n\r\n\r\n\r\n0001C1AC: A2 02    
    ldx #$02    ; 3 sprites\r\n0001C1AE: 86 0E     stx $0E\r\n0001C1B0: A0 C0    
    ldy #$C0    ; spritepage index = #$C4\r\n0001C1B2: A9 68     lda #$68    ; X
    position = #$68\r\n0001C1B4: 85 0C     sta $0C\r\n0001C1B6: A9 50     lda #$50   
    ; Y position = #$50\r\n0001C1B8: 85 0D     sta $0D\r\n0001C1BA: 20 DD C1  jsr
    ProcessSprites                          ; $C1DD\r\n0001C1BD: 60        rts\r\n\r\n;\r\n;
    \r\n;\r\n\r\n0001C1BE: A2 04     ldx #$04    \r\n0001C1C0: A9 01     lda #$01   
    ; 2 sprites \r\n0001C1C2: 85 0E     sta $0E\r\n0001C1C4: A9 78     lda #$78\r\n0001C1C6:
    85 0D     sta $0D\r\n0001C1C8: A9 70     lda #$70\r\n0001C1CA: 85 0C     sta
    $0C\r\n0001C1CC: 20 DD C1  jsr ProcessSprites                          ; $C1DD\r\n\r\n0001C1CF:
    A2 04     ldx #$04\r\n0001C1D1: A9 01     lda #$01\r\n0001C1D3: 85 0E     sta
    $0E\r\n0001C1D5: A9 60     lda #$60\r\n0001C1D7: 85 0D     sta $0D\r\n0001C1D9:
    A9 90     lda #$90\r\n0001C1DB: 85 0C     sta $0C\r\n                    ;continues
    to ProcessSprites\r\n\r\n;\r\n;\r\n; Process sprite information (write to spritepage)\r\n;\r\n;
    $0C = X position\r\n; $0D = Y position\r\n;\r\n; $0E = Number of sprites - 1\r\n;\r\n;
    Palette # = 1\r\n; \r\n; X = index into $B5\r\n;\r\n\r\n\r\nProcessSprites\r\n-\r\n0001C1DD:
    B5 B5     lda $B5,x       ; Get tile number\r\n0001C1DF: 09 F0     ora #$F0\r\n0001C1E1:
    99 05 02  sta CurrentSpriteData+1,y\r\n0001C1E4: A5 0C     lda $0C\r\n0001C1E6:
    99 07 02  sta CurrentSpriteData+3,y\r\n0001C1E9: A5 0D     lda $0D\r\n0001C1EB:
    99 04 02  sta CurrentSpriteData+0,y\r\n0001C1EE: A9 01     lda #$01\r\n0001C1F0:
    99 06 02  sta CurrentSpriteData+2,y\r\n0001C1F3: C8        iny\r\n0001C1F4: C8       
    iny\r\n0001C1F5: C8        iny\r\n0001C1F6: C8        iny\r\n0001C1F7: CA       
    dex\r\n0001C1F8: 18        clc\r\n0001C1F9: A5 0C     lda $0C         ; X position
    += 8\r\n0001C1FB: 69 08     adc #$08\r\n0001C1FD: 85 0C     sta $0C\r\n0001C1FF:
    C6 0E     dec $0E\r\n0001C201: 10 DA     bpl -                                          
    ; $C1DD\r\n\r\n0001C203: 60        rts\r\n\r\n\r\n; Clears all objects except
    Megaman\r\n\r\nClearAllObjectsExceptMegaman\r\n0001C204: A9 F8     lda #$F8\r\n0001C206:
    A2 1F     ldx #$1F\r\n-\r\n0001C208: 9D 00 06  sta ObjectPosY,x\r\n0001C20B:
    CA        dex\r\n0001C20C: D0 FA     bne -                               ; $0001C208\r\n0001C20E:
    60        rts\r\n\r\n\r\n;\r\n; A = number of frames to freeze gameplay for\r\n;\r\n\r\nTimeDelayNoMove\r\n0001C20F:
    85 3C     sta MiscCounter1\r\n-\r\n0001C211: 20 1B C0  jsr NextFrame                     
    ; $C01B\r\n0001C214: C6 3C     dec MiscCounter1\r\n0001C216: D0 F9     bne -                             
    ; $C211\r\n0001C218: 60        rts\r\n\r\n\r\nMegaManKilled\r\n0001C219: A9 FE    
    lda #$FE\r\n0001C21B: 20 77 C4  jsr IssueSound                      ; $C477\r\n0001C21E:
    A9 FF     lda #$FF\r\n0001C220: 20 77 C4  jsr IssueSound                     
    ; $C477\r\n0001C223: A9 20     lda #$20\r\n0001C225: 20 16 D1  jsr TimeDelayWithAllObjectsHalted\r\n\r\n0001C228:
    A9 31     lda #$31        ; Mega Man exploding\r\n0001C22A: 20 77 C4  jsr IssueSound                     
    ; $C477\r\n\r\n0001C22D: A9 00     lda #$00\r\n0001C22F: 85 59     sta $59\r\n0001C231:
    A9 7D     lda #$7D\r\n0001C233: 85 5A     sta $5A\r\n0001C235: 20 2A C3  jsr
    AtomicExplodeActor\r\n\r\n0001C238: A9 00     lda #$00\r\n0001C23A: 85 45    
    sta NumIssuedSounds\r\n\r\n0001C23C: A9 F8     lda #$F8        ; Hide Megaman\r\n0001C23E:
    8D 00 06  sta ObjectPosY+0                                 ; $0600\r\n\r\n0001C241:
    A9 C0     lda #$C0\r\n0001C243: 85 3C     sta MiscCounter1\r\n-\r\n0001C245:
    20 17 C3  jsr TimeDelayC317\r\n0001C248: D0 FB     bne -                                      
    ; $0001C245\r\n\r\n0001C24A: 20 95 D4  jsr DisableNMI&PPU                         
    ; $D495\r\n\r\n0001C24D: A9 00     lda #$00\r\n0001C24F: 85 47     sta GutsmanStompCounter\r\n0001C251:
    85 B4     sta UseTempScrollX\r\n0001C253: 85 55     sta MegamanBlinkState\r\n0001C255:
    85 94     sta MegamanWalkTimer\r\n0001C257: 85 95     sta MegamanStallTimer\r\n0001C259:
    C6 A6     dec ExtraLives\r\n\r\n\r\n0001C25B: A5 A6     lda ExtraLives  ; Branch
    if no lives left\r\n0001C25D: 30 72     bmi +++                                    
    ; $C2D1\r\n\r\n0001C25F: 20 5B C7  jsr WriteChr                               
    ; $C75B\r\n0001C262: A9 00     lda #$00\r\n0001C264: 85 AB     sta LastRestartPointType\r\n0001C266:
    85 59     sta $59\r\n\r\n0001C268: AD 60 04  lda ObjectPosScreen+0                    
    ; $0460\r\n0001C26B: A6 31     ldx CurrentStage\r\n0001C26D: DD D4 C2  cmp StageCheckPointA,x  
    \r\n0001C270: 90 35     bcc ++                                      ; $C2A7\r\n0001C272:
    A0 0C     ldy #$0C\r\n0001C274: DD E0 C2  cmp StageCheckPointB,x\r\n0001C277:
    90 02     bcc +                                       ; $C27B\r\n0001C279: A0
    18     ldy #$18\r\n+\r\n0001C27B: 98        tya\r\n0001C27C: 85 AB     sta LastRestartPointType\r\n0001C27E:
    18        clc\r\n0001C27F: 65 31     adc CurrentStage\r\n0001C281: AA       
    tax\r\n0001C282: BD EB C2  lda FirstScreenScreenTable,x\r\n0001C285: 8D 60 04 
    sta ObjectPosScreen+0                     ; $0460\r\n0001C288: 20 58 C6  jsr
    SetupEnemyGraphicsPointer\r\n-\r\n0001C28B: 20 C4 C6  jsr LoadEnemyGraphics\r\n0001C28E:
    20 AF D5  jsr DoRawPPUtransfer\r\n0001C291: A5 59     lda $59\r\n0001C293: C9
    28     cmp #$28\r\n0001C295: D0 F4     bne -                                          
    ; $C28B\r\n\r\n0001C297: 20 C4 C6  jsr LoadEnemyGraphics\r\n0001C29A: A9 2C    
    lda #$2C\r\n0001C29C: 8D E1 03  sta SpritePalettes + $1\r\n0001C29F: A9 11    
    lda #$11\r\n0001C2A1: 8D E2 03  sta SpritePalettes + $2\r\n0001C2A4: 20 0A D6 
    jsr UpdatePalettes                              ; $D60A\r\n\r\n++\r\n0001C2A7:
    A9 00     lda #$00\r\n0001C2A9: 85 19     sta JoyD1\r\n0001C2AB: A2 FF     ldx
    #$FF\r\n0001C2AD: 9A        txs\r\n0001C2AE: A9 05     lda #$05\r\n0001C2B0:
    85 42     sta CurrentBank\r\n0001C2B2: 8D 05 C0  sta $C005\r\n0001C2B5: A5 AB    
    lda LastRestartPointType\r\n0001C2B7: C9 0C     cmp #$0C\r\n0001C2B9: B0 03    
    bcs +                                   ; $C2BE\r\n-\r\n0001C2BB: 4C 7E 90  jmp
    StageBegin\r\n\r\n+\r\n0001C2BE: A5 31     lda CurrentStage\r\n0001C2C0: C9 07    
    cmp #$07\r\n0001C2C2: F0 04     beq +                                   ; $0001C2C8\r\n0001C2C4:
    C9 09     cmp #$09\r\n0001C2C6: D0 06     bne ++                                 
    ; $0001C2CE\r\n+\r\n0001C2C8: A5 AB     lda LastRestartPointType\r\n0001C2CA:
    C9 0D     cmp #$0D\r\n0001C2CC: B0 ED     bcs -                                  
    ; $0001C2BB\r\n++\r\n0001C2CE: 4C 81 90  jmp StageBeginFromDeath\r\n\r\n;Game
    over\r\n+++\r\n0001C2D1: 4C 38 90  jmp GameOver\r\n\r\n\r\n; Table that says
    what screen# Megaman's current screen# must be above or\r\n; equal to in order
    for him to restart from it...\r\n\r\n\r\n; Cutman   #0\r\n; Iceman   #1\r\n;
    Bombman  #2\r\n; Fireman  #3\r\n; Elecman  #4\r\n; Gutsman  #5\r\n\r\n\r\nStageCheckPointA
    ;at C2D4\r\n    .byte $0A,$0A,$0E,$08,$07,$0A\r\n    .byte $22,$24,$2F,$1D,$1D,$1D\r\nStageCheckPointB\r\n   
    .byte $14,$14,$14,$10,$14,$0F\r\n    .byte $27,$29,$2F,$21,$1C\r\nFirstScreenScreenTable
    ;at C2EB\r\n; Initial screen start?\r\n    .byte $00,$00,$00,$00,$00,$00\r\n   
    .byte $18,$18,$18,$14,$18,$1E  ;Stored into ObjectPosScreen+0 or CurrentBeginScreen\r\n;
    Restart point A\r\n    .byte $0A,$0A,$0E,$08,$07,$0A\r\n    .byte $22,$24,$2E,$1D,$1D,$1D\r\n;
    Restart point B\r\n    .byte $14,$14,$14,$10,$14,$0F\r\n    .byte $26,$28,$2E,$21,$20\r\n\r\nC30E_table:\r\n   
    .byte $FB,$05,$00 ;X increment of some kind\r\nC311_table:\r\n    .byte $FF,$00,$00
    ;screen increment of some kind\r\nC314_table:\r\n    .byte $F8,$F4,$06 ;Y increment
    of some kind\r\n\r\n\r\nTimeDelayC317\r\n0001C317: A5        lda RefObjectNumber\r\n0001C319:
    D0 03     bne +                                           ; $C31E\r\n0001C31B:
    20 8C DB  jsr RunBossAI\r\n\r\n+\r\n0001C31E: 20 EA 98  jsr RunEnemyAI                                  
    ; $98EA\r\n0001C321: 20 31 D1  jsr UpdateGraphics                             
    ; $D131\r\n0001C324: 20 1B C0  jsr NextFrame                                  
    ; $C01B\r\n0001C327: C6 3C     dec MiscCounter1\r\n0001C329: 60        rts\r\n\r\n\r\nAtomicExplodeActor: 
    ;Ah, explosions probably!\r\n\r\n0001C32A: A9 0C     lda #$0C   ;How many atoms
    to create?\r\n0001C32C: 85 3C     sta MiscCounter1\r\n-\r\n0001C32E: A5 3C    
    lda MiscCounter1\r\n0001C330: 29 03     and #$03\r\n0001C332: D0 43     bne +                                          
    ; $C377\r\n0001C334: A5 59     lda $59\r\n0001C336: 85 2F     sta RefObjectNumber\r\n0001C338:
    A2 02     ldx #$02\r\n0001C33A: 20 76 C5  jsr FindFreeObject                             
    ; $C576\r\n0001C33D: B0 38     bcs +                                          
    ; $C377\r\n0001C33F: 20 7B F6  jsr InitActor\r\n0001C342: A5 5A     lda $5A\r\n0001C344:
    9D 00 04  sta ObjectSpriteNum,x\r\n0001C347: A9 08     lda #$08\r\n0001C349:
    9D 20 04  sta ObjectFlags,x\r\n0001C34C: A9 10     lda #$10\r\n0001C34E: 9D 40
    04  sta ObjectUnknown440,x\r\n0001C351: A5 3C     lda MiscCounter1\r\n0001C353:
    4A        lsr a\r\n0001C354: 4A        lsr a\r\n0001C355: A8        tay\r\n\r\n0001C356:
    BD 80 04  lda ObjectPosX,x\r\n0001C359: 79 0D C3  adc C30E_table-1,y\r\n0001C35C:
    9D 80 04  sta ObjectPosX,x\r\n\r\n0001C35F: BD 60 04  lda ObjectPosScreen,x\r\n0001C362:
    79 10 C3  adc C311_table-1,y\r\n0001C365: 9D 60 04  sta ObjectPosScreen,x\r\n\r\n0001C368:
    18        clc\r\n0001C369: BD 00 06  lda ObjectPosY,x\r\n0001C36C: 79 13 C3 
    adc C314_table-1,y\r\n0001C36F: 9D 00 06  sta ObjectPosY,x\r\n\r\n0001C372: A0
    08     ldy #$08\r\n0001C374: 20 33 F5  jsr InitObjectDefaultSpeed\r\n+\r\n0001C377:
    20 17 C3  jsr TimeDelayC317\r\n0001C37A: D0 B2     bne -                                          
    ; $C32E\r\n\r\n0001C37C: A9 0B     lda #$0B\r\n0001C37E: 85 0C     sta $0C\r\n0001C380:
    A5 5A     lda $5A\r\n0001C382: 85 0D     sta $0D\r\n0001C384: A9 00     lda #$00\r\n0001C386:
    85 0E     sta $0E\r\n-\r\n0001C388: A4 59     ldy $59\r\n0001C38A: A2 02    
    ldx #$02\r\n0001C38C: 20 76 C5  jsr FindFreeObject                             
    ; FindFreeObject\r\n0001C38F: B0 05     bcs $0001C396\r\n0001C391: 20 41 F8 
    jsr CreateExplosionObject\r\n0001C394: 10 F2     bpl -\r\n\r\n0001C396: A9 12    
    lda #$12        ; Explosion\r\n0001C398: 20 77 C4  jsr IssueSound                             
    ; $C477\r\n0001C39B: 60        rts\r\n\r\n\r\n;\r\n; \r\n;\r\n\r\nSwitchBankStage
    ;doesn't modify P,A. Modifies X.\r\n0001C39C: 08        php\r\n0001C39D: 48       
    pha\r\n0001C39E: 8A        txa\r\n0001C39F: 48        pha\r\n0001C3A0: A5 31    
    lda CurrentStage\r\n\r\n0001C3A2: C9 06     cmp #$06        ; bank=(stage%6)\r\n0001C3A4:
    90 02     bcc +                                       ; $C3A8\r\n0001C3A6: E9
    06     sbc #$06\r\n+\r\n\r\n0001C3A8: AA        tax\r\n0001C3A9: 85 42     sta
    CurrentBank\r\n0001C3AB: 9D 00 C0  sta $C000,x\r\n0001C3AE: 68        pla\r\n0001C3AF:
    AA        tax\r\n0001C3B0: 68        pla\r\n0001C3B1: 28        plp\r\n0001C3B2:
    60        rts\r\n\r\n\r\nSwitchBank05\r\n0001C3B3: 08        php\r\n0001C3B4:
    48        pha\r\n0001C3B5: A9 05     lda #$05\r\n0001C3B7: 85 42     sta CurrentBank\r\n0001C3B9:
    8D 05 C0  sta $C005\r\n0001C3BC: 68        pla\r\n0001C3BD: 28        plp\r\n0001C3BE:
    60        rts\r\n\r\n\r\n; Handle weapon select screen?\r\nInvokeWeaponSelectDialog\r\n0001C3BF:
    A9 06     lda #$06\r\n0001C3C1: 85 42     sta CurrentBank\r\n0001C3C3: 8D 06
    C0  sta $C006\r\n\r\n0001C3C6: A5 AC     lda FightingBossNum\r\n0001C3C8: C9
    0A     cmp #$0A\r\n0001C3CA: F0 0E     beq ++                                     
    ; $C3DA\r\n\r\n0001C3CC: A5 31     lda CurrentStage\r\n0001C3CE: C9 09     cmp
    #$09\r\n0001C3D0: D0 04     bne +                                       ; $C3D6\r\n0001C3D2:
    C5 AC     cmp FightingBossNum\r\n0001C3D4: F0 04     beq ++                                     
    ; $C3DA\r\n\r\n+\r\n0001C3D6: C9 06     cmp #$06\r\n0001C3D8: D0 06     bne +                                      
    ; $C3E0\r\n\r\n++\r\n0001C3DA: A5 3E     lda BossCurrentStrategy\r\n0001C3DC:
    F0 02     beq +                                       ; $C3E0\r\n0001C3DE: E6
    1B     inc ScrollPosScreen\r\n+\r\n0001C3E0: 4C F3 BF  jmp DoWeaponSelectDialog\r\n\r\n;
    Arrived from bank 6\r\nLbl_c3e3:\r\n0001C3E3: A5 AC     lda FightingBossNum\r\n0001C3E5:
    C9 0A     cmp #$0A\r\n0001C3E7: F0 0E     beq ++                                     
    ; $C3F7\r\n0001C3E9: A5 31     lda CurrentStage\r\n0001C3EB: C9 09     cmp #$09\r\n0001C3ED:
    D0 04     bne +                                       ; $C3F3\r\n0001C3EF: C5
    AC     cmp FightingBossNum\r\n0001C3F1: F0 04     beq ++                                     
    ; $C3F7\r\n+\r\n0001C3F3: C9 06     cmp #$06\r\n0001C3F5: D0 06     bne +++                                    
    ; $C3FD\r\n++\r\n0001C3F7: A5 3E     lda BossCurrentStrategy\r\n0001C3F9: F0
    02     beq +++                                     ; $C3FD\r\n0001C3FB: C6 1A    
    dec ScrollPosX\r\n+++\r\n0001C3FD: 4C B3 C3  jmp SwitchBank05                           
    ; $C3B3\r\n\r\n\r\n; Arrived from bank 6\r\nLbl_c400\r\n0001C400: AA        tax\r\n0001C401:
    85 42     sta CurrentBank\r\n0001C403: 9D 00 C0  sta $C000,x\r\n0001C406: A2
    00     ldx #$00\r\n-\r\n0001C408: B1 06     lda (CurrentRoomPointer),y\r\n0001C40A:
    9D 82 03  sta RawPPUtransferBuf,x\r\n0001C40D: C8        iny\r\n0001C40E: E8       
    inx\r\n0001C40F: E0 10     cpx #$10\r\n0001C411: D0 F5     bne -                                      
    ; $C408\r\nSwitchBank6_a\r\n0001C413: A9 06     lda #$06\r\n0001C415: 85 42    
    sta CurrentBank\r\n0001C417: 8D 06 C0  sta $C006\r\n0001C41A: 60        rts\r\n\r\nDrawBlockFromActiveLevelMap_Bank06callback\r\n0001C41B:
    20 E8 CD  jsr DrawBlockFromActiveLevelMap\r\nSwitchBank6_b\r\n0001C41E: A9 06    
    lda #$06\r\n0001C420: 85 42     sta CurrentBank\r\n0001C422: 8D 06 C0  sta $C006\r\n0001C425:
    60        rts\r\n\r\n\r\nInitEndGameScene\r\n0001C426: A9 06     lda #$06\r\n0001C428:
    85 42     sta CurrentBank\r\n0001C42A: 8D 06 C0  sta $C006\r\n0001C42D: 4C F0
    BF  jmp Lbl_bff0\r\n\r\nTeleportToStage_Bank06callback\r\n0001C430: 20 E0 C4 
    jsr TeleportToStage                             ; $C4E0\r\n0001C433: 4C 56 C4 
    jmp SwitchBank06_c\r\n\r\nLbl_c436\r\n0001C436: 4C 7B F6  jmp InitActor\r\n\r\nLbl_c439\r\n0001C439:
    20 B3 C3  jsr SwitchBank05                                ; $C3B3\r\n0001C43C:
    20 6D 9E  jsr ObjectUpdateMovementLeft\r\n0001C43F: 20 8F 98  jsr AutoCenterScreen\r\nLbl_c442\r\n0001C442:
    20 31 D1  jsr UpdateGraphics                              ; $D131\r\n0001C445:
    20 1B C0  jsr NextFrame                                   ; $C01B\r\n0001C448:
    E6 BD     inc $BD\r\n0001C44A: A5 BD     lda $BD\r\n0001C44C: C9 3E     cmp #$3E\r\n0001C44E:
    D0 06     bne SwitchBank06_c\r\n0001C450: E6 BE     inc $BE\r\n0001C452: A9 00    
    lda #$00\r\n0001C454: 85 BD     sta $BD\r\nSwitchBank06_c\r\n0001C456: A9 06    
    lda #$06\r\n0001C458: 85 42     sta CurrentBank\r\n0001C45A: 8D 06 C0  sta $C006\r\n0001C45D:
    60        rts\r\n\r\nLbl_c45e\r\n; reset the current stage number?\r\n0001C45E:
    A9 00     lda #$00\r\n0001C460: 85 31     sta CurrentStage\r\n0001C462: 4C 0C
    C1  jmp $C10C\r\n\r\n\r\n\r\n; inc $6A0 for every object except Megaman\r\n\r\nLifeCycleTick_forEnemies\r\n0001C465:
    A2 01     ldx #$01\r\n-\r\n0001C467: BD 00 06  lda ObjectPosY,x\r\n0001C46A:
    C9 F8     cmp #$F8\r\n0001C46C: F0 03     beq +                                          
    ; $C471\r\n0001C46E: FE A0 06  inc ObjectLifeCycleCounter,x\r\n+\r\n0001C471:
    E8        inx\r\n0001C472: E0 20     cpx #$20\r\n0001C474: D0 F1     bne -                                          
    ; $C467\r\n0001C476: 60        rts\r\n\r\n\r\n;\r\n; Adds the sound with sound
    ID = A to the list of sounds to be issued\r\n;\r\n\r\nIssueSound\r\n0001C477:
    A6 45     ldx NumIssuedSounds     ; Max 16 sounds in a frame\r\n0001C479: E0
    10     cpx #$10\r\n0001C47B: F0 05     beq +                                  
    ; $0001C482\r\n0001C47D: 9D 80 05  sta IssuedSoundsList,x\r\n0001C480: E6 45    
    inc NumIssuedSounds\r\n+\r\n0001C482: 60        rts\r\n\r\n\r\nInitStagePaletteAndActives\r\n0001C483:
    20 9C C3  jsr SwitchBankStage                     ; $C39C\r\n0001C486: A5 31    
    lda CurrentStage\r\n0001C488: C9 06     cmp #$06\r\n0001C48A: 90 0B     bcc +                                  
    ; $C497\r\n0001C48C: A9 D0     lda #(RoomSpritePalettes2.lo)\r\n0001C48E: 85
    35     sta $35\r\n0001C490: A9 8C     lda #(RoomSpritePalettes2.hi)\r\n0001C492:
    85 36     sta $36\r\n0001C494: 4C 9F C4  jmp ++                                 
    ; $C49F\r\n+\r\n0001C497: A9 A0     lda #(RoomSpritePalettes1.lo)\r\n0001C499:
    85 35     sta $35\r\n0001C49B: A9 8C     lda #(RoomSpritePalettes1.hi)\r\n0001C49D:
    85 36     sta $36\r\n++\r\n\r\n; Write both BG and sprite palette\r\n0001C49F:
    A9 20     lda #$20\r\n0001C4A1: 20 47 D6  jsr WritePalette                               
    ; $D647\r\n;\r\n; Copies palette into RAM for continous updates? (only affects
    BG palette)\r\n;\r\n0001C4A4: A0 2F     ldy #$2F\r\n-\r\n0001C4A6: B1 35    
    lda ($35),y\r\n0001C4A8: 99 D0 03  sta BGPalettes,y\r\n0001C4AB: 88        dey\r\n0001C4AC:
    10 F8     bpl -                                           ; $C4A6\r\n\r\n0001C4AE:
    A5 31     lda CurrentStage\r\n0001C4B0: C9 06     cmp #$06\r\n0001C4B2: 90 0A    
    bcc ++                                          ; $C4BE\r\n    ; 8E9F (8EA0-1)\r\n0001C4B4:
    A9 9F     lda #(RoomActives2-1).lo\r\n0001C4B6: 85 04     sta $04\r\n0001C4B8:
    A9 8E     lda #(RoomActives2-1).hi\r\n0001C4BA: 85 05     sta $05\r\n0001C4BC:
    D0 08     bne +                                           ; $C4C6\r\n\r\n++ 
    ; 8DFF (8E00-1)\r\n0001C4BE: A9 FF     lda #(RoomActives1-1).lo\r\n0001C4C0:
    85 04     sta $04\r\n0001C4C2: A9 8D     lda #(RoomActives1-1).hi\r\n0001C4C4:
    85 05     sta $05\r\n\r\n+\r\n0001C4C6: A0 01     ldy #$01\r\n0001C4C8: B1 04    
    lda ($04),y\r\n0001C4CA: 0A        asl a\r\n0001C4CB: 8D 20 07  sta RoomActiveTable    
    ; tmp = count*2\r\n0001C4CE: 0A        asl a\r\n0001C4CF: 18        clc\r\n0001C4D0:
    6D 20 07  adc RoomActiveTable     ; A = tmp + count*4  (count*6)\r\n0001C4D3:
    A8        tay\r\n0001C4D4: C8        iny\r\n\r\n-\r\n0001C4D5: B1 04     lda
    ($04),y\r\n0001C4D7: 99 1F 07  sta RoomActiveTable-1,y\r\n0001C4DA: 88       
    dey\r\n0001C4DB: D0 F8     bne -                                           ;
    $C4D5\r\n\r\n0001C4DD: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\n\r\n;\r\n; This routine handles the \"teleportation\" of Megaman,
    i.e. when he sweeps\r\n; down to the stage from the sky after the \"READY\" message\r\n;\r\n\r\nTeleportToStage\r\n0001C4E0:
    18        clc\r\n0001C4E1: A5 31     lda CurrentStage\r\n0001C4E3: 65 AB    
    adc LastRestartPointType\r\n0001C4E5: AA        tax\r\n\r\n; Let megaman transform\r\n0001C4E6:
    A9 14     lda #$14\r\n0001C4E8: 8D 00 04  sta ObjectSpriteNum+0                               
    ; $0400\r\n0001C4EB: A9 41     lda #$41\r\n0001C4ED: 8D 20 04  sta ObjectFlags+0\r\n\r\n;
    Move Megaman down 16 pixels/frame until his Y position equals starting spot\r\n\r\n0001C4F0:
    BD 1A C5  lda TeleportYcoord,x\r\n0001C4F3: 85 59     sta $59\r\n-\r\n0001C4F5:
    A2 00     ldx #$00\r\n0001C4F7: 8E 40 04  stx ObjectUnknown440+0\r\n\r\n0001C4FA:
    18        clc\r\n0001C4FB: AD 00 06  lda ObjectPosY+0                               
    ; $0600\r\n0001C4FE: 69 10     adc #$10\r\n0001C500: 8D 00 06  sta ObjectPosY+0                                
    ; ObjectPosY+0\r\n\r\n0001C503: 20 31 D1  jsr UpdateGraphics                             
    ; $D131\r\n\r\n0001C506: 20 1B C0  jsr NextFrame                                 
    ; $C01B\r\n0001C509: AD 00 06  lda ObjectPosY+0                               
    ; ObjectPosY+0\r\n0001C50C: A6 31     ldx CurrentStage\r\n0001C50E: C5 59    
    cmp $59 ; Until the Y coord matches.\r\n0001C510: D0 E3     bne -                                          
    ; $C4F5\r\n\r\n\r\n0001C512: A9 00     lda #$00\r\n0001C514: 8D 80 06  sta ObjectYSpeed+0\r\n0001C517:
    4C B3 C3  jmp SwitchBank05                                ; $C3B3\r\n\r\n\r\n;At
    C51A\r\nTeleportYcoord\r\n; Start of stage\r\n    .byte $94,$B4,$B4,$B4,$C4,$B4\r\n   
    .byte $B4,$74,$B4,$94,$84,$64\r\n; Restart point A\r\n    .byte $94,$C4,$B4,$94,$94,$54\r\n   
    .byte $24,$64,$B4,$B4,$B4,$B4\r\n; Restart point B\r\n    .byte $94,$94,$94,$94,$94,$94\r\n   
    .byte $B4,$94,$B4,$B4,$B4,$B4\r\n\r\n\r\nC53D_routine\r\n0001C53D: A9 06    
    lda #$06\r\n0001C53F: 85        sta CurrentBank\r\n0001C541: 8D 06 C0  sta $C006\r\n\r\n0001C544:
    BD 00 04  lda ObjectSpriteNum,x\r\n0001C547: A0 06     ldy #$06\r\n-\r\n0001C549:
    D9 44 86  cmp Lbl_8644,y\r\n0001C54C: F0 08     beq +                                          
    ; $C556\r\n0001C54E: 88        dey\r\n0001C54F: 10 F8     bpl -                                          
    ; $C549\r\n\r\n0001C551: A0 00     ldy #$00\r\n0001C553: 4C 64 C5  jmp ++                                         
    ; $C564\r\n+\r\n0001C556: B9 4A 86  lda Lbl_864a,y\r\n0001C559: A8        tay\r\n0001C55A:
    4C 64 C5  jmp ++                                          ; $C564\r\n0001C55D:
    A9 06     lda #$06\r\n0001C55F: 85 42     sta CurrentBank\r\n0001C561: 8D 06
    C0  sta $C006\r\n++\r\n0001C564: B9 3A 86  lda Lbl_863a,y\r\n0001C567: 48       
    pha\r\n0001C568: 29 F0      and #$F0\r\n0001C56A: 9D E0 04   sta ObjectXSpeedFraction,x\r\n0001C56D:
    68        pla\r\n0001C56E: 29 0F     and #$0F\r\n0001C570: 9D C0 04  sta ObjectXSpeed,x\r\n0001C573:
    4C B3 C3  jmp SwitchBank05                                ; $C3B3\r\n\r\n\r\n\r\n;
    This routine clears carry if #$F8 is found between $600+X and $600+TotalObjects\r\n;
    and sets it otherwise\r\n\r\n; C = 0 if found, 1 if not\r\n\r\nFindFreeObject\r\n0001C576:
    A9 F8     lda #$F8\r\n-\r\n0001C578: DD 00 06  cmp ObjectPosY,x\r\n0001C57B:
    F0 07     beq +                                           ; $C584\r\n0001C57D:
    E8        inx\r\n0001C57E: E4 54     cpx TotalObjects\r\n0001C580: D0 F6    
    bne -                                           ; $C578\r\n0001C582: 38       
    sec\r\n0001C583: 60        rts\r\n+\r\n0001C584: 18        clc\r\n0001C585: 60       
    rts\r\n\r\n\r\nFindLastObjectOfType\r\n-\r\n0001C586: DD 00 04  cmp ObjectSpriteNum,x\r\n0001C589:
    F0 07     beq +                                           ; $C592\r\n--\r\n0001C58B:
    E8        inx\r\n0001C58C: E4 54     cpx TotalObjects\r\n0001C58E: D0 F6    
    bne -\r\n0001C590: 38        sec\r\n0001C591: 60        rts\r\n+\r\n0001C592:
    A9 F8     lda #$F8\r\n0001C594: DD 00 06  cmp ObjectPosY,x\r\n0001C597: 08       
    php\r\n0001C598: BD 00 04   lda ObjectSpriteNum,x\r\n0001C59B: 28        plp\r\n0001C59C:
    F0 ED     beq --                                          ; $C58B\r\n0001C59E:
    18        clc\r\n0001C59F: 60        rts\r\n\r\n\r\n\r\n; Random function\r\n;  
    A = max value\r\nRandomFunc ;In Megaman2, C84E (and it's much different)\r\n0001C5A0:
    85 40     sta $40\r\n0001C5A2: A5 46     lda RandomSeed\r\n0001C5A4: 38       
    sec\r\n-\r\n0001C5A5: E5 40     sbc $40\r\n0001C5A7: B0 FC     bcs -                                          
    ; $C5A5\r\n0001C5A9: 65 40     adc $40\r\n0001C5AB: 60        rts\r\n\r\n\r\nEnemyCalculateJumpCurveToHitMegaman\r\n;
    It does some math (input: A,X,Y); output: $04,$05\r\n; Uses $4A,$4B,$4C,$4D as
    temps\r\n0001C5AC: 85 4D     sta $4D\r\n0001C5AE: 86 4B     stx $4B\r\n0001C5B0:
    84 4C     sty $4C\r\n0001C5B2: A9 00     lda #$00\r\n0001C5B4: 85 4A     sta
    $4A\r\n0001C5B6: A0 10     ldy #$10\r\n-\r\n0001C5B8: 06 4C     asl $4C\r\n0001C5BA:
    26 4B     rol $4B\r\n0001C5BC: 26 4A     rol $4A\r\n0001C5BE: A5 4A     lda $4A\r\n0001C5C0:
    38        sec\r\n0001C5C1: E5 4D     sbc $4D\r\n0001C5C3: 90 04     bcc +                                      
    ; $C5C9\r\n0001C5C5: 85 4A     sta $4A\r\n0001C5C7: E6 4C     inc $4C\r\n+\r\n0001C5C9:
    88        dey\r\n0001C5CA: D0 EC     bne -                                      
    ; $C5B8\r\n0001C5CC: A5 4B     lda $4B\r\n0001C5CE: 85 05     sta $05\r\n0001C5D0:
    A5 4C     lda $4C\r\n0001C5D2: 85 04     sta $04\r\n0001C5D4: 60        rts\r\n\r\n\r\n\r\n0001C5D5:
    A5 05     lda $05\r\n0001C5D7: 85 4B     sta $4B\r\n0001C5D9: A5 04     lda $04\r\n0001C5DB:
    85 4C     sta $4C\r\n0001C5DD: A5 07     lda CurrentRoomPointer+1\r\n0001C5DF:
    85 4E     sta $4E\r\n0001C5E1: A5 06     lda CurrentRoomPointer\r\n0001C5E3:
    85 11     sta $11\r\n0001C5E5: A9 00     lda #$00\r\n0001C5E7: 85 4A     sta
    $4A\r\n0001C5E9: 85 4D     sta $4D\r\n0001C5EB: A0 10     ldy #$10\r\n\r\n-\r\n0001C5ED:
    06 4D     asl $4D\r\n0001C5EF: 26 4C     rol $4C\r\n0001C5F1: 26 4B     rol $4B\r\n0001C5F3:
    26 4A     rol $4A\r\n0001C5F5: 38        sec\r\n0001C5F6: A5 4B     lda $4B\r\n0001C5F8:
    E5 4F     sbc $4F\r\n0001C5FA: AA        tax\r\n0001C5FB: A5 4A     lda $4A\r\n0001C5FD:
    E5 4E     sbc $4E\r\n0001C5FF: 90 06     bcc +                                      
    ; $C607\r\n0001C601: 86 4B     stx $4B\r\n0001C603: 85 4A     sta $4A\r\n0001C605:
    E6 4D     inc $4D\r\n+\r\n0001C607: 88        dey\r\n0001C608: D0 E3     bne
    -                                       ; $C5ED\r\n\r\n0001C60A: A5 4D     lda
    $4D\r\n0001C60C: 85 08     sta CurrentRoomPointer+2\r\n0001C60E: A5 4C     lda
    $4C\r\n0001C610: 85 09     sta CurrentRoomPointer+3\r\n0001C612: 60        rts\r\n\r\nRoomLayoutLoadRoomNum\r\n0001C613:
    20 9C C3  jsr SwitchBankStage                         ; $C39C\r\n0001C616: C0
    00     cpy #$00\r\n0001C618: 30 06     bmi +                                      
    ; $C620\r\n0001C61A: B9 71 8C  lda RoomLayoutTable+1,y\r\n0001C61D: 4C B3 C3 
    jmp SwitchBank05                            ; $C3B3\r\n+\r\n0001C620: A9 00    
    lda #$00\r\n0001C622: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\nLoadActiveByIndexAndSetBlockingness\r\n; Input: A = index into
    the active table. \r\n0001C625: 20 9C C3  jsr SwitchBankStage                            
    ; $C39C\r\n0001C628: AA        tax\r\n0001C629: A5 0C     lda $0C\r\n0001C62B:
    9D 21 07  sta RoomActiveTable+1,x ;type\r\n0001C62E: BD 23 07  lda RoomActiveTable+3,x
    ;x1\r\n0001C631: 09 08     ora #$08\r\n0001C633: 85 0C     sta $0C\r\n0001C635:
    BD 24 07  lda RoomActiveTable+4,x ;y1\r\n0001C638: 09 0B     ora #$0B\r\n0001C63A:
    85 0D     sta $0D\r\n0001C63C: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\n0001C63F: 20 9C C3  jsr SwitchBankStage                            
    ; $C39C\r\n0001C642: A4 0C     ldy $0C\r\n0001C644: 99 24 07  sta RoomActiveTable+4,y\r\n0001C647:
    4C B3 C3  jmp SwitchBank05                                ; $C3B3\r\n\r\n\r\n0001C64A:
    20 9C C3  jsr SwitchBankStage                             ; $C39C\r\n0001C64D:
    A4 0C     ldy $0C\r\n0001C64F: B9 26 07  lda RoomActiveTable+6,y\r\n0001C652:
    99 24 07  sta RoomActiveTable+4,y\r\n0001C655: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\nSetupEnemyGraphicsPointer\r\n0001C658: 20 9C C3  jsr SwitchBankStage                            
    ; $C39C\r\n0001C65B: AE 60 04  ldx ObjectPosScreen+0                        
    ; $0460\r\n0001C65E: BD 40 8D  lda RoomMonsterIndex,x\r\n0001C661: 85 7A    
    sta CurrentRoomMonsterGraphicsIndex ; Only read at C6E8 \r\n0001C663: 4C B3 C3 
    jmp SwitchBank05                                ; $C3B3\r\n\r\nSpawnObject_TypeIsFF\r\n;\r\n;
    Input:\r\n;   $00 = posx, $01 = posy, $05 = screen number\r\n;\r\n; Objects of
    type FF are actually calls to remap pattern tables of PPU.\r\n; The Y position
    is an index into ObjectFF_defs, which tells which tiles\r\n; will be redefined.\r\n;\r\n0001C666:
    A5 42     lda CurrentBank\r\n0001C668: 48        pha\r\n0001C669: A5 92     
    lda AutoSpawnObjectFFcounter\r\n0001C66B: D0 08      bne +                                          
    ; $C675\r\n0001C66D: A6 01       ldx $01\r\n0001C66F: 86 93       stx $93\r\n0001C671:
    A9 10       lda #$10\r\n0001C673: 85 92       sta AutoSpawnObjectFFcounter\r\n+\r\n0001C675:
    A5 04      lda $04\r\n0001C677: 48         pha\r\n0001C678: A5 05       lda $05\r\n0001C67A:
    48          pha\r\n0001C67B: C6 92        dec AutoSpawnObjectFFcounter\r\n0001C67D:
    A6 93        ldx $93\r\n\r\n0001C67F: BD B0 C6     lda ObjectFF_defs+0,x\r\n0001C682:
    8D 80 03     sta RawPPUtransferAddress+0\r\n\r\n0001C685: BD B1 C6     lda ObjectFF_defs+1,x\r\n0001C688:
    20 AE C7     jsr SwitchBankTile                                   ; $C7AE\r\n\r\n0001C68B:
    A5 92        lda AutoSpawnObjectFFcounter\r\n0001C68D: 0A           asl a\r\n0001C68E:
    0A           asl a\r\n0001C68F: 0A           asl a\r\n0001C690: 0A          
    asl a\r\n0001C691: 85 04        sta $04\r\n0001C693: 8D 81 03     sta RawPPUtransferAddress+1\r\n\r\n0001C696:
    A0 0F        ldy #$0F\r\n-\r\n0001C698: B1 04         lda ($04),y\r\n0001C69A:
    99 82 03      sta RawPPUtransferBuf,y\r\n0001C69D: 88            dey\r\n0001C69E:
    10 F8        bpl -                                           ; $C698\r\n\r\n0001C6A0:
    A9 10        lda #$10\r\n0001C6A2: 85 5E        sta RawPPUtransferSize\r\n0001C6A4:
    68          pla\r\n0001C6A5: 85 05       sta $05\r\n0001C6A7: 68         pla\r\n0001C6A8:
    85 04      sta $04\r\n0001C6AA: 68        pla\r\n0001C6AB: AA        tax\r\n0001C6AC:
    9D 00 C0  sta $C000,x ; switch back to the original bank\r\n0001C6AF: 60       
    rts\r\n\r\n\r\n\r\nObjectFF_defs: ;at C6B0\r\n    ; The first byte is the sprite
    pattern table index to change,\r\n    ; the second byte is the sprite address
    (as used by SwitchBankTile).\r\n    .byte $08,$6E ; block $1B at page 2 (00-
    used in Iceman water-end - loads enemy [1] 6E) (Blader etc)\r\n    .byte $08,$A2
    ; block $28 at page 2 (02- used in Iceman water-start-loads enemy [1] A2) (HeadLosingRobot)\r\n   
    .byte $09,$82 ; block $20 at page 2 (04- used in Gutsman screen 6 - loads enemy
    [2] 82) (Axe-throwers)\r\n    .byte $0A,$86 ; block $21 at page 2 (06- used in
    Gutsman screen 6 - loads enemy [3] 86) (Axe-throwers)\r\n    .byte $09,$AE ;
    block $2B at page 2 (08- used in Gutsman screen 5 - loads enemy [2] AE) (Lift
    data)\r\n    .byte $0A,$B2 ; block $2C at page 2 (0A- used in Gutsman screen
    5 - loads enemy [3] B2) (Lift data)\r\n    .byte $0B,$62 ; block $18 at page
    2 (0C- used in Wily3 - loads enemy [4] 62)\r\n    .byte $00,$FA ; block $3E at
    page 2 used in Ending. Elvis hair.\r\n    .byte $01,$CE ; block $33 at page 2
    used in Ending. Elvis running.\r\n    .byte $02,$D2 ; block $34 at page 2 used
    in Ending. Elvis running.\r\n\r\n\r\nLoadEnemyGraphics\r\n0001C6C4: A5 59    
    lda $59\r\n0001C6C6: C9 29     cmp #$29\r\n0001C6C8: D0 01     bne +\r\n0001C6CA:
    60        rts\r\n+\r\n0001C6CB: E6 59     inc $59\r\n0001C6CD: 20 9C C3  jsr
    SwitchBankStage                             ; $C39C\r\n0001C6D0: 4A        lsr
    a\r\n0001C6D1: 6E 81 03  ror RawPPUtransferAddress+1\r\n0001C6D4: 4A        lsr
    a\r\n0001C6D5: 6E 81 03  ror RawPPUtransferAddress+1\r\n0001C6D8: 4A        lsr
    a\r\n0001C6D9: 6E 81 03  ror RawPPUtransferAddress+1\r\n0001C6DC: 48        pha\r\n0001C6DD:
    18         clc\r\n0001C6DE: 69 08      adc #$08\r\n0001C6E0: 8D 80 03   sta RawPPUtransferAddress+0\r\n0001C6E3:
    68        pla\r\n0001C6E4: C9 05     cmp #$05\r\n0001C6E6: 08        php\r\n0001C6E7:
    18         clc\r\n0001C6E8: 65 7A      adc CurrentRoomMonsterGraphicsIndex  ;Only
    written to in C661, loaded from RoomMonsterIndex.\r\n0001C6EA: AA         tax\r\n0001C6EB:
    28        plp\r\n0001C6EC: F0 21     beq +                                          
    ; $C70F\r\n0001C6EE: BD 80 8D  lda RoomMonsterGraphics,x\r\n; Load bank.\r\n\r\n0001C6F1:
    20 AE C7  jsr SwitchBankTile                                   ; $C7AE\r\n0001C6F4:
    AD 81 03  lda RawPPUtransferAddress+1\r\n0001C6F7: 29 E0     and #$E0\r\n0001C6F9:
    8D 81 03  sta RawPPUtransferAddress+1\r\n0001C6FC: 85 04     sta $04       \r\n0001C6FE:
    A0 1F     ldy #$1F\r\n-\r\n0001C700: B1 04     lda ($04),y\r\n0001C702: 99 82
    03  sta RawPPUtransferBuf,y\r\n0001C705: 88        dey\r\n0001C706: 10 F8    
    bpl -                                           ; $C700\r\n\r\n0001C708: A9 20    
    lda #$20\r\n0001C70A: 85 5E     sta RawPPUtransferSize\r\n0001C70C: 4C B3 C3 
    jmp SwitchBank05                                ; $C3B3\r\n\r\n+\r\n0001C70F:
    A0 00     ldy #$00\r\n        ; Copies 6 bytes of palette.\r\n        ; Y = 0,1,2,4,5,6
    (skips 3)\r\n-\r\n0001C711: BD 80 8D  lda RoomMonsterGraphics,x\r\n0001C714:
    99 E9 03  sta SpritePalettes + $9,y\r\n0001C717: E8        inx\r\n0001C718: C8       
    iny\r\n0001C719: C0 07     cpy #$07\r\n0001C71B: F0 07     beq +                                          
    ; $C724\r\n0001C71D: C0 03     cpy #$03\r\n0001C71F: D0 F0     bne -                                          
    ; $C711\r\n0001C721: C8        iny\r\n0001C722: D0 ED     bne -                                          
    ; $C711\r\n+\r\n0001C724: 20 2A C7  jsr PaletteSetupForSprites\r\n0001C727: 4C
    B3 C3  jmp SwitchBank05                                ; $C3B3\r\n\r\nPaletteSetupForSprites\r\n0001C72A:
    A9 03     lda #(SpritePalettes).hi\r\n0001C72C: 85 39     sta $39\r\n0001C72E:
    85 3B     sta $3B\r\n0001C730: A9 E0     lda #(SpritePalettes).lo\r\n0001C732:
    85 38     sta $38\r\n0001C734: 85 3A     sta $3A\r\n0001C736: A9 18     lda #$18
    ; Setup 1 sprite palette\r\n-\r\n0001C738: 85 34     sta WritePaletteParam\r\n0001C73A:
    A9 01     lda #$01\r\n0001C73C: 85 37     sta PaletteUpdateDelay\r\n0001C73E:
    60        rts\r\nPaletteSetupForBG\r\n0001C73F: A9 03     lda #(BGPalettes).hi\r\n0001C741:
    85 39     sta $39\r\n0001C743: 85 3B     sta $3B\r\n0001C745: A9 D0     lda #(BGPalettes).lo\r\n0001C747:
    85 38     sta $38\r\n0001C749: 85 3A     sta $3A\r\n0001C74B: A9 10     lda #$10
    ; Setup 1 BG palette\r\n0001C74D: D0 E9     bne -   ; unconditional jump to C738\r\n\r\nPaletteSetupForBGwith3F0\r\n0001C74F:
    20 3F C7  jsr PaletteSetupForBG\r\n0001C752: A9 03     lda #(UnknownPalettes).hi\r\n0001C754:
    85 39     sta $39\r\n0001C756: A9 F0     lda #(UnknownPalettes).lo\r\n0001C758:
    85 38     sta $38\r\n0001C75A: 60        rts\r\n\r\n\r\n\r\n; This routine writes
    the sprite chr\r\n; It is initialized in the beginning of each stage / forcescrolling\r\n\r\nWriteChr\r\n0001C75B:
    20 9C C3  jsr SwitchBankStage                             ; $C39C\r\n\r\n0001C75E:
    A5 31     lda CurrentStage\r\n0001C760: C9 06     cmp #$06\r\n0001C762: 90 05    
    bcc +                                           ; $C769\r\n0001C764: AD 20 8D 
    lda RoomTileTable2\r\n0001C767: D0 03     bne ++                                         
    ; $C76C\r\n+\r\n0001C769: AD 00 8D  lda RoomTileTable1\r\n++\r\n0001C76C: 85
    0C     sta $0C ;Number of tiles in the tile table.\r\n\r\n0001C76E: A9 00    
    lda #$00\r\n0001C770: 8D 06 20  sta $2006\r\n0001C773: 8D 06 20  sta $2006\r\n0001C776:
    85 0D     sta $0D\r\n\r\n---\r\n0001C778: 20 9C C3  jsr SwitchBankStage                            
    ; $C39C\r\n\r\n0001C77B: A4 0D     ldy $0D\r\n\r\n0001C77D: A5 31     lda CurrentStage\r\n0001C77F:
    C9 06     cmp #$06\r\n0001C781: 90 08     bcc ++                                         
    ; $C78B\r\n0001C783: B9 21 8D  lda RoomTileTable2+1,y ; tile bank & index\r\n0001C786:
    BE 22 8D  ldx RoomTileTable2+2,y ; number of 256-bytes to copy\r\n0001C789: D0
    06     bne +                                           ; $C791\r\n++\r\n0001C78B:
    BE 02 8D  ldx RoomTileTable1+2,y ; number of 256-bytes to copy\r\n0001C78E: B9
    01 8D  lda RoomTileTable1+1,y ; tile bank & index\r\n+\r\n0001C791: 20 AE C7 
    jsr SwitchBankTile                                   ; $C7AE\r\n--\r\n0001C794:
    A0 00     ldy #$00        ; Copy 256 bytes to VRAM\r\n-\r\n0001C796: B1 04    
    lda ($04),y\r\n0001C798: 8D 07 20  sta $2007\r\n0001C79B: C8        iny\r\n0001C79C:
    D0 F8     bne -                                           ; $C796\r\n\r\n0001C79E:
    E6 05     inc $05\r\n0001C7A0: CA        dex\r\n0001C7A1: D0 F1     bne --  ;more
    256-bytes?\r\n\r\n0001C7A3: E6 0D     inc $0D\r\n0001C7A5: E6 0D     inc $0D\r\n0001C7A7:
    C6 0C     dec $0C\r\n0001C7A9: D0 CD     bne --- ; more tile setups?\r\n\r\n0001C7AB:
    4C B3 C3  jmp SwitchBank05                                ; $C3B3\r\n\r\n\r\n;
    SwitchBankTile.\r\n;  Input:\r\n;     A:\r\n;       low 2 bits = bank number\r\n;      
    high 6 bits = block offset (16..63)\r\n;  Output:\r\n;     Bank switched\r\n;    
    $04,$05 = pointer to the blockdata (0x8000 + (blocknumber)*0x100, 0x9000..0xBF00)\r\nSwitchBankTile\r\n0001C7AE:
    48        pha\r\n0001C7AF: 29 FC     and #$FC\r\n0001C7B1: 4A        lsr a\r\n0001C7B2:
    4A        lsr a\r\n0001C7B3: 09 80     ora #$80 ;address of bank begin\r\n0001C7B5:
    85 05     sta $05\r\n0001C7B7: A9 00     lda #$00\r\n0001C7B9: 85 04     sta
    $04\r\n0001C7BB: 68        pla\r\n\r\n0001C7BC: 29 03     and #$03\r\n0001C7BE:
    A8        tay\r\n0001C7BF: 85 42     sta CurrentBank\r\n0001C7C1: 99 00 C0  sta
    $C000,y\r\n0001C7C4: 60        rts\r\n\r\n\r\n\r\n0001C7C5: A9 4C     lda #$4C\r\n0001C7C7:
    85 0C     sta $0C\r\n0001C7C9: A9 00     lda #$00\r\n0001C7CB: 85 0D     sta
    $0D\r\n0001C7CD: A9 08     lda #$08\r\n0001C7CF: 85 0E     sta $0E\r\n-\r\n0001C7D1:
    A2 02     ldx #$02\r\n0001C7D3: A5 0C     lda $0C\r\n0001C7D5: 20 86 C5  jsr
    FindLastObjectOfType\r\n0001C7D8: B0 03     bcs +                                          
    ; $C7DD\r\n0001C7DA: 20 FA C7  jsr C7FA_routine\r\n+\r\n0001C7DD: E6 0C     inc
    $0C\r\n0001C7DF: C6 0E     dec $0E\r\n0001C7E1: D0 EE     bne -                                          
    ; $C7D1\r\n0001C7E3: 60        rts\r\n\r\n\r\n\r\nC7E4_routine\r\n0001C7E4: A2
    05     ldx #$05\r\n0001C7E6: A9 00     lda #$00\r\n0001C7E8: 85 0D     sta $0D\r\n-\r\n0001C7EA:
    BD 00 06  lda ObjectPosY,x\r\n0001C7ED: C9 F8     cmp #$F8\r\n0001C7EF: F0 03    
    beq +                                           ; $C7F4\r\n0001C7F1: 20 FA C7 
    jsr C7FA_routine\r\n+\r\n0001C7F4: E8        inx\r\n0001C7F5: E0 0A     cpx #$0A\r\n0001C7F7:
    D0 F1     bne -                                           ; $C7EA\r\n0001C7F9:
    60        rts\r\n\r\n\r\nC7FA_routine\r\n0001C7FA: BD 20 04  lda ObjectFlags,x    
    ; Flip direction of object (and?...)\r\n0001C7FD: 49 40     eor #$40\r\n0001C7FF:
    29 F7     and #$F7\r\n0001C801: 9D 20 04  sta ObjectFlags,x\r\n\r\n0001C804:
    A4 0D     ldy $0D\r\n\r\n0001C806: B9 24 C8  lda C824_table,y\r\n0001C809: 9D
    60 06  sta ObjectYSpeedFraction,x\r\n0001C80C: B9 29 C8  lda C829_table,y\r\n0001C80F:
    9D 80 06  sta ObjectYSpeed,x\r\n\r\n0001C812: B9 2E C8  lda C82E_table,y\r\n0001C815:
    48        pha\r\n0001C816: 29 F0      and #$F0\r\n0001C818: 9D E0 04   sta ObjectXSpeedFraction,x\r\n0001C81B:
    68        pla\r\n\r\n0001C81C: 29 0F     and #$0F\r\n0001C81E: 9D C0 04  sta
    ObjectXSpeed,x\r\n0001C821: E6 0D     inc $0D\r\n0001C823: 60        rts\r\n\r\n\r\nC824_table:
    ; gives values for ObjectYSpeedFraction\r\n    .byte $54,$80,$00,$80,$AC\r\nC829_table:\r\n   
    .byte $04,$02,$00,$BD,$FB\r\nC82E_table: ; - gives values for ObjectXSpeed and
    ObjectXSpeedFraction\r\n    .byte $82,$54,$05,$54,$82\r\n\r\n;\r\n; A = Type
    of item in some way... (#$42 = Magnet Beam)\r\n;\r\n\r\nGotItem\r\n; Bonus items
    range is #$3C - #$46\r\n0001C833: 38        sec\r\n0001C834: E9 3C     sbc #$3C\r\n0001C836:
    0A        asl a\r\n0001C837: A8        tay\r\n\r\n0001C838: A9 F8     lda #$F8   
    ; Remove the object from the objects list\r\n0001C83A: 9D 00 06  sta ObjectPosY,x\r\n\r\n;
    Lookup jumptable\r\n0001C83D: B9 9E C8  lda GotItemJumpTable,y                         
    ; $C89E,Y\r\n0001C840: 85 04     sta $04\r\n0001C842: B9 9F C8  lda GotItemJumpTable+1,y                       
    ; $C89F,y\r\n0001C845: 85 05     sta $05\r\n0001C847: 6C 04 00  jmp ($0004)\r\n\r\n\r\nGotBonusPearl\r\n0001C84A:
    18        clc\r\n0001C84B: A5 AE     lda BonusPearlCount\r\n0001C84D: C9 63    
    cmp #$63\r\n0001C84F: F0 2C     beq PlayBonusPearlSound                        
    ; $C87D\r\n0001C851: E6 AE     inc BonusPearlCount\r\n0001C853: D0 28     bne
    PlayBonusPearlSound                         ; $C87D\r\n\r\nGotSmallWeaponCapsule\r\n0001C855:
    A9 82     lda #$82\r\n0001C857: D0 0A     bne +                                          
    ; $C863\r\n\r\nGotSmallLifeCapsule\r\n0001C859: A9 02     lda #$02\r\n0001C85B:
    D0 06     bne +                                           ; $C863\r\n\r\nGotLargeWeaponCapsule\r\n0001C85D:
    A9 8A     lda #$8A\r\n0001C85F: D0 02     bne +                                          
    ; $C863\r\n\r\n\r\nGotLargeLifeCapsule\r\n0001C861: A9 0A     lda #$0A\r\n+\r\n0001C863:
    85 AD     sta CapsuleObtained\r\n0001C865: 60        rts\r\n\r\n\r\n; If ExtraLives
    < 99 then Extralives++, play ExtraLife sound\r\n\r\nGotExtraLife\r\n0001C866:
    A9 32     lda #$32\r\n0001C868: 18        clc\r\n0001C869: A6 A6     ldx ExtraLives\r\n0001C86B:
    E0 63     cpx #$63\r\n0001C86D: B0 10     bcs +                                          
    ; $C87F\r\n0001C86F: E6 A6     inc ExtraLives\r\n0001C871: D0 0C     bne +                                          
    ; $C87F\r\n\r\nGotMagnetBeam\r\n0001C873: A9 80     lda #$80            ; Obtain
    magnet beam\r\n0001C875: 05 5D     ora WeaponsOwned\r\n0001C877: 85 5D     sta
    WeaponsOwned\r\n0001C879: A9 1C     lda #$1C\r\n0001C87B: 85 71     sta $71\r\n\r\nPlayBonusPearlSound\r\n0001C87D:
    A9 1A     lda #$1A        ; Bonus pearl pickup\r\n+\r\n0001C87F: 20 77 C4  jsr
    IssueSound                                  ; $C477\r\n0001C882: 60        rts\r\n\r\n;
    Set scrolling=up\r\n; Set TeleportEnteredFlag=1\r\nGotTeleportation\r\n0001C883:
    A9 01     lda #$01\r\n0001C885: 85 26     sta CurrentStripeEndType\r\n0001C887:
    85 B0     sta TeleportEnteredFlag\r\n0001C889: D0 F2     bne PlayBonusPearlSound                        
    ; $C87D\r\n\r\nGotLevelEndItem\r\n0001C88B: A9 1A     lda #$1A        ; Bonus
    pearl pickup\r\n0001C88D: 20 77 C4  jsr IssueSound                                 
    ; $C477\r\n\r\n0001C890: 4C 5A C0  jmp StageClear                                 
    ; $C05A\r\n\r\n\r\n; Set all meters to max and play bonus pearl pickup sound\r\n\r\n\r\n;
    Could this be Yashichi (should also give 100,000 points...)\r\nGotYashichi\r\n0001C893:
    A9 1C     lda #$1C\r\n0001C895: A2 07     ldx #$07\r\n-\r\n0001C897: 95 6A    
    sta Meters,x\r\n0001C899: CA        dex\r\n0001C89A: 10 FB     bpl -                                          
    ; $C897\r\n\r\n0001C89C: 30 DF     bmi PlayBonusPearlSound                        
    ; $C87D\r\n\r\n\r\nGotItemJumpTable\r\n.dw GotBonusPearl           ; $3C = Bonus
    Pearl\r\n.dw GotSmallWeaponCapsule   ; $3D\r\n.dw GotSmallLifeCapsule     ; $3E\r\n.dw
    GotLargeWeaponCapsule   ; $3F\r\n.dw GotLargeLifeCapsule     ; $40 = Large life
    capsule\r\n.dw GotExtraLife            ; $41 = Extralife\r\n.dw GotMagnetBeam          
    ; $42 = Magnet beam\r\n.dw GotTeleportation\r\n.dw GotLevelEndItem\r\n.dw GotYashichi\r\n\r\nTestShotHit\r\n;
    Input: X = object number\r\n\r\n0001C8B2: A6 2F     ldx RefObjectNumber\r\n0001C8B4:
    BD 20 04  lda ObjectFlags,x\r\n0001C8B7: 29 20     and #$20\r\n0001C8B9: F0 02    
    beq +                                       ; $C8BD\r\n-\r\n0001C8BB: 18       
    clc\r\n0001C8BC: 60        rts\r\n+\r\n0001C8BD: BC 00 04  ldy ObjectSpriteNum,x\r\n\r\n0001C8C0:
    B9 E9 FA  lda TableObjectXWidthTable2,y             ; *\r\n0001C8C3: 85 01    
    sta $01\r\n0001C8C5: B9 B7 FB  lda TableObjectYHeightTable2,y             ; *\r\n0001C8C8:
    85 02     sta $02\r\n\r\n0001C8CA: BD 00 06  lda ObjectPosY,x\r\n0001C8CD: C9
    F8     cmp #$F8\r\n0001C8CF: F0 EA     beq -                                      
    ; $C8BB\r\n0001C8D1: 38        sec\r\n0001C8D2: E5 02     sbc $02\r\n\r\n0001C8D4:
    85 03     sta $03\r\n0001C8D6: 06 02     asl $02\r\n0001C8D8: 18        clc\r\n0001C8D9:
    65 02     adc $02\r\n0001C8DB: 85 02     sta $02\r\n0001C8DD: 38        sec\r\n\r\n0001C8DE:
    BD 80 04  lda ObjectPosX,x\r\n0001C8E1: E5 1A     sbc ScrollPosX\r\n0001C8E3:
    38        sec\r\n0001C8E4: E5 01     sbc $01\r\n0001C8E6: 85 00     sta $00\r\n0001C8E8:
    06 01     asl $01\r\n0001C8EA: 18        clc\r\n0001C8EB: 65 01     adc $01\r\n0001C8ED:
    85 01     sta $01\r\n0001C8EF: A5 3E     lda BossCurrentStrategy\r\n0001C8F1:
    C9 05     cmp #$05\r\n0001C8F3: 90 29     bcc +++                                        
    ; $C91E\r\n0001C8F5: A5 56     lda BossBlinkState\r\n0001C8F7: D0 25     bne
    +++                                         ; $C91E\r\n\r\n; Test if boss has
    been hit with any of Megaman's weapons\r\n0001C8F9: A2 01     ldx #$01\r\n0001C8FB:
    20 C2 C9  jsr TestCollisionWithWeapon                     ; $C9C2\r\n0001C8FE:
    90 1E     bcc +++                                         ; $C91E\r\n\r\n; It
    was a boss. Store object number into $0C\r\n0001C900: 86 0C     stx $0C\r\n;
    Subtract from boss's energy depending on which weapon is used\r\n\r\n0001C902:
    A5 AC     lda FightingBossNum     ; $AC = which boss we're fighting\r\n0001C904:
    0A        asl a\r\n0001C905: 0A        asl a\r\n0001C906: 0A        asl a\r\n0001C907:
    18        clc\r\n0001C908: 65 5F     adc WeaponSelect\r\n0001C90A: AA       
    tax\r\n0001C90B: 38        sec\r\n0001C90C: AD C1 06  lda ObjectLifeMeter+1\r\n0001C90F:
    FD 22 FE  sbc WeaponDamageOnBoss,x     ; *\r\n\r\n0001C912: F0 02     beq +                                      
    ; $C916\r\n0001C914: B0 0B     bcs ++                                      ;
    $C921\r\n+\r\n\r\n; Boss's life meter emptied\r\n0001C916: A9 00     lda #$00\r\n0001C918:
    8D C1 06  sta ObjectLifeMeter+1\r\n0001C91B: 4C 2D CA  jmp BossKilled\r\n\r\n+++\r\n0001C91E:
    4C 6D C9  jmp TestEnemyDamages\r\n++\r\n0001C921: 8D C1 06  sta ObjectLifeMeter+1\r\n0001C924:
    A5 31     lda CurrentStage\r\n\r\n0001C926: C9 06     cmp #$06\r\n0001C928: F0
    39     beq +                                           ; $C963\r\n0001C92A: C9
    09     cmp #$09\r\n0001C92C: F0 35     beq +                                          
    ; $C963\r\n0001C92E: A2 16     ldx #$16\r\n0001C930: 20 76 C5  jsr FindFreeObject                             
    ; FindFreeObject\r\n0001C933: B0 2E     bcs +                                          
    ; $C963\r\n0001C935: A5 2F     lda RefObjectNumber\r\n0001C937: 48        pha\r\n0001C938:
    A9 01     lda #$01\r\n0001C93A: 85 2F     sta RefObjectNumber\r\n0001C93C: 20
    7B F6  jsr InitActor\r\n\r\n0001C93F: A9 19     lda #$19\r\n0001C941: 9D 00 04 
    sta ObjectSpriteNum,x\r\n\r\n0001C944: FE 40 04  inc ObjectUnknown440,x\r\n\r\n0001C947:
    A0 08     ldy #$08\r\n0001C949: 20 33 F5  jsr InitObjectDefaultSpeed\r\n\r\n0001C94C:
    A9 08     lda #$08\r\n0001C94E: 9D 20 04  sta ObjectFlags,x\r\n0001C951: 9D 60
    06  sta ObjectYSpeedFraction,x\r\n\r\n0001C954: BD 00 06  lda ObjectPosY,x\r\n0001C957:
    A4 31     ldy CurrentStage\r\n0001C959: 38        sec\r\n0001C95A: F9 89 C9 
    sbc TableC989,y\r\n0001C95D: 9D 00 06  sta ObjectPosY,x\r\n0001C960: 68       
    pla\r\n\r\n\r\n\r\n0001C961: 85 2F     sta RefObjectNumber\r\n+\r\n0001C963:
    A4 AC     ldy FightingBossNum\r\n0001C965: B9 94 C9  lda BossBlinkLengthTable,y\r\n0001C968:
    85 56     sta BossBlinkState\r\n0001C96A: 4C A9 C9  jmp $C9A9\r\n\r\n\r\nTestEnemyDamages
    ; Test enemies 10,12,14,.. on even frames and 11,13,15,.. on odd frames\r\n0001C96D:
    A5 23     lda FrameCounter\r\n0001C96F: 29 01     and #$01\r\n0001C971: 18       
    clc\r\n0001C972: 69 10     adc #$10\r\n0001C974: AA        tax\r\n-\r\n0001C975:
    BD 20 04  lda ObjectFlags,x\r\n0001C978: 29 80     and #$80\r\n0001C97A: D0 05    
    bne +                                           ; $C981\r\n0001C97C: 20 C2 C9 
    jsr TestCollisionWithWeapon                     ; $C9C2\r\n0001C97F: B0 1E    
    bcs ++                                          ; $C99F\r\n+\r\n0001C981: E8       
    inx\r\n0001C982: E8        inx\r\n0001C983: E4 54     cpx TotalObjects\r\n0001C985:
    90 EE     bcc -                                           ; $C975\r\n0001C987:
    18        clc\r\n0001C988: 60        rts\r\n\r\n\r\nTableC989:\r\n    .byt 4,0,0,8,0,4,0,0,0,0,0\r\n\r\nBossBlinkLengthTable
    ;at C994. Values for BossBlinkState for each boss.\r\n    .byte $3F, $1E, $1E,
    $1E, $3F, $1E\r\n    .byte $09, $3F, $1E, $09, $09\r\n\r\n++\r\n0001C99F: 86
    0C     stx $0C\r\n\r\n; Make object get hit\r\n0001C9A1: BD 20 04  lda ObjectFlags,x\r\n0001C9A4:
    09 80     ora #$80\r\n0001C9A6: 9D 20 04  sta ObjectFlags,x\r\n\r\n0001C9A9:
    A9 1B     lda #$1B        ; Big noisy explosion\r\n0001C9AB: 20 77 C4  jsr IssueSound                             
    ; $C477\r\n\r\n0001C9AE: A6 2F     ldx RefObjectNumber\r\n0001C9B0: BD 20 04 
    lda ObjectFlags,x\r\n0001C9B3: 29 04     and #$04\r\n0001C9B5: D0 05     bne
    +                                       ; $C9BC\r\n; This object cannot collide
    with Megaman's bullets\r\n0001C9B7: A9 F8     lda #$F8\r\n0001C9B9: 9D 00 06 
    sta ObjectPosY,x\r\n+\r\n0001C9BC: 38        sec\r\n0001C9BD: 60        rts\r\n\r\n\r\n;
    Collision detection. C = 1 if colliding\r\nTestCollisionWithMegaman\r\n0001C9BE:
    A9 02     lda #$02\r\n0001C9C0: D0 02     bne +                                          
    ; $C9C4\r\nTestCollisionWithWeapon\r\n0001C9C2: A9 04     lda #$04\r\n+\r\n0001C9C4:
    3D 20 04  and ObjectFlags,x\r\n0001C9C7: D0 02     bne +                                          
    ; $C9CB\r\n0001C9C9: 18        clc\r\n0001C9CA: 60        rts\r\n\r\n+\r\n0001C9CB:
    BD 00 06  lda ObjectPosY,x\r\n0001C9CE: C9 F8     cmp #$F8\r\n0001C9D0: F0 59    
    beq +++                                         ; $CA2B\r\n\r\n0001C9D2: BC 00
    04  ldy ObjectSpriteNum,x\r\n0001C9D5: C0 FF     cpy #$FF\r\n0001C9D7: D0 0D    
    bne +                                           ; $C9E6\r\n\r\n; if TableObjectYHeightTable1,Y
    != 0\r\n;   $0D,$0E = TableObjectYHeightTable1,Y, TableObjectXWidthTable1,Y\r\n;
    else\r\n;   $0D,$0E = TableObjectYHeightTable2,Y, TableObjectXWidthTable2,Y\r\n0001C9D9:
    BC E0 06  ldy ObjectType,x\r\n0001C9DC: B9 38 FB  lda TableObjectXWidthTable1,y\r\n0001C9DF:
    85 0E     sta $0E\r\n0001C9E1: B9 3A FC  lda TableObjectYHeightTable1,y     ;
    *\r\n0001C9E4: D0 08     bne ++                                          ; $C9EE\r\n+\r\n0001C9E6:
    B9 E9 FA  lda TableObjectXWidthTable2,y     ; *\r\n0001C9E9: 85 0E     sta $0E\r\n0001C9EB:
    B9 B7 FB  lda TableObjectYHeightTable2,y     ; *\r\n++\r\n0001C9EE: 85 0D    
    sta $0D\r\n\r\n\r\n; if ObjectPosY,X - $0D >= $02 then there can be no collision\r\n0001C9F0:
    38        sec\r\n0001C9F1: BD 00 06  lda ObjectPosY,x\r\n0001C9F4: E5 0D    
    sbc $0D\r\n\r\n0001C9F6: C5 02     cmp $02\r\n0001C9F8: B0 31     bcs +++                                    
    ; $CA2B\r\n\r\n; if ObjectPosY,X + $0D < $03 then there can be no collision\r\n0001C9FA:
    18        clc\r\n0001C9FB: BD 00 06  lda ObjectPosY,x\r\n0001C9FE: 65 0D    
    adc $0D\r\n0001CA00: C5 03     cmp $03\r\n0001CA02: 90 27     bcc +++                                    
    ; $CA2B\r\n\r\n\r\n; if ObjectPosScreen,X != ScrollPosScreen then there can be
    no collision\r\n0001CA04: 38        sec\r\n0001CA05: BD 80 04  lda ObjectPosX,x\r\n0001CA08:
    E5 1A     sbc ScrollPosX\r\n0001CA0A: 85 0C     sta $0C\r\n0001CA0C: BD 60 04 
    lda ObjectPosScreen,x\r\n0001CA0F: E5 1B     sbc ScrollPosScreen\r\n0001CA11:
    D0 18     bne +++                                     ; $CA2B\r\n\r\n\r\n; if
    ObjectPosX - ScrollPosX < $0E then there can be no collision\r\n0001CA13: A5
    0C     lda $0C\r\n0001CA15: 38        sec\r\n0001CA16: E5 0E     sbc $0E\r\n0001CA18:
    90 11     bcc +++                                     ; $CA2B\r\n\r\n\r\n; if
    ObjectPosX - ScrollPosX - $0E == $01 then a collision has occured!\r\n0001CA1A:
    C5 01     cmp $01\r\n0001CA1C: F0 0B     beq +                                      
    ; $CA29\r\n\r\n; if ObjectPosX - ScrollPosX - $0E > $01 then there can be no
    collision\r\n0001CA1E: B0 0B     bcs +++                                    
    ; $CA2B\r\n\r\n; if ObjectPosX - ScrollPosX + $0E >= $00 then a collision has
    occured!\r\n0001CA20: 18        clc\r\n0001CA21: A5 0C     lda $0C\r\n0001CA23:
    65 0E     adc $0E\r\n0001CA25: C5 00     cmp $00\r\n0001CA27: 90 02     bcc +++                                    
    ; $CA2B\r\n+\r\n0001CA29: 38        sec\r\n0001CA2A: 60        rts\r\n\r\n+++\r\n0001CA2B:
    18        clc\r\n0001CA2C: 60        rts\r\n\r\n\r\nBossKilled\r\n0001CA2D: A9
    20     lda #$20\r\n0001CA2F: 20 16 D1  jsr TimeDelayWithAllObjectsHalted\r\n0001CA32:
    A9 01     lda #$01\r\n0001CA34: 85 59     sta $59\r\n0001CA36: A9 5F     lda
    #$5F\r\n0001CA38: 85 5A     sta $5A\r\n0001CA3A: 20 2A C3  jsr AtomicExplodeActor\r\n0001CA3D:
    A5 AC     lda FightingBossNum\r\n0001CA3F: C9 09     cmp #$09\r\n0001CA41: F0
    3B     beq BossKilledCondition1\r\n0001CA43: C5 31     cmp CurrentStage\r\n0001CA45:
    D0 37     bne BossKilledCondition1\r\n\r\n0001CA47: A9 FF     lda #$FF\r\n0001CA49:
    20 77 C4  jsr IssueSound                              ; $C477\r\n\r\n0001CA4C:
    A9 12     lda #$12        ; Explosion\r\n0001CA4E: 20 77 C4  jsr IssueSound                             
    ; $C477\r\n\r\n0001CA51: A5 31     lda CurrentStage\r\n0001CA53: C9 06     cmp
    #$06\r\n0001CA55: B0 27     bcs BossKilledCondition1\r\n\r\n; This portion only
    applies for CIBFEG enemies, not wily stages\r\n0001CA57: A9 01     lda #$01\r\n0001CA59:
    85 2F     sta RefObjectNumber\r\n0001CA5B: A9 44     lda #$44 ;Create the level-end-item\r\n0001CA5D:
    A2 1F     ldx #$1F\r\n0001CA5F: 20 7B F6  jsr InitActor\r\n\r\n; Make this object
    collidable with Megaman and BG\r\n0001CA62: A9 13     lda #$13\r\n0001CA64: 9D
    20 04  sta ObjectFlags,x\r\n\r\n0001CA67: A9 28     lda #$28\r\n0001CA69: 9D
    00 06  sta ObjectPosY,x\r\n\r\n0001CA6C: A9 80     lda #$80\r\n0001CA6E: 9D 80
    04  sta ObjectPosX,x\r\n\r\n0001CA71: A0 C4     ldy #$C4\r\n0001CA73: 20 33 F5 
    jsr InitObjectDefaultSpeed\r\n\r\n0001CA76: A9 F8     lda #$F8    ; Disable boss\r\n0001CA78:
    8D 01 06  sta ObjectPosY+1\r\n\r\n0001CA7B: 4C CE CA  jmp $CACE\r\n\r\nBossKilledCondition1\r\n;
    Arrived here if\r\n; - it's last boss\r\n; - it's a rematch\r\n; - it's wily
    stage\r\n0001CA7E: A5 AC     lda FightingBossNum\r\n0001CA80: C9 09     cmp #$09\r\n0001CA82:
    D0 03     bne $0001CA87\r\n; Handle last boss killed\r\n0001CA84: 4C 8E F2  jmp
    $F28E\r\n0001CA87: C9 0A     cmp #$0A\r\n0001CA89: F0 78     beq $0001CB03\r\n0001CA8B:
    C5 31     cmp CurrentStage\r\n0001CA8D: F0 4E     beq $0001CADD\r\n\r\n; Add
    10,000 points to score if it was a rematch\r\n\r\n0001CA8F: A9 0A     lda #$0A\r\n0001CA91:
    85 0C     sta $0C\r\n-\r\n0001CA93: A9 10     lda #$10\r\n0001CA95: 85 05    
    sta $05\r\n0001CA97: 20 40 D4  jsr IncreaseScore                           ;
    $D440\r\n0001CA9A: C6 0C     dec $0C\r\n0001CA9C: D0 F5     bne -                                          
    ; $CA93\r\n\r\n0001CA9E: A9 00     lda #$00\r\n0001CAA0: 85 0C     sta $0C\r\n\r\n0001CAA2:
    A6 AC     ldx FightingBossNum\r\n0001CAA4: BD 4E C1  lda IndexIntoTheActiveThatPreventsEscapingRematch,x\r\n0001CAA7:
    20 25 C6  jsr LoadActiveByIndexAndSetBlockingness\r\n                       
    ; Remove the block that prevents exiting the room\r\n\r\n0001CAAA: A5 31    
    lda CurrentStage\r\n0001CAAC: C9 07     cmp #$07\r\n0001CAAE: F0 1E     beq +                                          
    ; $CACE\r\n0001CAB0: A9 01     lda #$01\r\n0001CAB2: 85 2F     sta RefObjectNumber\r\n0001CAB4:
    A9 43     lda #$43 ;Spawn a teleport if it wasn't Wily2\r\n0001CAB6: A2 1F    
    ldx #$1F\r\n0001CAB8: 20 7B F6  jsr InitActor\r\n\r\n0001CABB: A9 08     lda
    #$08\r\n0001CABD: 9D 80 04  sta ObjectPosX,x\r\n\r\n0001CAC0: A8        tay\r\n0001CAC1:
    20 33 F5  jsr InitObjectDefaultSpeed\r\n0001CAC4: A9 B0     lda #$B0\r\n0001CAC6:
    9D 00 06  sta ObjectPosY,x\r\n\r\n; Make object invisible and collidable with
    Megaman\r\n0001CAC9: A9 22     lda #$22\r\n0001CACB: 9D 20 04  sta ObjectFlags,x\r\n+\r\n0001CACE:
    A9 00     lda #$00\r\n0001CAD0: 85 3E     sta BossCurrentStrategy\r\n\r\n0001CAD2:
    A9 F8     lda #$F8    ; Disable boss\r\n0001CAD4: 8D 01 06  sta ObjectPosY+1\r\n\r\n0001CAD7:
    A2 FF     ldx #$FF\r\n0001CAD9: 9A        txs\r\n0001CADA: 4C 5E 91  jmp $915E\r\n\r\n;
    Arrived here if it wasn't a rematch\r\n\r\n0001CADD: C9 06     cmp #$06\r\n0001CADF:
    D0 0E     bne +                                           ; $CAEF\r\n; Arrived
    here if it was Boss6\r\n0001CAE1: A2 02     ldx #$02\r\n-\r\n0001CAE3: BD 00
    CB  lda Boss6KilledPalette,x\r\n0001CAE6: 9D D5 03  sta BGPalettes + 5,x\r\n0001CAE9:
    CA        dex\r\n0001CAEA: 10 F7     bpl -                                          
    ; $CAE3\r\n0001CAEC: 20 3F C7  jsr PaletteSetupForBG\r\n\r\n+\r\n0001CAEF: A9
    F8     lda #$F8\r\n0001CAF1: 8D 01 06  sta ObjectPosY+1\r\n\r\n0001CAF4: A9 FF    
    lda #$FF\r\n0001CAF6: 85 3C     sta MiscCounter1\r\n-\r\n0001CAF8: 20 17 C3 
    jsr TimeDelayC317\r\n0001CAFB: D0 FB     bne -                                          
    ; $CAF8\r\n\r\n0001CAFD: 4C 5A C0  jmp StageClear                                 
    ; $C05A\r\n\r\n\r\nBoss6KilledPalette:; colours for some purpose\r\n    .byte
    $00,$10,$0F\r\n\r\n\r\n0001CB03: A2 10     ldx #$10\r\n0001CB05: 86 2F     stx
    RefObjectNumber\r\n0001CB07: 20 FD AE  jsr ReplaceObjectWithExplosion\r\n0001CB0A:
    A9 F8     lda #$F8\r\n0001CB0C: 8D 10 06  sta $0610\r\n0001CB0F: 8D 01 06  sta
    ObjectPosY+1\r\n+\r\n\r\n0001CB12: A2 03     ldx #$03\r\n-\r\n0001CB14: 9D 12
    06  sta $0612,x\r\n0001CB17: CA        dex\r\n0001CB18: 10 FA     bpl -                                          
    ; $CB14\r\n\r\n0001CB1A: A9 0F     lda #$0F\r\n0001CB1C: A2 07     ldx #$07\r\n-\r\n0001CB1E:
    9D D4 03  sta BGPalettes + $4,x\r\n0001CB21: CA        dex\r\n0001CB22: 10 FA    
    bpl -                                           ; $CB1E\r\n\r\n0001CB24: A9 00    
    lda #$00\r\n0001CB26: 8D D5 03  sta BGPalettes + $5\r\n0001CB29: 8D D9 03  sta
    BGPalettes + $9\r\n0001CB2C: 20 3F C7  jsr PaletteSetupForBG\r\n0001CB2F: 20
    31 D1  jsr UpdateGraphics                              ; $D131\r\n0001CB32: A9
    02     lda #$02\r\n0001CB34: 85 5C     sta $5C\r\n0001CB36: A9 B9     lda #$B9\r\n0001CB38:
    A2 09     ldx #$09\r\n0001CB3A: A0 08     ldy #$08\r\n0001CB3C: 20 BE F0  jsr
    DoPPUtransferRoutineF0BE\r\n0001CB3F: A9 B2     lda #$B2\r\n0001CB41: A2 0A    
    ldx #$0A\r\n0001CB43: A0 08     ldy #$08\r\n0001CB45: 20 BE F0  jsr DoPPUtransferRoutineF0BE\r\n0001CB48:
    A9 80     lda #$80\r\n0001CB4A: 85 3C     sta MiscCounter1\r\n0001CB4C: EE A0
    06  inc ObjectLifeCycleCounter+0\r\n0001CB4F: EE B1 06  inc $06B1\r\n0001CB52:
    20 17 C3  jsr TimeDelayC317\r\n0001CB55: D0 FB     bne $0001CB52\r\n0001CB57:
    A2 11     ldx #$11\r\n0001CB59: 86 2F     stx RefObjectNumber\r\n0001CB5B: A9
    4A     lda #$4A\r\n0001CB5D: 20 7B F6  jsr InitActor\r\n0001CB60: A9 11     lda
    #$11\r\n0001CB62: 9D 20 04  sta ObjectFlags,x\r\n0001CB65: A9 02     lda #$02\r\n0001CB67:
    9D 80 06  sta ObjectYSpeed,x\r\n0001CB6A: E6 68     inc ForcedInputFlag\r\n0001CB6C:
    4C CE CA  jmp $CACE\r\n\r\nObjectVerifyBackgroundCollision\r\n0001CB6F: 20 9C
    C3  jsr SwitchBankStage                             ; $C39C\r\n0001CB72: A5 01    
    lda $01\r\n0001CB74: 85 0C     sta $0C\r\n0001CB76: A5 00     lda $00\r\n0001CB78:
    85 0D     sta $0D\r\n0001CB7A: A6 2F     ldx RefObjectNumber\r\n0001CB7C: D0
    1B     bne +                                           ; $CB99\r\n0001CB7E: A2
    02     ldx #$02\r\n-\r\n0001CB80: 18        clc\r\n0001CB81: A5 03     lda $03\r\n0001CB83:
    7D 96 CB  adc CB96_table,x\r\n0001CB86: 85 0E     sta $0E\r\n0001CB88: 20 B7
    CC  jsr ReadCurrentStageMap\r\n\r\n0001CB8B: 95 2A     sta $2A,x\r\n0001CB8D:
    CA        dex\r\n0001CB8E: 10 F0     bpl -                                          
    ; $CB80\r\n\r\n0001CB90: 20 90 D7  jsr AnalyzeCurrentTile\r\n0001CB93: 4C B3
    C3  jmp SwitchBank05                                ; $C3B3\r\n\r\nCB96_table:
    .byte $F4, $FC, $0B\r\n+\r\n0001CB99: A6 2F     ldx RefObjectNumber\r\n0001CB9B:
    BC 00 04  ldy ObjectSpriteNum,x\r\n0001CB9E: C0 FF     cpy #$FF\r\n0001CBA0:
    D0 08     bne $0001CBAA\r\n0001CBA2: BC E0 06  ldy ObjectType,x\r\n0001CBA5:
    B9 3A FC  lda TableObjectYHeightTable1,y     ; *\r\n0001CBA8: D0 03     bne +                                          
    ; $CBAD\r\n0001CBAA: B9 B7 FB  lda TableObjectYHeightTable2,y     ; *\r\n+\r\n0001CBAD:
    48        pha\r\n\r\n0001CBAE: 49 FF     eor #$FF    ; A = -A\r\n0001CBB0: 18       
    clc\r\n0001CBB1: 69 01     adc #$01\r\n\r\n0001CBB3: 18        clc\r\n0001CBB4:
    65 03     adc $03\r\n-\r\n0001CBB6: 85 0E     sta $0E\r\n0001CBB8: 20 B7 CC 
    jsr ReadCurrentStageMap\r\n0001CBBB: C9 01     cmp #$01\r\n0001CBBD: F0 17    
    beq -                                           ; $CBD6\r\n0001CBBF: 68       
    pla\r\n\r\n0001CBC0: 38        sec\r\n0001CBC1: E9 01     sbc #$01\r\n0001CBC3:
    18        clc\r\n0001CBC4: 65 03     adc $03\r\n0001CBC6: 85 0E     sta $0E\r\n0001CBC8:
    20 B7 CC  jsr ReadCurrentStageMap\r\n0001CBCB: C9 01     cmp #$01\r\n0001CBCD:
    F0 08     beq $0001CBD7\r\n0001CBCF: A9 00     lda #$00\r\n0001CBD1: 85 2A    
    sta $2A\r\n0001CBD3: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n0001CBD6: 68        pla\r\n\r\n0001CBD7: A9 01     lda #$01\r\n0001CBD9:
    85 2A     sta $2A\r\n0001CBDB: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\n\r\nUpdateCurrentTileState\r\n0001CBDE: A9 00     lda #$00\r\n0001CBE0:
    85 30     sta CurrentTileState\r\n\r\n0001CBE2: AD 80 04  lda ObjectPosX+0\r\n0001CBE5:
    85 00     sta $00\r\n0001CBE7: AD 60 04  lda ObjectPosScreen+0                        
    ; $0460\r\n0001CBEA: 85 01     sta $01\r\n0001CBEC: AD 00 06  lda ObjectPosY+0                                
    ; ObjectPosY+0\r\n0001CBEF: 85 03     sta $03\r\n0001CBF1: 20 6F CB  jsr ObjectVerifyBackgroundCollision\r\n\r\n0001CBF4:
    38        sec\r\n0001CBF5: AD 20 06  lda ObjectPosYfraction+0\r\n0001CBF8: ED
    60 06  sbc ObjectYSpeedFraction+0\r\n0001CBFB: AD 00 06  lda ObjectPosY+0                                
    ; ObjectPosY+0\r\n0001CBFE: ED 80 06  sbc ObjectYSpeed+0\r\n0001CC01: AE 80 06 
    ldx ObjectYSpeed+0\r\n0001CC04: 30 06     bmi +    ;Is he moving up?\r\n0001CC06:
    38        sec\r\n0001CC07: E9 0C     sbc #$0C ;Down.\r\n0001CC09: 4C 0F CC  jmp
    ++\r\n+\r\n0001CC0C: 18        clc\r\n0001CC0D: 69 0C     adc #$0C ;Up.\r\n++\r\n0001CC0F:
    85 0E     sta $0E\r\n0001CC11: 20 9C C3  jsr SwitchBankStage                            
    ; $C39C\r\n0001CC14: 20 B7 CC  jsr ReadCurrentStageMap\r\n0001CC17: C9 02    
    cmp #$02\r\n0001CC19: D0 0F     bne +++\r\n0001CC1B: A5 30     lda CurrentTileState\r\n0001CC1D:
    AE 80 06  ldx ObjectYSpeed+0\r\n0001CC20: 30 04     bmi + ;Moving up?\r\n\r\n0001CC22:
    09 10     ora #$10  ; Force climbing up\r\n0001CC24: D0 02     bne ++ ;unconditional
    jump\r\n+\r\n0001CC26: 09 01     ora #$01  ; Enable climbing down\r\n++\r\n0001CC28:
    85 30     sta CurrentTileState\r\n+++\r\n0001CC2A: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\n\r\nDoCollisionCheckFor\r\n0001CC2D: 20 9C C3  jsr SwitchBankStage                            
    ; $C39C\r\n\r\n0001CC30: A5 03     lda $03\r\n0001CC32: 85 0E     sta $0E\r\n\r\n0001CC34:
    A6 2F     ldx RefObjectNumber\r\n0001CC36: D0 28     bne +                                          
    ; $CC60\r\n\r\n0001CC38: A9 00     lda #$00\r\n0001CC3A: 85 2B     sta $2B\r\n0001CC3C:
    A2 03     ldx #$03\r\n-\r\n; $00,$01 + $CC5C,X,$CC5B,X => $0D,$0C\r\n0001CC3E:
    18        clc\r\n0001CC3F: A5 00     lda $00\r\n0001CC41: 7D 5C CC  adc CC5C_table+0,x\r\n0001CC44:
    85 0D     sta $0D\r\n0001CC46: A5 01     lda $01\r\n0001CC48: 7D 5B CC  adc CC5C_table-1,x\r\n0001CC4B:
    85 0C     sta $0C\r\n\r\n0001CC4D: 20 B7 CC  jsr ReadCurrentStageMap\r\n0001CC50:
    CA        dex\r\n0001CC51: 95 2A     sta $2A,x\r\n0001CC53: CA        dex\r\n0001CC54:
    10 E8     bpl -                                           ; $CC3E\r\n\r\n0001CC56:
    20 E1 D7  jsr $D7E1\r\n0001CC59: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\nCC5C_table:\r\n    .byte $00,$07 ;+7\r\n    .byte $FF,$F9 ;-7\r\n\r\n+\r\n0001CC60:
    A6 2F     ldx RefObjectNumber\r\n0001CC62: BC 00 04  ldy ObjectSpriteNum,x\r\n0001CC65:
    C0 FF     cpy #$FF\r\n0001CC67: D0 08     bne +\r\n0001CC69: BC E0 06  ldy ObjectType,x\r\n0001CC6C:
    B9 38 FB  lda TableObjectXWidthTable1,y     ; *\r\n0001CC6F: D0 03     bne ++\r\n+\r\n0001CC71:
    B9 B5 FA  lda TableObjectXWidthTable2,y     ; *\r\n++\r\n0001CC74: 38       
    sec\r\n0001CC75: E9 01     sbc #$01\r\n0001CC77: 85 0F     sta $0F\r\n0001CC79:
    18        clc\r\n0001CC7A: A5 00     lda $00\r\n0001CC7C: 65 0F     adc $0F\r\n0001CC7E:
    85 0D     sta $0D\r\n0001CC80: A5 01     lda $01\r\n0001CC82: 69 00     adc #$00\r\n0001CC84:
    85 0C     sta $0C\r\n0001CC86: 20 B7 CC  jsr ReadCurrentStageMap\r\n0001CC89:
    C9 01     cmp #$01\r\n0001CC8B: F0 23     beq +                                          
    ; $CCB0\r\n0001CC8D: C9 04     cmp #$04\r\n0001CC8F: F0 1F     beq +                                          
    ; $CCB0\r\n0001CC91: 38        sec\r\n0001CC92: A5 00     lda $00\r\n0001CC94:
    E5 0F     sbc $0F\r\n0001CC96: 85 0D     sta $0D\r\n0001CC98: A5 01     lda $01\r\n0001CC9A:
    E9 00     sbc #$00\r\n0001CC9C: 85 0C     sta $0C\r\n0001CC9E: 20 B7 CC  jsr
    ReadCurrentStageMap\r\n0001CCA1: C9 01     cmp #$01\r\n0001CCA3: F0 0B     beq
    +                                           ; $CCB0\r\n0001CCA5: C9 04     cmp
    #$04\r\n0001CCA7: F0 07     beq +                                           ;
    $CCB0\r\n0001CCA9: A9 00     lda #$00\r\n0001CCAB: 85 2B     sta $2B\r\n0001CCAD:
    4C B3 C3  jmp SwitchBank05                                ; $C3B3\r\n+\r\n0001CCB0:
    A9 01     lda #$01\r\n0001CCB2: 85 2B     sta $2B\r\n0001CCB4: 4C B3 C3  jmp
    SwitchBank05                                ; $C3B3\r\n\r\n\r\nReadCurrentStageMap\r\n0001CCB7:
    A4 8E     ldy ActivesLowerIndex\r\n0001CCB9: 20 8A CD  jsr CheckCollisionAgainstActives\r\n0001CCBC:
    C9 00     cmp #$00\r\n0001CCBE: F0 01     beq +                                          
    ; $CCC1\r\n0001CCC0: 60        rts\r\n+\r\n0001CCC1: A5 0E     lda $0E\r\n0001CCC3:
    C9 F0     cmp #$F0\r\n0001CCC5: 90 11     bcc ++\r\n0001CCC7: A4 2F     ldy RefObjectNumber\r\n0001CCC9:
    B9 00 06  lda ObjectPosY,y\r\n0001CCCC: C9 F1     cmp #$F1\r\n0001CCCE: B0 04    
    bcs +                                           ; $0001CCD4\r\n0001CCD0: C9 80    
    cmp #$80\r\n0001CCD2: B0 04     bcs ++                                         
    ; $0001CCD8\r\n+ ;When Ypos < #$80 or Ypos >= #$F1 and $0E != #$F0\r\n0001CCD4:
    A9 00     lda #$00\r\n0001CCD6: 85 0E     sta $0E\r\n; This seems to be the map\r\n++\r\n0001CCD8:
    A4 0C     ldy $0C\r\n0001CCDA: B9 00 8C  lda RoomOrderTable,y\r\n0001CCDD: 0A       
    asl a\r\n0001CCDE: A8        tay\r\n; $04,$05 = address of room to draw \r\n0001CCDF:
    B9 30 8C  lda RoomPointerTable+0,y\r\n0001CCE2: 85 04     sta $04\r\n0001CCE4:
    B9 31 8C  lda RoomPointerTable+1,y\r\n0001CCE7: 85 05     sta $05\r\n0001CCE9:
    A5 0D     lda $0D\r\n0001CCEB: 4A        lsr a\r\n0001CCEC: 4A        lsr a\r\n0001CCED:
    29 38     and #$38\r\n0001CCEF: 85 07     sta CurrentRoomPointer+1\r\n0001CCF1:
    A5 0E     lda $0E\r\n0001CCF3: 2A        rol a\r\n0001CCF4: 2A        rol a\r\n0001CCF5:
    2A        rol a\r\n0001CCF6: 2A        rol a\r\n0001CCF7: 29 07     and #$07\r\n0001CCF9:
    05 07     ora CurrentRoomPointer+1\r\n0001CCFB: A8        tay\r\n; Read 32x32
    tile index\r\n0001CCFC: B1 04     lda ($04),y\r\n0001CCFE: A0 00     ldy #$00\r\n0001CD00:
    84 09     sty $09\r\n0001CD02: 0A        asl a\r\n0001CD03: 26 09     rol $09\r\n0001CD05:
    0A        asl a\r\n0001CD06: 26 09     rol $09\r\n0001CD08: A8        tay\r\n\r\n0001CD09:
    A5 0E     lda $0E\r\n0001CD0B: 29 10     and #$10\r\n0001CD0D: F0 01     beq
    +                                           ; $CD10\r\n0001CD0F: C8        iny\r\n+\r\n0001CD10:
    A5 0D     lda $0D\r\n0001CD12: 29 10     and #$10\r\n0001CD14: F0 02     beq
    +                                           ; $CD18\r\n0001CD16: C8        iny\r\n0001CD17:
    C8        iny\r\n+\r\n0001CD18: A9 00     lda #(RoomBlockData).lo\r\n0001CD1A:
    85 08     sta CurrentRoomPointer+2\r\n\r\n0001CD1C: A9 80     lda #(RoomBlockData).hi\r\n0001CD1E:
    05 09     ora CurrentRoomPointer+3\r\n0001CD20: 85 09     sta CurrentRoomPointer+3\r\n\r\n           
    ; CurrentRoomPointer[2] = 8000 + (byte3 << 8)\r\n\r\n0001CD22: B1 08     lda
    (CurrentRoomPointer+2),y\r\n0001CD24: 29 C0     and #$C0\r\n\r\n0001CD26: A4
    31     ldy CurrentStage\r\n0001CD28: 84 06     sty CurrentRoomPointer\r\n0001CD2A:
    0A        asl a\r\n0001CD2B: 26 06     rol CurrentRoomPointer\r\n0001CD2D: 0A       
    asl a\r\n0001CD2E: 26 06     rol CurrentRoomPointer\r\n0001CD30: A4 06     ldy
    CurrentRoomPointer\r\n0001CD32: B9 46 CD  lda BlockTransparencyMap,y\r\n\r\n0001CD35:
    C9 02     cmp #$02 ;climbable?\r\n0001CD37: D0 0C     bne ++                                         
    ; $CD45\r\n\r\n0001CD39: A5 2F     lda RefObjectNumber\r\n0001CD3B: D0 06    
    bne +                                           ; $CD43\r\n; For Rockman (and
    him only), it means a climbable\r\n0001CD3D: A5 0D     lda $0D\r\n0001CD3F: 29
    F0     and #$F0\r\n0001CD41: 85 2E     sta $2E\r\n+\r\n0001CD43: A9 02     lda
    #$02\r\n++\r\n0001CD45: 60        rts\r\n\r\n; According to Rock&Roll (editor),
    TSAsettings\r\n; is about which is blocks are air and transparent and so on\r\nBlockTransparencyMap
    ; at CD46\r\n    .byte 0,1,2,3 ;0 C\r\n    .byte 0,1,4,5 ;1 I\r\n    .byte 0,1,2,3
    ;2 B\r\n    .byte 0,1,2,6 ;3 F\r\n    .byte 0,1,2,0 ;4 E\r\n    .byte 0,1,3,0
    ;5 G\r\n    .byte 0,1,3,2 ;6 W1\r\n    .byte 0,1,2,3 ;7 W2\r\n    .byte 0,1,0,0
    ;8 W3\r\n    .byte 0,1,3,2 ;9 W4\r\n    .byte 0,1,0,0 ;A gruu\r\n\r\nRecalculateActivesLowerIndex\r\n0001CD72:
    20 9C C3  jsr SwitchBankStage                             ; $C39C\r\n0001CD75:
    A0 00     ldy #$00\r\n-\r\n0001CD77: B9 22 07  lda RoomActiveTable+2,y ;is it
    in same screen?\r\n0001CD7A: C5 1B     cmp ScrollPosScreen\r\n0001CD7C: B0 07    
    bcs +                                           ; $CD85\r\n0001CD7E: 98       
    tya\r\n0001CD7F: 18        clc\r\n0001CD80: 69 06     adc #$06\r\n0001CD82: A8       
    tay\r\n0001CD83: D0 F2     bne -                                           ;
    $CD77\r\n+\r\n0001CD85: 84 8E     sty ActivesLowerIndex\r\n0001CD87: 4C B3 C3 
    jmp SwitchBank05                                ; $C3B3\r\n\r\n\r\n\r\nCheckCollisionAgainstActives\r\n;
    Input:\r\n;   $0C,$0D,$0E = screen#,X,Y\r\n;\r\n0001CD8A: A5 68     lda ForcedInputFlag\r\n0001CD8C:
    D0 57     bne +++\r\n; Ignore these tests if forced input is active.\r\n; This
    rule is here to allow Megaman to walk through the Actives that\r\n; normally
    prevent him from exiting the room through the leftside shutter.\r\n; Incidentally,
    it also means that Gutsblocks will be air for Megaman\r\n; during the time when
    a boss battle starts.\r\n0001CD8E: AD 20 07  lda RoomActiveTable\r\n-\r\n0001CD91:
    B9 21 07  lda RoomActiveTable+1,y ;is it a blocking object?\r\n0001CD94: F0 48    
    beq ++\r\n0001CD96: B9 22 07  lda RoomActiveTable+2,y ;is it in the same screen?\r\n0001CD99:
    C5 0C     cmp $0C\r\n0001CD9B: F0 05     beq +                                          
    ; $CDA2\r\n0001CD9D: 90 3F     bcc ++\r\n0001CD9F: 4C E5 CD  jmp +++ ;Ignore
    the active if the screen number is ahead current point.\r\n+\r\n0001CDA2: B9
    23 07  lda RoomActiveTable+3,y ;check x1\r\n0001CDA5: C5 0D     cmp $0D\r\n0001CDA7:
    F0 02     beq +                                           ; $CDAB\r\n0001CDA9:
    B0 33     bcs ++\r\n+\r\n0001CDAB: B9 25 07  lda RoomActiveTable+5,y ;check x2\r\n0001CDAE:
    F0 06     beq +\r\n0001CDB0: C5 0D     cmp $0D\r\n0001CDB2: F0 2A     beq ++\r\n0001CDB4:
    90 28     bcc ++\r\n+\r\n0001CDB6: B9 24 07  lda RoomActiveTable+4,y ;check y1\r\n0001CDB9:
    C5 0E     cmp $0E\r\n0001CDBB: F0 02     beq +\r\n0001CDBD: B0 1F     bcs ++\r\n+\r\n0001CDBF:
    B9 26 07  lda RoomActiveTable+6,y ;check y2\r\n0001CDC2: F0 06     beq +\r\n0001CDC4:
    C5 0E     cmp $0E\r\n0001CDC6: F0 16     beq ++\r\n0001CDC8: 90 14     bcc ++\r\n+\r\n0001CDCA:
    A5 2F     lda RefObjectNumber\r\n0001CDCC: D0 06     bne +\r\n0001CDCE: B9 21
    07  lda RoomActiveTable+1,y\r\n0001CDD1: 09 80     ora #$80\r\n0001CDD3: 60       
    rts\r\n+\r\n0001CDD4: B9 21 07  lda RoomActiveTable+1,y\r\n0001CDD7: C9 04    
    cmp #$04 ;if it's a disintegrated gutsblock, it's no longer there\r\n0001CDD9:
    F0 0A     beq +++\r\n0001CDDB: A9 01     lda #$01\r\n0001CDDD: 60        rts\r\n++\r\n0001CDDE:
    98        tya\r\n0001CDDF: 18        clc\r\n0001CDE0: 69 06     adc #$06\r\n0001CDE2:
    A8        tay\r\n0001CDE3: D0 AC     bne -\r\n+++\r\n0001CDE5: A9 00     lda
    #$00\r\n0001CDE7: 60        rts\r\n\r\n\r\n; This routine seems to write the
    transfer buffer when scrolling...\r\n; It checks if the given location has been
    replaced with a picked\r\n; up gutsblock. If it hasn't, it reads the level map.\r\n;
    Then it sets up the TSA transfer data.\r\nDrawBlockFromActiveLevelMap\r\n0001CDE8:
    20 9C C3  jsr SwitchBankStage                         ; $C39C\r\n0001CDEB: E6
    1C     inc TSAPPUtransferSize\r\n\r\n0001CDED: 20 9A CE  jsr CalculateNametableAddress\r\n\r\n0001CDF0:
    A5 0C     lda $0C\r\n0001CDF2: 48        pha\r\n0001CDF3: A5 0D      lda $0D\r\n0001CDF5:
    48         pha\r\n0001CDF6: A5 0E      lda $0E\r\n0001CDF8: 48         pha\r\n0001CDF9:
    A5 05      lda $05\r\n0001CDFB: 48         pha\r\n0001CDFC: 85 0C      sta $0C\r\n0001CDFE:
    A5 04      lda $04\r\n0001CE00: 29 E0      and #$E0\r\n0001CE02: 85 0D      sta
    $0D\r\n0001CE04: A5 04      lda $04\r\n0001CE06: 29 1F      and #$1F\r\n0001CE08:
    0A         asl a\r\n0001CE09: 0A         asl a\r\n0001CE0A: 0A         asl a\r\n0001CE0B:
    85 0E      sta $0E\r\n0001CE0D: A0 00      ldy #$00\r\n0001CE0F: 20 8A CD   jsr
    CheckCollisionAgainstActives\r\n0001CE12: A8         tay\r\n0001CE13: 68        
    pla\r\n0001CE14: 85 05      sta $05\r\n0001CE16: 68         pla\r\n0001CE17:
    85 0E      sta $0E\r\n0001CE19: 68         pla\r\n0001CE1A: 85 0D      sta $0D\r\n0001CE1C:
    68        pla\r\n0001CE1D: 85 0C     sta $0C\r\n0001CE1F: C0 84     cpy #$84
    ; $84 = hit a decimated gutsblock\r\n0001CE21: D0 35     bne ++                 
    ; $CE58\r\n0001CE23: A4 31     ldy CurrentStage\r\n0001CE25: A5 05     lda $05\r\n0001CE27:
    D9 49 CE  cmp RoomBossOrder,y\r\n0001CE2A: D0 27     bne +                  
    ; $CE53\r\n0001CE2C: B9 31 CE  lda SecondGutsblockReplacement,y\r\n0001CE2F:
    D0 3F     bne +++                 ; $CE70\r\n\r\nSecondGutsblockReplacement ;CE31\r\n   
    ; Block used to replace gutsblocks in boss room\r\n    ; If 0 (and gutsblock
    is picked up in the boss room), the game crashes\r\n    .byte $5B,$00,$00,$00,$60,$2B\r\n   
    .byte $8D,$01,$9C,$94,$01\r\n    .byte $01,$01\r\nFirstGutsblockReplacement ;CE3D\r\n   
    .byte $01,$01,$01,$01,$01,$8D\r\n    .byte $01,$9C,$94,$01,$01\r\nRoomBossOrder
    ;CE49 - rooms where boss will appear\r\n    .byte $17,$17,$17,$13,$17,$12\r\n   
    .byte $27,$28,$2F,$23\r\n\r\n+\r\n0001CE53: B9 3D CE  lda FirstGutsblockReplacement,y\r\n0001CE56:
    D0 18     bne +++                                         ; $CE70\r\n++\r\n0001CE58:
    A4 05     ldy $05\r\n\r\n0001CE5A: B9 00 8C  lda RoomOrderTable,y\r\n0001CE5D:
    0A        asl a\r\n0001CE5E: A8        tay\r\n\r\n            ; Load the address
    of the particular room\r\n\r\n0001CE5F: B9 30 8C  lda RoomPointerTable+0,y\r\n0001CE62:
    85 06     sta CurrentRoomPointer\r\n0001CE64: B9 31 8C  lda RoomPointerTable+1,y\r\n0001CE67:
    85 07     sta CurrentRoomPointer+1\r\n\r\n0001CE69: A5 04     lda $04\r\n0001CE6B:
    4A        lsr a\r\n0001CE6C: 4A        lsr a\r\n0001CE6D: A8        tay\r\n0001CE6E:
    B1 06     lda (CurrentRoomPointer),y ; Read 4x4 block index\r\n+++\r\n0001CE70:
    48        pha\r\n0001CE71: A0 00      ldy #$00\r\n0001CE73: 84 07      sty CurrentRoomPointer+1\r\n0001CE75:
    0A         asl a\r\n0001CE76: 26 07      rol CurrentRoomPointer+1\r\n0001CE78:
    0A         asl a\r\n0001CE79: 26 07      rol CurrentRoomPointer+1\r\n0001CE7B:
    A8         tay\r\n\r\n0001CE7C: A9 00      lda #(RoomBlockData).lo\r\n0001CE7E:
    85 06      sta CurrentRoomPointer\r\n\r\n0001CE80: A9 80      lda #(RoomBlockData).hi\r\n0001CE82:
    05 07      ora CurrentRoomPointer+1\r\n0001CE84: 85 07      sta CurrentRoomPointer+1\r\n0001CE86:
    20 D7 CE   jsr Write32x32BlockToBuffer                     ; $CED7\r\n0001CE89:
    20 06 CF   jsr Adjust32x32BlockAddress                 ; $CF06\r\n0001CE8C: 68       
    pla\r\n\r\n0001CE8D: A8        tay\r\n0001CE8E: B9 00 83  lda RoomBlockPals,y\r\n0001CE91:
    9D 00 03  sta TSAPPUtransfer0NTdata-2,x\r\n0001CE94: E8        inx\r\n0001CE95:
    86 0D     stx $0D\r\n0001CE97: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\n;\r\n; If $05 is even then $09,$10 = #$2023 else $09,$10 = #$2427\r\n;\r\nCalculateNametableAddress\r\n0001CE9A:
    A2 20     ldx #$20\r\n0001CE9C: A0 23     ldy #$23\r\n\r\n0001CE9E: A5 05    
    lda $05\r\n0001CEA0: 29 01     and #$01\r\n0001CEA2: F0 04     beq +                                          
    ; $CEA8\r\n0001CEA4: A2 24     ldx #$24\r\n0001CEA6: A0 27     ldy #$27\r\n+\r\n0001CEA8:
    86 10     stx $10\r\n0001CEAA: 84 09     sty $09\r\n;\r\n; $04 = nnnYYYYY\r\n;\r\n;      
    000000YY YYYnnn00\r\n;                   \r\n0001CEAC: A9 00     lda #$00\r\n0001CEAE:
    85 07     sta CurrentRoomPointer+1\r\n\r\n0001CEB0: A5 04     lda $04\r\n0001CEB2:
    29 1F     and #$1F\r\n0001CEB4: 0A        asl a\r\n0001CEB5: 0A        asl a\r\n0001CEB6:
    0A        asl a\r\n0001CEB7: 0A        asl a\r\n0001CEB8: 26 07     rol CurrentRoomPointer+1\r\n0001CEBA:
    0A        asl a\r\n0001CEBB: 26 07     rol CurrentRoomPointer+1\r\n0001CEBD:
    85 06     sta CurrentRoomPointer\r\n\r\n0001CEBF: A5 04     lda $04\r\n0001CEC1:
    29 E0     and #$E0\r\n0001CEC3: 4A        lsr a\r\n0001CEC4: 4A        lsr a\r\n0001CEC5:
    4A        lsr a\r\n0001CEC6: 05 06     ora CurrentRoomPointer\r\n0001CEC8: A6
    0D     ldx $0D\r\n0001CECA: 9D 01 03  sta TSAPPUtransfer0NTaddress+1,x\r\n\r\n0001CECD:
    A5 10     lda $10\r\n0001CECF: 05 07     ora CurrentRoomPointer+1\r\n0001CED1:
    9D 00 03  sta TSAPPUtransfer0NTaddress+0,x\r\n\r\n0001CED4: E8        inx\r\n0001CED5:
    E8        inx\r\n\r\n0001CED6: 60        rts\r\n\r\n\r\n;\r\n; this routine writes
    the transfer buffer with the 32x32 block at (CurrentRoomPointer),Y\r\n;\r\n\r\n;\r\n;
    0   2   8   A\r\n;  (0)     (2)\r\n; 1   3   9   B\r\n;\r\n; 4   6   C   E\r\n; 
    (1)     (3)\r\n; 5   7   D   F\r\n;\r\n; [16x16] [16x16]\r\n; \r\n; [16x16] [16x16]\r\n\r\n\r\nWrite32x32BlockToBuffer\r\n0001CED7:
    A9 02     lda #$02\r\n0001CED9: 85 0E     sta $0E\r\n--\r\n0001CEDB: A9 02    
    lda #$02\r\n0001CEDD: 85 0F     sta $0F\r\n-\r\n; One 16x16 block\r\n0001CEDF:
    B1 06     lda (CurrentRoomPointer),y\r\n0001CEE1: 0A        asl a\r\n0001CEE2:
    0A        asl a\r\n0001CEE3: 18        clc\r\n0001CEE4: 9D 00 03  sta TSAPPUtransfer0NTaddress+0,x\r\n0001CEE7:
    69 01     adc #$01\r\n0001CEE9: 9D 01 03  sta TSAPPUtransfer0NTaddress+1,x\r\n0001CEEC:
    69 01     adc #$01\r\n0001CEEE: 9D 04 03  sta TSAPPUtransfer0NTdata+2,x\r\n0001CEF1:
    69 01     adc #$01\r\n0001CEF3: 9D 05 03  sta TSAPPUtransfer0NTdata+3,x\r\n\r\n0001CEF6:
    E8        inx\r\n0001CEF7: E8        inx\r\n0001CEF8: C8        iny\r\n0001CEF9:
    C6 0F     dec $0F\r\n0001CEFB: D0 E2     bne -                                          
    ; $CEDF\r\n\r\n0001CEFD: E8        inx\r\n0001CEFE: E8        inx\r\n0001CEFF:
    E8        inx\r\n0001CF00: E8        inx\r\n0001CF01: C6 0E     dec $0E\r\n0001CF03:
    D0 D6     bne --                                          ; $CEDB\r\n0001CF05:
    60        rts\r\n\r\n\r\n\r\n; attribute table writing\r\n\r\nAdjust32x32BlockAddress\r\n0001CF06:
    A5 04     lda $04\r\n0001CF08: 2A        rol a\r\n\r\n0001CF09: 48        pha\r\n0001CF0A:
    2A         rol a\r\n0001CF0B: 2A         rol a\r\n0001CF0C: 2A         rol a\r\n0001CF0D:
    29 07      and #$07\r\n0001CF0F: 85 08      sta CurrentRoomPointer+2\r\n0001CF11:
    68        pla\r\n\r\n0001CF12: 29 38     and #$38\r\n0001CF14: 05 08     ora
    CurrentRoomPointer+2\r\n0001CF16: 09 C0     ora #$C0\r\n0001CF18: 9D 01 03  sta
    TSAPPUtransfer0NTaddress+1,x\r\n0001CF1B: A5 09     lda CurrentRoomPointer+3\r\n0001CF1D:
    9D 00 03  sta TSAPPUtransfer0NTaddress+0,x\r\n0001CF20: E8        inx\r\n0001CF21:
    E8        inx\r\n0001CF22: 60        rts\r\n\r\n\r\n\r\n0001CF23: 20 9C C3  jsr
    SwitchBankStage                             ; $C39C\r\n0001CF26: A5 33     lda
    $33\r\n0001CF28: 4A        lsr a\r\n0001CF29: 4A        lsr a\r\n0001CF2A: 4A       
    lsr a\r\n0001CF2B: 4A        lsr a\r\n0001CF2C: 8D 00 03  sta TSAPPUtransfer0NTaddress+0\r\n0001CF2F:
    A5 33     lda $33\r\n0001CF31: 0A        asl a\r\n0001CF32: 0A        asl a\r\n0001CF33:
    0A        asl a\r\n0001CF34: 48        pha\r\n0001CF35: 29 18     and #$18\r\n0001CF37:
    8D 01 03  sta TSAPPUtransfer0NTaddress+1\r\n0001CF3A: 68        pla\r\n\r\n0001CF3B:
    0A        asl a\r\n0001CF3C: 29 C0     and #$C0\r\n0001CF3E: 0D 01 03  ora TSAPPUtransfer0NTaddress+1\r\n0001CF41:
    8D 01 03  sta TSAPPUtransfer0NTaddress+1\r\n\r\n0001CF44: A5 33     lda $33\r\n0001CF46:
    29 F8     and #$F8\r\n0001CF48: 09 C0     ora #$C0\r\n0001CF4A: 8D 13 03  sta
    TSAPPUtransfer0AttrAddress+1\r\n\r\n0001CF4D: A5 33     lda $33\r\n0001CF4F:
    29 03     and #$03\r\n0001CF51: 0A        asl a\r\n0001CF52: 0D 13 03  ora TSAPPUtransfer0AttrAddress+1\r\n0001CF55:
    8D 13 03  sta TSAPPUtransfer0AttrAddress+1\r\n\r\n0001CF58: A2 20     ldx #$20\r\n0001CF5A:
    A5 1B     lda ScrollPosScreen\r\n0001CF5C: 29 01     and #$01\r\n0001CF5E: F0
    02     beq +                                           ; $CF62\r\n0001CF60: A2
    24     ldx #$24\r\n+\r\n0001CF62: 8A        txa\r\n0001CF63: 0D 00 03  ora TSAPPUtransfer0NTaddress+0\r\n0001CF66:
    8D 00 03  sta TSAPPUtransfer0NTaddress+0\r\n0001CF69: 8A        txa\r\n\r\n0001CF6A:
    09 03     ora #$03\r\n0001CF6C: 8D 12 03  sta TSAPPUtransfer0AttrAddress+0\r\n0001CF6F:
    A9 00     lda #$00\r\n0001CF71: 85 0C     sta $0C\r\n0001CF73: A5 33     lda
    $33\r\n0001CF75: 29 3B     and #$3B\r\n0001CF77: 4A        lsr a\r\n0001CF78:
    66 0C     ror $0C\r\n0001CF7A: 4A        lsr a\r\n0001CF7B: 66 0C     ror $0C\r\n0001CF7D:
    4A        lsr a\r\n0001CF7E: 66 0C     ror $0C\r\n0001CF80: 46 0C     lsr $0C\r\n0001CF82:
    05 0C     ora $0C\r\n0001CF84: 85 0C     sta $0C\r\n\r\n0001CF86: AE 60 04  ldx
    ObjectPosScreen+0                         ; $0460\r\n0001CF89: BD 00 8C  lda
    RoomOrderTable,x\r\n0001CF8C: 0A        asl a\r\n0001CF8D: AA        tax\r\n0001CF8E:
    BD 30 8C  lda RoomPointerTable+0,x\r\n0001CF91: 85 04     sta $04\r\n0001CF93:
    BD 31 8C  lda RoomPointerTable+1,x\r\n0001CF96: 85 05     sta $05\r\n0001CF98:
    A2 00     ldx #$00\r\n0001CF9A: 86 0D     stx $0D\r\n\r\n--\r\n0001CF9C: A9 00    
    lda #$00\r\n0001CF9E: 85 07     sta CurrentRoomPointer+1\r\n0001CFA0: A5 0D    
    lda $0D\r\n\r\n0001CFA2: 48        pha\r\n0001CFA3: A5 0E     lda $0E\r\n0001CFA5:
    48        pha\r\n0001CFA6: A5 05     lda $05\r\n0001CFA8: 48        pha\r\n0001CFA9:
    A5 0C     lda $0C\r\n0001CFAB: 48        pha\r\n0001CFAC: 29 38     and #$38\r\n0001CFAE:
    0A        asl a\r\n0001CFAF: 0A        asl a\r\n0001CFB0: 85 0D     sta $0D\r\n0001CFB2:
    A5 0C     lda $0C\r\n0001CFB4: 29 07     and #$07\r\n0001CFB6: 4A        lsr
    a\r\n0001CFB7: 6A        ror a\r\n0001CFB8: 6A        ror a\r\n0001CFB9: 6A       
    ror a\r\n0001CFBA: 85 0E     sta $0E\r\n0001CFBC: AD 60 04  lda ObjectPosScreen+0                        
    ; $0460\r\n0001CFBF: 85 0C     sta $0C\r\n0001CFC1: A0 00     ldy #$00\r\n0001CFC3:
    20 8A CD  jsr CheckCollisionAgainstActives\r\n0001CFC6: A8        tay\r\n0001CFC7:
    68        pla\r\n0001CFC8: 85 0C     sta $0C\r\n0001CFCA: 68        pla\r\n0001CFCB:
    85 05     sta $05\r\n0001CFCD: 68        pla\r\n0001CFCE: 85 0E     sta $0E\r\n0001CFD0:
    68        pla\r\n\r\n0001CFD1: 85 0D     sta $0D\r\n0001CFD3: C0 84     cpy #$84\r\n0001CFD5:
    D0 14     bne ++\r\n0001CFD7: A4 31     ldy CurrentStage\r\n0001CFD9: AD 60 04 
    lda ObjectPosScreen+0                         ; $0460\r\n0001CFDC: DD 49 CE 
    cmp RoomBossOrder,x\r\n0001CFDF: D0 05     bne +\r\n0001CFE1: B9 31 CE  lda SecondGutsblockReplacement,y
    ; tile to replace shutter with\r\n0001CFE4: D0 09     bne +++\r\n+\r\n0001CFE6:
    B9 3D CE  lda FirstGutsblockReplacement,y ; well, another tile to replace shutter
    with\r\n0001CFE9: D0 04     bne +++\r\n++\r\n0001CFEB: A4 0C     ldy $0C\r\n0001CFED:
    B1 04     lda ($04),y ; 4x4 block to be written (index into RoomBlockPals and
    RoomBlockData)\r\n+++\r\n0001CFEF: 85 0F     sta $0F\r\n0001CFF1: 0A        asl
    a\r\n0001CFF2: 26 07     rol CurrentRoomPointer+1\r\n0001CFF4: 0A        asl
    a\r\n0001CFF5: 26 07     rol CurrentRoomPointer+1\r\n0001CFF7: A8        tay\r\n0001CFF8:
    A9 80     lda #(RoomBlockData).hi\r\n0001CFFA: 05 07     ora CurrentRoomPointer+1\r\n0001CFFC:
    85 07     sta CurrentRoomPointer+1\r\n0001CFFE: A9 00     lda #(RoomBlockData).lo\r\n0001D000:
    85 06     sta CurrentRoomPointer\r\n0001D002: A5 33     lda $33\r\n0001D004:
    29 04     and #$04\r\n0001D006: F0 01     beq +                                          
    ; $D009\r\n0001D008: C8        iny\r\n+\r\n0001D009: A9 02     lda #$02\r\n0001D00B:
    85 0E     sta $0E\r\n-\r\n0001D00D: B1 06     lda (CurrentRoomPointer),y\r\n0001D00F:
    0A        asl a\r\n0001D010: 0A        asl a\r\n0001D011: 18        clc\r\n0001D012:
    9D 02 03  sta TSAPPUtransfer0NTdata+0,x\r\n0001D015: 69 01     adc #$01\r\n0001D017:
    9D 0A 03  sta TSAPPUtransfer0NTdata+8,x\r\n0001D01A: 69 01     adc #$01\r\n0001D01C:
    9D 03 03  sta TSAPPUtransfer0NTdata+1,x\r\n0001D01F: 69 01     adc #$01\r\n0001D021:
    9D 0B 03  sta TSAPPUtransfer0NTdata+9,x\r\n0001D024: E8        inx\r\n0001D025:
    E8        inx\r\n0001D026: C8        iny\r\n0001D027: C8        iny\r\n0001D028:
    C6 0E     dec $0E\r\n0001D02A: D0 E1     bne -                                          
    ; $D00D\r\n\r\n0001D02C: A5 33     lda $33\r\n0001D02E: A0 0F     ldy #$0F\r\n0001D030:
    29 04     and #$04\r\n0001D032: F0 02     beq +                                          
    ; $D036\r\n0001D034: A0 F0     ldy #$F0\r\n+\r\n0001D036: 8C 14 03  sty TSAPPUtransfer0AttrData\r\n0001D039:
    A4 0F     ldy $0F\r\n0001D03B: B9 00 83  lda RoomBlockPals,y\r\n0001D03E: 2D
    14 03  and TSAPPUtransfer0AttrAndMask\r\n0001D041: A4 0D     ldy $0D\r\n0001D043:
    99 15 03  sta TSAPPUtransfer0AttrOrMask,y\r\n0001D046: A5 0C     lda $0C\r\n0001D048:
    09 08     ora #$08\r\n0001D04A: 85 0C     sta $0C\r\n0001D04C: E6 0D     inc
    $0D\r\n0001D04E: A5 0D     lda $0D\r\n0001D050: C9 02     cmp #$02\r\n0001D052:
    F0 03     beq +                                           ; $D057\r\n0001D054:
    4C 9C CF  jmp --                                          ; $CF9C\r\n+\r\n0001D057:
    A9 40     lda #$40\r\n0001D059: 85 1C     sta TSAPPUtransferSize\r\n\r\n0001D05B:
    A9 FF     lda #$FF\r\n0001D05D: 4D 14 03  eor TSAPPUtransfer0AttrData\r\n0001D060:
    8D 14 03  sta TSAPPUtransfer0AttrData\r\n0001D063: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\n\r\nOpenFirstDoor\r\n0001D066: A6 31     ldx CurrentStage\r\n0001D068:
    BD 6E D0  lda FirstDoorShutterDataIndex,x\r\n0001D06B: 4C 9B D0  jmp AnimateDoor\r\n\r\nFirstDoorShutterDataIndex
    ;at D06E; indexed by stage number\r\n    .byte $00,$00,$00,$00,$00,$00\r\n\r\nOpenSecondDoor\r\n0001D074:
    A6 31     ldx CurrentStage\r\n0001D076: BD 7C D0  lda SecondDoorShutterDataIndex,x\r\n0001D079:
    4C 9B D0  jmp AnimateDoor\r\n\r\n; These values are used as index into RoomShutterInfo.\r\n;\r\n;
    RoomShutterInfo format:\r\n;\r\n;   first byte: number of edits the shutter does
    to the scene\r\n;   consequent bytes are pairs of:\r\n;        first byte:  location
    of the edit on the nametable\r\n;        second byte: four-tile block to put
    into that position\r\n;   the four-tile blocks are described in RoomShutterBlockData\r\n;  
    and RoomShutterBlockPals.\r\n;\r\n;\r\nSecondDoorShutterDataIndex: ;at D07C;
    indexed by stage number\r\n    .byte 9,9,0,9,0,9, 27,0,0,27,18\r\nBossRoomShutterDataIndex
    ;at D087; indexed by stage number\r\n    .byte 18,18,9,9,18,18, 27,27,18,27,27\r\n\r\n;
    boss door close (shutter)\r\nCloseBossDoor\r\n0001D092: A6 31     ldx CurrentStage\r\n0001D094:
    E0 09     cpx #$09 ;don't close door at Wily4 stage\r\n0001D096: F0 6E     beq
    ++                                          ; $D106\r\n0001D098: BD 87 D0  lda
    BossRoomShutterDataIndex,x\r\n\r\nAnimateDoor\r\n0001D09B: EE A0 06  inc ObjectLifeCycleCounter+0
    ;ensure Megaman won't do anything funny in the meantime\r\n0001D09E: 20 9C C3 
    jsr SwitchBankStage                             ; $C39C\r\n\r\n0001D0A1: 48       
    pha\r\n0001D0A2: A9 24      lda #$24        ; Machine sound\r\n0001D0A4: 20 77
    C4   jsr IssueSound                                  ; $C477\r\n0001D0A7: 68       
    pla\r\n\r\n0001D0A8: AA        tax\r\n0001D0A9: BD 80 8F  lda RoomShutterInfo,x\r\n0001D0AC:
    85 5A     sta $5A\r\n0001D0AE: E8        inx\r\n0001D0AF: 86 59     stx $59\r\n-\r\n0001D0B1:
    20 9C C3  jsr SwitchBankStage                             ; $C39C\r\n\r\n0001D0B4:
    A6 59     ldx $59\r\n0001D0B6: A9 00     lda #$00\r\n0001D0B8: 85 0D     sta
    $0D\r\n\r\n0001D0BA: AD 60 04  lda ObjectPosScreen+0                        
    ; $0460\r\n0001D0BD: 85 05     sta $05\r\n0001D0BF: BD 80 8F  lda RoomShutterInfo,x\r\n0001D0C2:
    85 04     sta $04\r\n0001D0C4: E8        inx\r\n0001D0C5: 86 59     stx $59\r\n\r\n0001D0C7:
    20 9A CE  jsr CalculateNametableAddress\r\n0001D0CA: A4 59     ldy $59\r\n0001D0CC:
    B9 80 8F  lda RoomShutterInfo,y\r\n0001D0CF: 0A        asl a\r\n0001D0D0: 0A       
    asl a\r\n0001D0D1: 69 40     adc #(RoomShutterBlockData).lo\r\n0001D0D3: 85 06    
    sta CurrentRoomPointer\r\n0001D0D5: A9 8F     lda #(RoomShutterBlockData).hi\r\n0001D0D7:
    85 07     sta CurrentRoomPointer+1\r\n0001D0D9: A0 00     ldy #$00\r\n0001D0DB:
    20 D7 CE  jsr Write32x32BlockToBuffer                     ; $CED7\r\n0001D0DE:
    20 06 CF  jsr Adjust32x32BlockAddress                 ; $CF06\r\n\r\n0001D0E1:
    A6 59     ldx $59\r\n0001D0E3: BC 80 8F  ldy RoomShutterInfo,x\r\n0001D0E6: B9
    70 8F  lda RoomShutterBlockPals,y\r\n0001D0E9: 8D 14 03  sta TSAPPUtransfer0AttrData\r\n0001D0EC:
    E8        inx\r\n0001D0ED: 86 59     stx $59\r\n\r\n; 1 32x32 block to be rendered\r\n0001D0EF:
    A9 01     lda #$01\r\n0001D0F1: 85 1C     sta TSAPPUtransferSize\r\n\r\n; Pause
    for 6 frames\r\n0001D0F3: A9 06     lda #$06\r\n0001D0F5: 20 09 D1  jsr TimeDelayWithSpriteUpdates                 
    ; $D109\r\n\r\n0001D0F8: C6 5A     dec $5A\r\n0001D0FA: D0 B5     bne -                                          
    ; $D0B1\r\n\r\n0001D0FC: A9 FE     lda #$FE\r\n0001D0FE: 20 77 C4  jsr IssueSound                                 
    ; $C477\r\n0001D101: A9 00     lda #$00\r\n0001D103: 8D A0 06  sta ObjectLifeCycleCounter+0
    ;restore life to Megaman\r\n++\r\n0001D106: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\n\r\n\r\nTimeDelayWithSpriteUpdates\r\n0001D109: 85 3C     sta
    MiscCounter1\r\n-\r\n0001D10B: 20 31 D1  jsr UpdateGraphics                             
    ; $D131\r\n0001D10E: 20 1B C0  jsr NextFrame                                  
    ; $C01B\r\n0001D111: C6 3C     dec MiscCounter1\r\n0001D113: D0 F6     bne -                                          
    ; $D10B\r\n0001D115: 60        rts\r\n\r\n\r\n\r\n\r\nTimeDelayWithAllObjectsHalted\r\n0001D116:
    85 3C     sta MiscCounter1\r\n-\r\n0001D118: EE A0 06  inc ObjectLifeCycleCounter+0
    ;stall Megaman\r\n0001D11B: 20 65 C4  jsr LifeCycleTick_forEnemies ;stall everyone
    else\r\n0001D11E: 20 31 D1  jsr UpdateGraphics                              ;
    $D131\r\n0001D121: 20 6A D4  jsr LifeCycleUntick_forEveryone ;unstall everyone
    (?)\r\n0001D124: 20 1B C0  jsr NextFrame                                   ;
    $C01B\r\n0001D127: C6 3C     dec MiscCounter1\r\n0001D129: D0 ED     bne -                                          
    ; $D118\r\n\r\n0001D12B: A9 00     lda #$00\r\n0001D12D: 8D A0 06  sta ObjectLifeCycleCounter+0
    ;bring Megaman back into life\r\n0001D130: 60        rts\r\n\r\n\r\n\r\n; Updates
    gameplay? (or more likely only graphics?...)\r\n\r\nUpdateGraphics\r\n0001D131:
    A9 06     lda #$06\r\n0001D133: 85 42     sta CurrentBank\r\n0001D135: 8D 06
    C0  sta $C006\r\n\r\n; Hide *all* sprites\r\n0001D138: A0 00     ldy #$00\r\n0001D13A:
    84 0D     sty SpriteCounter\r\n0001D13C: A2 40     ldx #$40\r\n0001D13E: 20 78
    D4  jsr HideSprites                                 ; $D478\r\n\r\n0001D141:
    A5 23     lda FrameCounter\r\n0001D143: 29 01     and #$01\r\n0001D145: F0 15    
    beq +                                           ; $D15C\r\n\r\n; Odd frame\r\n0001D147:
    20 6E D3  jsr DrawScoreAndMeters                          ; $D36E\r\n\r\n\r\n;
    loop thru objects from #0 to TotalObjects-#1\r\n0001D14A: A9 00     lda #$00\r\n0001D14C:
    85 0C     sta $0C\r\n-\r\n0001D14E: 20 6E D1  jsr DrawObject                                 
    ; $D16E\r\n0001D151: E6 0C     inc $0C\r\n0001D153: A5 54     lda TotalObjects\r\n0001D155:
    C5 0C     cmp $0C\r\n0001D157: D0 F5     bne -                                          
    ; $D14E\r\n\r\n0001D159: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\n; Even frame\r\n+\r\n\r\n; Loop thru objects from TotalObjects-#1
    to #0 (backwards)\r\n0001D15C: A6 54     ldx TotalObjects\r\n0001D15E: CA       
    dex\r\n0001D15F: 86 0C     stx $0C\r\n-\r\n0001D161: 20 6E D1  jsr DrawObject                                 
    ; $D16E\r\n0001D164: C6 0C     dec $0C\r\n0001D166: 10 F9     bpl -                                          
    ; $D161\r\n\r\n0001D168: 20 6E D3  jsr DrawScoreAndMeters                         
    ; $D36E\r\n0001D16B: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\n\r\nDrawObject\r\n0001D16E: A6 0C     ldx $0C\r\n0001D170: BD
    00 06  lda ObjectPosY,x\r\n0001D173: C9 F8     cmp #$F8\r\n0001D175: D0 01    
    bne +                                           ; $D178\r\n0001D177: 60       
    rts\r\n\r\n\r\n+\r\n0001D178: 85 10     sta $10\r\n0001D17A: BD 00 04  lda ObjectSpriteNum,x\r\n0001D17D:
    C9 FF     cmp #$FF\r\n0001D17F: D0 03     bne +                                          
    ; $D184\r\n0001D181: 4C AB D2  jmp $D2AB\r\n+\r\n0001D184: BD 40 06  lda ObjectFireDelay,x\r\n0001D187:
    4A        lsr a\r\n0001D188: 4A        lsr a\r\n0001D189: 4A        lsr a\r\n0001D18A:
    4A        lsr a\r\n0001D18B: 18        clc\r\n0001D18C: 7D 00 04  adc ObjectSpriteNum,x\r\n0001D18F:
    0A        asl a\r\n0001D190: A8        tay\r\n\r\n0001D191: A9 81     lda #$81\r\n0001D193:
    69 00     adc #$00\r\n0001D195: 85 05     sta $05\r\n0001D197: A9 86     lda
    #$86\r\n0001D199: 85 04     sta $04\r\n\r\n0001D19B: B1 04     lda ($04),y\r\n0001D19D:
    85 00     sta $00\r\n0001D19F: C8        iny\r\n0001D1A0: B1 04     lda ($04),y\r\n0001D1A2:
    85 01     sta $01\r\n\r\n\r\n\r\n0001D1A4: BD 40 04  lda ObjectUnknown440,x\r\n0001D1A7:
    4A        lsr a\r\n0001D1A8: 4A        lsr a\r\n0001D1A9: 4A        lsr a\r\n0001D1AA:
    4A        lsr a\r\n0001D1AB: A8        tay\r\n0001D1AC: C8        iny\r\n\r\n0001D1AD:
    E0 01     cpx #$01\r\n0001D1AF: D0 18     bne ++                                         
    ; $D1C9\r\n0001D1B1: A5 56     lda BossBlinkState\r\n0001D1B3: F0 14     beq
    ++                                          ; $D1C9\r\n0001D1B5: C6 56     dec
    BossBlinkState\r\n0001D1B7: 29 02     and #$02\r\n0001D1B9: F0 0E     beq ++                                         
    ; $D1C9\r\n0001D1BB: A5 31     lda CurrentStage\r\n0001D1BD: C9 05     cmp #$05\r\n0001D1BF:
    F0 04     beq +                                           ; $D1C5\r\n0001D1C1:
    A9 1A     lda #$1A\r\n0001D1C3: D0 06     bne +++                                        
    ; $D1CB\r\n+\r\n0001D1C5: A9 75     lda #$75\r\n0001D1C7: D0 02     bne +++                                        
    ; $D1CB\r\n++\r\n0001D1C9: B1 00     lda ($00),y     ; Get frame number?\r\n+++\r\n0001D1CB:
    48        pha\r\n0001D1CC: BD A0 06  lda ObjectLifeCycleCounter,x\r\n0001D1CF:
    F0 03     beq +                                           ; $D1D4\r\n0001D1D1:
    4C EC D1  jmp +++                                         ; $D1EC\r\n+\r\n0001D1D4:
    BD 40 06  lda ObjectFireDelay,x\r\n0001D1D7: F0 10     beq +                                          
    ; $D1E9\r\n0001D1D9: 29 0F     and #$0F\r\n0001D1DB: A8        tay\r\n0001D1DC:
    88        dey\r\n0001D1DD: F0 05     beq +                                          
    ; $D1E4\r\n0001D1DF: DE 40 06  dec ObjectFireDelay,x\r\n0001D1E2: D0 05     bne
    ++                                          ; $D1E9\r\n+\r\n0001D1E4: A9 00    
    lda #$00\r\n0001D1E6: 9D 40 06  sta ObjectFireDelay,x\r\n++\r\n0001D1E9: 20 F8
    D2  jsr $D2F8\r\n\r\n+++\r\n0001D1EC: A9 00     lda #$00\r\n0001D1EE: 85 05    
    sta $05\r\n0001D1F0: 68        pla\r\n0001D1F1: 0A        asl a\r\n0001D1F2:
    26 05     rol $05\r\n0001D1F4: A8        tay\r\n\r\n; $04,$05,Y = 1000000pppppppp0
    is the addr to read sprite data from\r\n\r\n0001D1F5: A9 80     lda #$80\r\n0001D1F7:
    05 05     ora $05\r\n0001D1F9: 85 05     sta $05\r\n0001D1FB: A9 00     lda #$00\r\n0001D1FD:
    85 04     sta $04\r\n\r\n0001D1FF: B1 04     lda ($04),y ; Get tile/attribute
    data pointer\r\n0001D201: 85 00     sta $00\r\n0001D203: C8        iny\r\n0001D204:
    B1 04     lda ($04),y\r\n0001D206: 85 01     sta $01\r\n\r\n\r\n\r\n0001D208:
    A0 00     ldy #$00\r\n0001D20A: 84 12     sty $12\r\n\r\n0001D20C: B1 00    
    lda ($00),y ; Number of 8x8 sprites\r\n0001D20E: 85 0E     sta $0E\r\n0001D210:
    C8        iny\r\n\r\n; Get x/y coordinates pointer\r\n0001D211: B1 00     lda
    ($00),y\r\n0001D213: 0A        asl a\r\n0001D214: A8        tay\r\n0001D215:
    B9 AA 82  lda $82AA,y \r\n0001D218: 85 02     sta $02\r\n0001D21A: B9 AB 82 
    lda $82AB,y\r\n0001D21D: 85 03     sta $03\r\n0001D21F: A0 02     ldy #$02\r\n0001D221:
    38        sec\r\n\r\n; Transpose object x position by x scrolling value so it's
    drawn where it should\r\n0001D222: BD 80 04  lda ObjectPosX,x\r\n0001D225: E5
    1A     sbc ScrollPosX\r\n0001D227: 85 0F     sta $0F\r\n\r\n; Make sprites get
    flipped horizontally if object's flipped\r\n0001D229: BD 20 04  lda ObjectFlags,x\r\n0001D22C:
    29 40     and #$40\r\n0001D22E: 85 11     sta $11\r\n\r\n0001D230: 20 28 D3 
    jsr BehindBackgroundHack                        ; $D328\r\n\r\n0001D233: A6 0D    
    ldx $0D\r\n\r\n0001D235: A5 0C     lda $0C\r\n0001D237: D0 09     bne +                                          
    ; $D242\r\n0001D239: A5 55     lda MegamanBlinkState\r\n0001D23B: 29 02     and
    #$02\r\n0001D23D: F0 03     beq +                                           ;
    $D242\r\n0001D23F: 4C A3 D2  jmp $D2A3\r\n            ; Megaman is blinking,
    so skip it\r\n+\r\n\r\n;\r\n; Loop thru all sprites at spritepage except sprite#0,
    copying contents\r\n; of ($00),Y to spritepage\r\n; (could this be the main sprite
    writing routine? YES!)\r\n;\r\n; \r\n; $0F = x coordinate of object\r\n; $10
    = y coordinate of object\r\n;\r\n; $00,$01 = pointer to tile data and attribute
    data\r\n; $02,$03 = pointer to y offset data and x offset data\r\n;\r\n; Y =
    sprite type\r\n;\r\n\r\n---\r\n0001D242: B1 00     lda ($00),y     ; Tile#\r\n0001D244:
    9D 05 02  sta CurrentSpriteData+1,x\r\n0001D247: C8        iny\r\n\r\n0001D248:
    B1 00     lda ($00),y     ; Attributes\r\n0001D24A: 45 11     eor $11\r\n0001D24C:
    05 13     ora $13\r\n0001D24E: 9D 06 02  sta CurrentSpriteData+2,x\r\n0001D251:
    C8        iny\r\n0001D252: 84 0D     sty $0D\r\n\r\n0001D254: A4 12     ldy $12\r\n\r\n0001D256:
    B1 02     lda ($02),y     ; Get ID of x/y pair\r\n0001D258: A8        tay\r\n0001D259:
    18        clc\r\n\r\n0001D25A: B9 3A 83  lda $833A,y ; Get local y coordinate
    of sprite\r\n0001D25D: 30 06     bmi +                                          
    ; $D265\r\n0001D25F: 65 10     adc $10\r\n0001D261: 90 10     bcc +++                                        
    ; $D273\r\n0001D263: B0 04     bcs SkipThisSprite                             
    ; $D269\r\n+\r\n; add screen y coordinate to local coordinate and skip sprite\r\n;
    if still outside screen\r\n0001D265: 65 10     adc $10\r\n0001D267: B0 0A    
    bcs +++                                         ; $D273\r\n\r\n; Handle sprite
    coordinates\r\n++\r\nSkipThisSprite\r\n0001D269: A9 F8     lda #$F8\r\n0001D26B:
    9D 04 02  sta CurrentSpriteData+0,x\r\n0001D26E: A4 0D     ldy $0D\r\n0001D270:
    4C 9D D2  jmp SkipSprite                                  ; $D29D\r\n\r\n+++\r\n0001D273:
    9D 04 02  sta CurrentSpriteData+0,x\r\n0001D276: A5 11     lda $11\r\n0001D278:
    F0 06     beq +                                           ; $D280\r\n\r\n; Object
    facing right\r\n0001D27A: B9 3A 85  lda $853A,y ; Get local x coordinate of sprite\r\n0001D27D:
    4C 83 D2  jmp $D283\r\n\r\n; Object facing left\r\n+\r\n0001D280: B9 3A 84  lda
    $843A,y ; Get local x coordinate of sprite\r\n0001D283: 18        clc\r\n0001D284:
    30 06     bmi +                                           ; $D28C\r\n0001D286:
    65 0F     adc $0F\r\n0001D288: 90 06     bcc ++                                         
    ; $D290\r\n0001D28A: B0 DD     bcs SkipThisSprite                             
    ; $D269\r\n+\r\n0001D28C: 65 0F     adc $0F\r\n0001D28E: 90 D9     bcc SkipThisSprite                             
    ; $D269\r\n++\r\n0001D290: 9D 07 02  sta CurrentSpriteData+3,x\r\n0001D293: A4
    0D     ldy $0D\r\n0001D295: E8        inx\r\n0001D296: E8        inx\r\n0001D297:
    E8        inx\r\n0001D298: E8        inx\r\n0001D299: E0 FC     cpx #$FC\r\n0001D29B:
    F0 09     beq +                                           ; $D2A6\r\n\r\nSkipSprite\r\n0001D29D:
    E6 12     inc $12\r\n0001D29F: C6 0E     dec $0E\r\n0001D2A1: D0 9F     bne ---                                        
    ; $D242\r\n\r\n;;;;;; This write may affect to random number generator:\r\n0001D2A3:
    86 0D     stx $0D\r\n0001D2A5: 60        rts\r\n\r\n+\r\n0001D2A6: 68       
    pla\r\n0001D2A7: 68        pla\r\n0001D2A8: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\n\r\n\r\n0001D2AB: BD 20 04  lda ObjectFlags,x     ; Draw object
    if not invisible\r\n0001D2AE: 29 20     and #$20        \r\n0001D2B0: F0 01    
    beq +                                           ; $D2B3\r\n0001D2B2: 60       
    rts\r\n+\r\n0001D2B3: BD E0 06  lda ObjectType,x\r\n0001D2B6: 0A        asl a\r\n0001D2B7:
    A8        tay\r\n\r\n; Where is this table? Likely on Bank 6.\r\n0001D2B8: B9
    70 87  lda $8770,y\r\n0001D2BB: 85 00     sta $00\r\n0001D2BD: B9 71 87  lda
    $8771,y\r\n0001D2C0: 85 01     sta $01\r\n\r\n0001D2C2: BD 40 04  lda ObjectUnknown440,x\r\n0001D2C5:
    4A        lsr a\r\n0001D2C6: 4A        lsr a\r\n0001D2C7: 4A        lsr a\r\n0001D2C8:
    4A        lsr a\r\n0001D2C9: A8        tay\r\n0001D2CA: C8        iny\r\n\r\n0001D2CB:
    B1 00     lda ($00),y\r\n0001D2CD: 48        pha\r\n\r\n; jsr $D2F8 if $6A0,X
    = 0\r\n0001D2CE: BD A0 06  lda ObjectLifeCycleCounter,x\r\n0001D2D1: F0 03    
    beq +                                           ; $D2D6\r\n0001D2D3: 4C D9 D2 
    jmp $D2D9\r\n\r\n+\r\n0001D2D6: 20 F8 D2  jsr $D2F8\r\n\r\n0001D2D9: 68       
    pla\r\n\r\n0001D2DA: 0A        asl a\r\n0001D2DB: A8        tay\r\n\r\n\r\n;
    if carry set then $00,$01 = $8750,$8751, else $00,$01 = $8650,$8651\r\n0001D2DC:
    B0 0D     bcs +                                           ; $D2EB\r\n0001D2DE:
    B9 50 86  lda $8650,y\r\n0001D2E1: 85 00     sta $00\r\n0001D2E3: B9 51 86  lda
    $8651,y\r\n0001D2E6: 85 01     sta $01\r\n0001D2E8: 4C 08 D2  jmp $D208\r\n+\r\n0001D2EB:
    B9 50 87  lda $8750,y\r\n0001D2EE: 85 00     sta $00\r\n0001D2F0: B9 51 87  lda
    $8751,y\r\n0001D2F3: 85 01     sta $01\r\n0001D2F5: 4C 08 D2  jmp $D208\r\n\r\n\r\n\r\n0001D2F8:
    A0 00     ldy #$00\r\n0001D2FA: B1 00     lda ($00),y\r\n\r\n0001D2FC: 48       
    pha\r\n0001D2FD: 29 0F     and #$0F\r\n0001D2FF: 85 0F     sta $0F\r\n0001D301:
    68        pla\r\n\r\n0001D302: 29 F0     and #$F0\r\n0001D304: 85 11     sta
    $11\r\n0001D306: BD 40 04  lda ObjectUnknown440,x\r\n0001D309: 29 0F     and
    #$0F\r\n0001D30B: C5 0F     cmp $0F\r\n0001D30D: B0 05     bcs +                                          
    ; $D314\r\n0001D30F: FE 40 04  inc ObjectUnknown440,x\r\n0001D312: D0 13    
    bne +++                                         ; $D327\r\n+\r\n0001D314: BD
    40 04  lda ObjectUnknown440,x\r\n0001D317: 29 F0     and #$F0\r\n0001D319: C5
    11     cmp $11\r\n0001D31B: B0 05     bcs ++                                         
    ; $D322\r\n0001D31D: 18        clc\r\n0001D31E: 69 10     adc #$10\r\n0001D320:
    D0 02     bne +                                           ; $D324\r\n++\r\n0001D322:
    A9 00     lda #$00\r\n+\r\n0001D324: 9D 40 04  sta ObjectUnknown440,x\r\n+++\r\n0001D327:
    60        rts\r\n\r\n\r\n\r\nBehindBackgroundHack\r\n0001D328: A5 31     lda
    CurrentStage\r\n0001D32A: C9 03     cmp #$03 ;Fireman?\r\n0001D32C: F0 09    
    beq +                                           ; $D337\r\n0001D32E: C9 07    
    cmp #$07 ;Wily2?\r\n0001D330: F0 1D     beq ++                                         
    ; $D34F\r\n-\r\n; Set object in front of screen\r\n0001D332: A9 00     lda #$00\r\n0001D334:
    85 13     sta $13\r\n0001D336: 60        rts\r\n\r\n; We're at Fireman's stage\r\n+\r\n\r\n;
    Set object behind screen if screen# = 8 or 9 and y pos is 76 - 104\r\n; This
    makes object appear BEHIND the fence on the bridges in Fireman's stage\r\n\r\n;
    Skip this object if screen# < 8 or screen# >= 10\r\n0001D337: BD 60 04  lda ObjectPosScreen,x\r\n0001D33A:
    C9 08     cmp #$08\r\n0001D33C: 90 F4     bcc -                                          
    ; $D332\r\n0001D33E: C9 0A     cmp #$0A\r\n0001D340: B0 F0     bcs -                                          
    ; $D332\r\n\r\n; Skip this object if y position < 76 or Y coordinate >= 105\r\n0001D342:
    BD 00 06  lda ObjectPosY,x\r\n0001D345: C9 69     cmp #$69\r\n0001D347: B0 E9    
    bcs -                                           ; $D332\r\n0001D349: C9 4C    
    cmp #$4C\r\n0001D34B: 90 E5     bcc -                                          
    ; $D332\r\n0001D34D: B0 1A     bcs SetPriorityBehind                          
    ; $D369\r\n\r\n; We're at Wily's second stage\r\n++\r\n\r\n; Set object behind
    screen if screen# = #$1B, #$1C, #$1F or #$20 and y > 185\r\n0001D34F: BD 60 04 
    lda ObjectPosScreen,x\r\n0001D352: C9 1B     cmp #$1B\r\n0001D354: F0 0C    
    beq +                                           ; $D362\r\n0001D356: C9 1C    
    cmp #$1C\r\n0001D358: F0 08     beq +                                          
    ; $D362\r\n0001D35A: C9 1F     cmp #$1F\r\n0001D35C: F0 04     beq +                                          
    ; $D362\r\n0001D35E: C9 20     cmp #$20\r\n0001D360: D0 D0     bne -                                          
    ; $D332\r\n+\r\n0001D362: BD 00 06  lda ObjectPosY,x\r\n0001D365: C9 B9     cmp
    #$B9\r\n0001D367: 90 C9     bcc -                                           ;
    $D332\r\n\r\n\r\n; Set object behind screen\r\nSetPriorityBehind\r\n0001D369:
    A9 20     lda #$20\r\n0001D36B: 85 13     sta $13\r\n0001D36D: 60        rts\r\n\r\n\r\nDrawScoreAndMeters\r\n0001D36E:
    A4 0D     ldy SpriteCounter\r\n0001D370: A5 BB     lda DrawScoreAndMetersFlag\r\n0001D372:
    30 75     bmi DrawScoreAndMetersRTS                       ; $D3E9\r\n\r\n; Draw
    score...\r\n\r\n0001D374: A9 68     lda #$68        ; start drawing score at
    x coordinate 104\r\n0001D376: 85 0C     sta $0C\r\n0001D378: A2 06     ldx #$06\r\n0001D37A:
    A9 01     lda #$01\r\n0001D37C: 85 12     sta $12\r\n-\r\n0001D37E: A9 10    
    lda #$10        ; y coordinate = 16\r\n0001D380: 85 0E     sta $0E\r\n\r\n0001D382:
    B5 72     lda Score,x     ; digits use tiles $F0-$F9\r\n0001D384: 09 F0     ora
    #$F0\r\n0001D386: 85 0F     sta $0F\r\n0001D388: 20 1A D4  jsr WriteSprite                                
    ; $D41A\r\n\r\n0001D38B: 18        clc             ; x coordinate += 8\r\n0001D38C:
    A5 0C     lda $0C\r\n0001D38E: 69 08     adc #$08\r\n0001D390: 85 0C     sta
    $0C\r\n0001D392: CA        dex\r\n0001D393: 10 E9     bpl -                                          
    ; $D37E\r\n\r\n0001D395: A5 BB     lda DrawScoreAndMetersFlag\r\n0001D397: D0
    50     bne DrawScoreAndMetersRTS                       ; $D3E9\r\n\r\n\r\n; Draw
    life meter\r\n0001D399: A9 FE 85 05   lda #$FE : sta $05 ; index of empty tile\r\n0001D39D:
    A9 FA 85 04   lda #$FA : sta $04 ; index of full tile\r\n0001D3A1: A9 01 85 12  
    lda #$01 : sta $12 ;sprite attributes\r\n0001D3A5: A9 18 85 0E   lda #$18 : sta
    $0C ;Xcoord\r\n0001D3A9: A9 48 85 0E   lda #$48 : sta $0E ;Ycoord\r\n0001D3AD:
    A5 6A     lda Meters+0\r\n0001D3AF: 20 EC D3  jsr DrawMeter                                  
    ; $D3EC\r\n\r\n0001D3B2: A9 00 85 12   lda #$00 : sta $12\r\n0001D3B6: A9 10
    85 0C   lda #$10 : sta $0C ;Xcoord\r\n\r\n\r\n; Draw weapon meter\r\n0001D3BA:
    A6 5F     ldx WeaponSelect\r\n0001D3BC: F0 04     beq +                                      
    ; $D3C2\r\n0001D3BE: A9 48     lda #$48 ; weapon != P\r\n0001D3C0: D0 02    
    bne ++                                      ; $D3C4\r\n+\r\n0001D3C2: A9 F8    
    lda #$F8 ; weapon == P\r\n++\r\n0001D3C4: 85 0E     sta $0E            ; Ycoord\r\n0001D3C6:
    A9 DF 85 05   lda #$DF : sta $05 ; index of empty tile\r\n0001D3CA: A9 DB 85
    04   lda #$DB : sta $04 ; index of full tile \r\n0001D3CE: B5 6A     lda Meters,x\r\n0001D3D0:
    20 EC D3  jsr DrawMeter                               ; $D3EC\r\n\r\n; Draw boss
    meter if fighting boss\r\n0001D3D3: A5 3E     lda BossCurrentStrategy\r\n0001D3D5:
    F0 12     beq +                                       ; $D3E9\r\n0001D3D7: A9
    02 85 12   lda #$02 : sta $12 ;sprite attributes\r\n0001D3DB: A9 28 85 0C   lda
    #$28 : sta $0C ;Xcoord\r\n0001D3DF: A9 48 85 0E   lda #$48 : sta $0E ;Ycoord\r\n0001D3E3:
    AD C1 06  lda ObjectLifeMeter+1\r\n0001D3E6: 20 EC D3  jsr DrawMeter                              
    ; $D3EC\r\n+\r\nDrawScoreAndMetersRTS\r\n;;;;;; This write may affect to random
    number generator:\r\n0001D3E9: 84 0D     sty SpriteCounter\r\n0001D3EB: 60       
    rts\r\n\r\n\r\n;\r\n; A = meter value\r\n; $0C,$0E = x,y coordinates of meter's
    lowest component\r\n;\r\n; $12 = sprite attribute flags\r\n;\r\n;   Y = index
    into sprite page\r\n;\r\n; $05 = index of empty tile, also used for fractions
    (3/4, 1/2, 1/4, empty)\r\n; $04 = index of full tile\r\n;\r\n\r\nDrawMeter\r\n;
    $10 = number of full 8x8 blocks in meter\r\n; $11 = fractional part of meter\r\n0001D3EC:
    48        pha\r\n0001D3ED: 4A        lsr a\r\n0001D3EE: 4A        lsr a\r\n0001D3EF:
    85 10     sta $10\r\n0001D3F1: 68        pla\r\n0001D3F2: 29 03     and #$03\r\n0001D3F4:
    85 11     sta $11\r\n\r\n0001D3F6: 38        sec\r\n0001D3F7: A5 05     lda $05\r\n0001D3F9:
    E5 11     sbc $11\r\n0001D3FB: 85 11     sta $11\r\n\r\n0001D3FD: A2 00     ldx
    #$00\r\n-\r\n\r\n; if sprite# < number of full blocks, tile#=$04\r\n; else if
    sprite# = fractional block tile#=$11\r\n; else tile# = $05\r\n\r\n0001D3FF: E4
    10     cpx $10\r\n0001D401: B0 04     bcs +                                          
    ; $D407\r\n\r\n0001D403: A5 04     lda $04 ; if $04 != 0 then tile# = $04\r\n0001D405:
    D0 08     bne ++                                          ; $D40F\r\n+\r\n0001D407:
    D0 04     bne +                                           ; $D40D\r\n0001D409:
    A5 11     lda $11\r\n0001D40B: D0 02     bne ++                                         
    ; $D40F\r\n+\r\n0001D40D: A5 05     lda $05\r\n++\r\n0001D40F: 85 0F     sta
    $0F ;tile #\r\n0001D411: 20 1A D4  jsr WriteSprite                                
    ; $D41A\r\n0001D414: E8        inx\r\n0001D415: E0 07     cpx #$07\r\n0001D417:
    D0 E6     bne -                                           ; $D3FF\r\n0001D419:
    60        rts\r\n\r\n\r\n;\r\n; $0C,$0E = x,y coordinates of 8x8 sprite\r\n;\r\n;
    $0F = tile #\r\n;\r\n; $12 = sprite attribute flags\r\n;\r\n;   Y = index into
    sprite page\r\n;\r\n; unless the second last index has been used, $0E contains
    y-8\r\n;\r\n\r\nWriteSprite\r\n0001D41A: A5 0C     lda $0C\r\n0001D41C: 99 07
    02  sta CurrentSpriteData+3,y\r\n0001D41F: A5 0F     lda $0F\r\n0001D421: 99
    05 02  sta CurrentSpriteData+1,y\r\n0001D424: A5 12     lda $12\r\n0001D426:
    99 06 02  sta CurrentSpriteData+2,y\r\n0001D429: A5 0E     lda $0E\r\n0001D42B:
    99 04 02  sta CurrentSpriteData+0,y\r\n0001D42E: C0 F8     cpy #$F8\r\n0001D430:
    F0 0D     beq +                                           ; $D43F\r\n0001D432:
    C8        iny\r\n0001D433: C8        iny\r\n0001D434: C8        iny\r\n0001D435:
    C8        iny\r\n0001D436: C9 F8     cmp #$F8\r\n0001D438: F0 05     beq +                                          
    ; $D43F\r\n0001D43A: 38        sec\r\n0001D43B: E9 08     sbc #$08\r\n0001D43D:
    85 0E     sta $0E\r\n+\r\n0001D43F: 60        rts\r\n\r\n\r\n\r\nIncreaseScore\r\n0001D440:
    A5 05     lda $05     ; $05 = xy where xy00 are the points earned\r\n0001D442:
    29 0F     and #$0F\r\n0001D444: 85 4A     sta $4A\r\n0001D446: A5 05     lda
    $05\r\n0001D448: 4A        lsr a\r\n0001D449: 4A        lsr a\r\n0001D44A: 4A       
    lsr a\r\n0001D44B: 4A        lsr a\r\n0001D44C: 85 4B     sta $4B\r\n0001D44E:
    A2 00     ldx #$00\r\n0001D450: 86 4C     stx $4C\r\n0001D452: 86 4D     stx
    $4D\r\n0001D454: 86 4E     stx $4E\r\n\r\n0001D456: A0 05     ldy #$05\r\n0001D458:
    18        clc\r\n-\r\n0001D459: B5 74     lda Score+2,x\r\n0001D45B: 75 4A    
    adc $4A,x\r\n\r\n0001D45D: C9 0A     cmp #$0A        ; Check if digit > 9\r\n0001D45F:
    90 02     bcc +                                       ; $D463\r\n0001D461: E9
    0A     sbc #$0A\r\n\r\n+\r\n0001D463: 95 74     sta Score+2,x\r\n0001D465: E8       
    inx\r\n0001D466: 88        dey\r\n0001D467: D0 F0     bne -                                      
    ; $D459\r\n0001D469: 60        rts\r\n\r\n\r\nLifeCycleUntick_forEveryone\r\n0001D46A:
    A2 1F     ldx #$1F\r\n-\r\n0001D46C: BD A0 06  lda ObjectLifeCycleCounter,x\r\n0001D46F:
    F0 03     beq +                                       ; $0001D474\r\n0001D471:
    DE A0 06  dec ObjectLifeCycleCounter,x\r\n+\r\n0001D474: CA        dex\r\n0001D475:
    10 F5     bpl -                                       ; $0001D46C\r\n0001D477:
    60        rts\r\n\r\n\r\n;\r\n; Y = starting sprite index\r\n; X = number of
    consecutive sprites to hide\r\n;\r\n\r\nHideSprites\r\n0001D478: A9 F8     lda
    #$F8\r\n\r\n-\r\n0001D47A: 99 00 02  sta $0200,y\r\n0001D47D: C8        iny\r\n0001D47E:
    C8        iny\r\n0001D47F: C8        iny\r\n0001D480: C8        iny\r\n0001D481:
    CA        dex\r\n0001D482: D0 F6     bne -                                      
    ; $0001D47A\r\n0001D484: 60        rts\r\n\r\n\r\nMegamanPalette ;at D485\r\n   
    .byte $2C,$11 ;P\r\n    .byte $30,$00 ;C\r\n    .byte $30,$12 ;I\r\n    .byte
    $30,$19 ;B\r\n    .byte $28,$16 ;F\r\n    .byte $38,$00 ;E\r\n    .byte $30,$17
    ;G\r\n    .byte $2C,$11 ;M\r\n\r\nDisableNMI&PPU\r\n0001D495: A5 FF     lda PPU2000value\r\n0001D497:
    29 7F     and #$7F    ; disables NMI\r\n0001D499: 85 FF     sta PPU2000value\r\n0001D49B:
    8D 00 20  sta $2000\r\n\r\n0001D49E: A5 FE     lda PPU2001value\r\n0001D4A0:
    29 E7     and #$E7    ; hides sprites and background\r\n0001D4A2: 85 FE     sta
    PPU2001value\r\n0001D4A4: 8D 01 20  sta $2001   ; it's restored automatically
    by NMI.\r\n\r\n0001D4A7: 60        rts\r\n\r\n\r\nNMI:\r\n0001D4A8: 48       
    pha                     ; Save registers\r\n0001D4A9: 8A        txa\r\n0001D4AA:
    48        pha\r\n0001D4AB: 98        tya\r\n0001D4AC: 48        pha\r\n\r\n\r\n;
    If game code has not finished its work yet, then just update sound\r\n0001D4AD:
    A5 1F     lda NMI_GfxUpdateDone\r\n0001D4AF: F0 03     beq +                  
    ; $0001D4B4\r\n0001D4B1: 4C 4C D5  jmp CallSoundCode       ; $D54C\r\n+\r\n\r\n0001D4B4:
    20 95 D4  jsr DisableNMI&PPU      ; $D495\r\n0001D4B7: AD 02 20  lda $2002\r\n\r\n0001D4BA:
    A9 00     lda #(SpriteTable).lo      ; Do sprite DMA\r\n0001D4BC: 8D 03 20  sta
    $2003\r\n0001D4BF: A9 02     lda #(SpriteTable).hi\r\n0001D4C1: 8D 14 40  sta
    $4014\r\n\r\n0001D4C4: 20 73 D6  jsr DoTSAPPUtransfer                 ; $D673\r\n\r\n;
    Update palette if PaletteUpdateDelay != 0\r\n0001D4C7: A5 37     lda PaletteUpdateDelay\r\n0001D4C9:
    F0 03     beq +                                       ; $D4CE\r\n0001D4CB: 20
    0A D6  jsr UpdatePalettes                          ; $D60A\r\n+\r\n\r\n; Do buffer
    $380 transfer if RawPPUtransferSize != 0\r\n0001D4CE: A5 5E     lda RawPPUtransferSize\r\n0001D4D0:
    F0 03     beq +                                       ; $D4D5\r\n0001D4D2: 20
    AB D5  jsr DoRawPPUtransferWithA                    ; $D5AB\r\n+\r\n\r\n0001D4D5:
    A5 1B     lda ScrollPosScreen\r\n0001D4D7: 48        pha\r\n0001D4D8: A5 1A    
    lda ScrollPosX\r\n0001D4DA: 48        pha\r\n\r\n0001D4DB: A5 B4     lda UseTempScrollX\r\n0001D4DD:
    F0 08     beq +                                       ; $D4E7\r\n0001D4DF: A5
    B3     lda TempScrollPosScreen\r\n0001D4E1: 85 1B     sta ScrollPosScreen\r\n0001D4E3:
    A5 B2     lda TempScrollPosX\r\n0001D4E5: 85 1A     sta ScrollPosX\r\n+\r\n\r\n0001D4E7:
    A5 FF     lda PPU2000value\r\n0001D4E9: 29 FC     and #$FC\r\n0001D4EB: 85 FF    
    sta PPU2000value\r\n0001D4ED: A5 1B     lda ScrollPosScreen\r\n0001D4EF: 29 01    
    and #$01\r\n0001D4F1: 05 FF     ora PPU2000value\r\n0001D4F3: 8D 00 20  sta $2000\r\n\r\n\r\n\r\n;
    Handle scrolling (shake ground/Megaman if Gutsman's landing)\r\n0001D4F6: 48       
    pha\r\n0001D4F7: AD 02 20  lda $2002\r\n0001D4FA: A2 04     ldx #$04\r\n0001D4FC:
    A5 47     lda GutsmanStompCounter\r\n0001D4FE: F0 1D     beq +++                                    
    ; $D51D\r\n0001D500: C6 47     dec GutsmanStompCounter\r\n0001D502: 4A       
    lsr a\r\n0001D503: 90 03     bcc +                                       ; $D508\r\n0001D505:
    29 03     and #$03\r\n0001D507: AA        tax\r\n\r\n+\r\n; Shake Megaman if
    he's touching ground\r\n0001D508: AD 00 04  lda ObjectSpriteNum+0                           
    ; ObjectSpriteNum+0\r\n0001D50B: C9 09     cmp #$09\r\n0001D50D: F0 0E     beq
    +++                                     ; $D51D\r\n0001D50F: C9 6F     cmp #$6F\r\n0001D511:
    F0 0A     beq +++                                     ; $D51D\r\n0001D513: AD
    20 04  lda ObjectFlags+0\r\n0001D516: 29 F0     and #$F0\r\n0001D518: 09 02    
    ora #$02\r\n0001D51A: 8D 20 04  sta ObjectFlags+0\r\n+++\r\n0001D51D: 18       
    clc\r\n0001D51E: A5 1A     lda ScrollPosX\r\n0001D520: 7D 83 D5  adc ScreenShakeX,x\r\n0001D523:
    8D 05 20  sta $2005\r\n0001D526: 18        clc\r\n0001D527: A5 1E     lda ScrollPosY\r\n0001D529:
    7D 88 D5  adc ScreenShakeY,x\r\n0001D52C: 8D 05 20  sta $2005\r\n\r\n\r\n0001D52F:
    A5 FE     lda PPU2001value       ; Enable PPU\r\n0001D531: 09 1E     ora #$1E\r\n0001D533:
    85 FE     sta PPU2001value\r\n0001D535: 8D 01 20  sta $2001\r\n0001D538: 68       
    pla\r\n\r\n\r\n0001D539: 09 80     ora #$80        ; Enable NMI\r\n0001D53B:
    85 FF     sta PPU2000value\r\n0001D53D: 8D 00 20  sta $2000\r\n0001D540: 68       
    pla\r\n0001D541: 85 1A     sta ScrollPosX\r\n0001D543: 68        pla\r\n0001D544:
    85 1B     sta ScrollPosScreen\r\n\r\n\r\n; BCC = JB\r\n; BCS = JAE\r\n\r\n0001D546:
    A9 01     lda #$01        \r\n0001D548: 85 1F     sta NMI_GfxUpdateDone\r\n\r\n0001D54A:
    E6 23     inc FrameCounter\r\n\r\n\r\nCallSoundCode\r\n0001D54C: A9 04     lda
    #$04        ; Switch in sound code bank\r\n0001D54E: 8D 04 C0  sta $C004\r\n\r\n0001D551:
    20 00 90  jsr SoundCodePlay                       ; $9000\r\n\r\n; Initialize
    all newly issued sounds\r\n\r\n-\r\n0001D554: A6 45     ldx NumIssuedSounds        
    ; Number of sounds to initialize\r\n0001D556: F0 16     beq +++                                
    ; $0001D56E\r\n\r\n0001D558: BD 7F 05  lda IssuedSoundsList-1,x    ; Get sound
    ID\r\n\r\n\r\n; Only play this sound if sound ID is #$00-#$32 or #$FD-#$FF (commands?)\r\n\r\n0001D55B:
    C9 FD     cmp #$FD        ; Skip SoundCodeInit if sound ID > #$FD\r\n0001D55D:
    B0 04     bcs +                                   ; $0001D563\r\n0001D55F: C9
    33     cmp #$33        ; Skip SoundCodeInit if sound ID > #$33\r\n0001D561: B0
    07     bcs ++                                  ; $0001D56A\r\n+\r\n0001D563:
    D0 02     bne +                                   ; $0001D567\r\n0001D565: A4
    A7     ldy SoundCodeParameter     ; Y = SoundCodeParameter if sound ID = #$FD\r\n+\r\n0001D567:
    20 03 90  jsr SoundCodeInit                       ; $9003\r\n++\r\n0001D56A:
    C6 45     dec NumIssuedSounds\r\n0001D56C: D0 E6     bne -                                  
    ; $0001D554\r\n\r\n+++\r\n\r\n0001D56E: A5 42     lda CurrentBank\r\n0001D570:
    AA        tax\r\n0001D571: 9D 00 C0  sta $C000,x\r\n\r\n0001D574: A5 0D     lda
    $0D\r\n0001D576: 45 46     eor RandomSeed\r\n0001D578: 65 23     adc FrameCounter\r\n0001D57A:
    4A        lsr a\r\n0001D57B: 85 46     sta RandomSeed\r\n\r\n0001D57D: 68       
    pla\r\n0001D57E: A8        tay\r\n0001D57F: 68        pla\r\n0001D580: AA       
    tax\r\n0001D581: 68        pla\r\n0001D582: 40        rti\r\n\r\n\r\nScreenShakeX
    ;At 1D583\r\n.db $00,$08,$00,$F8,$00\r\n\r\nScreenShakeY ;At 1D588\r\n.db $E8,$00,$08,$00,$00\r\n\r\n\r\nReadJoypads\r\n0001D58D:
    A2 01     ldx #$01\r\n0001D58F: 8E 16 40  stx $4016\r\n0001D592: CA        dex\r\n0001D593:
    8E 16 40  stx $4016\r\n0001D596: E8        inx\r\n--\r\n0001D597: A0 08     ldy
    #$08\r\n-\r\n0001D599: BD 16 40  lda $4016,x\r\n0001D59C: 85 18     sta JoyD0\r\n0001D59E:
    4A        lsr a\r\n0001D59F: 05 18     ora JoyD0\r\n0001D5A1: 4A        lsr a\r\n0001D5A2:
    76 14     ror JoyPads,x\r\n0001D5A4: 88        dey\r\n0001D5A5: D0 F2     bne
    -                               ; $0001D599\r\n\r\n0001D5A7: CA        dex\r\n0001D5A8:
    10 ED     bpl --                              ; $0001D597\r\n\r\n0001D5AA: 60       
    rts\r\n\r\n;\r\n; This is called when nametable scrolls *up*\r\n;\r\n\r\n\r\n;
    \r\n; $380 contains data to be transferred to PPU in this format:\r\n;\r\n;\r\n;
    $00: PPU address high\r\n; $01: PPU address low\r\n; $02: raw data, attribute
    table?...\r\n; $14: data 2 bytes at a time consisting of the 16x16 block column
    to fill\r\n; \r\n; A = control flag. If #$FF, DoRawPPUtransferWith394, regular
    otherwise.\r\n;\r\n; This routine also writes sprite chr every time Megaman changes
    moves\r\n; up/down to a new screen, transferring 32 bytes at a time\r\n\r\nDoRawPPUtransferWithA\r\n0001D5AB:
    C9 FF     cmp #$FF\r\n0001D5AD: F0 1A     beq DoRawPPUtransferWith394        
    ; $0001D5C9\r\n\r\nDoRawPPUtransfer:\r\n0001D5AF: AD 80 03  lda RawPPUtransferAddress+0\r\n0001D5B2:
    8D 06 20  sta $2006\r\n0001D5B5: AD 81 03  lda RawPPUtransferAddress+1\r\n0001D5B8:
    8D 06 20  sta $2006\r\n\r\n0001D5BB: A2 00     ldx #$00\r\n\r\n-\r\n0001D5BD:
    BD 82 03  lda RawPPUtransferBuf,x\r\n0001D5C0: 8D 07 20  sta $2007\r\n0001D5C3:
    E8        inx\r\n0001D5C4: C6 5E     dec RawPPUtransferSize\r\n0001D5C6: D0 F5    
    bne -                               ; $0001D5BD\r\n\r\n0001D5C8: 60        rts\r\n;
    \r\n; $380 contains data to be transferred to PPU in this format:\r\n;\r\n; $00:
    PPU address high\r\n; $01: PPU address low\r\n; $14: data 2 bytes at a time consisting
    of the 16x16 block column to fill\r\n\r\n; This is NOT the routine called when
    scrolling... in fact, it never \r\n; seems to get called at all(???)\r\nDoRawPPUtransferWith394\r\n\r\n0001D5C9:
    A2 00     ldx #$00\r\n0001D5CB: A0 00     ldy #$00\r\n\r\n-\r\n0001D5CD: BD 80
    03  lda RawPPUtransferAddress+0,x\r\n0001D5D0: 8D 06 20  sta $2006\r\n0001D5D3:
    BD 81 03  lda RawPPUtransferAddress+1,x\r\n0001D5D6: 8D 06 20  sta $2006\r\n\r\n\r\n0001D5D9:
    B9 94 03  lda $0394,y\r\n0001D5DC: 8D 07 20  sta $2007\r\n0001D5DF: B9 95 03 
    lda $0395,y\r\n0001D5E2: 8D 07 20  sta $2007\r\n0001D5E5: C8        iny\r\n0001D5E6:
    C8        iny\r\n0001D5E7: 98        tya\r\n0001D5E8: 29 03     and #$03\r\n0001D5EA:
    F0 13     beq +                               ; $0001D5FF\r\n\r\n0001D5EC: 18       
    clc                                 ; PPU addr += 32\r\n0001D5ED: BD 81 03  lda
    RawPPUtransferAddress+1,x\r\n0001D5F0: 69 20     adc #$20\r\n0001D5F2: 9D 81
    03  sta RawPPUtransferAddress+1,x\r\n0001D5F5: BD 80 03  lda RawPPUtransferAddress+0,x\r\n0001D5F8:
    69 00     adc #$00\r\n0001D5FA: 9D 80 03  sta RawPPUtransferAddress+0,x\r\n0001D5FD:
    D0 CE     bne -                               ; $0001D5CD\r\n\r\n+\r\n0001D5FF:
    E8        inx\r\n0001D600: E8        inx\r\n0001D601: C6 AA     dec $AA\r\n0001D603:
    D0 C8     bne -                               ; $0001D5CD\r\n\r\n0001D605: A9
    00     lda #$00\r\n0001D607: 85 5E     sta RawPPUtransferSize\r\n0001D609: 60       
    rts\r\n\r\n\r\n\r\n;\r\n; WritePaletteParam = \r\n;\r\n\r\nUpdatePalettes\r\n0001D60A:
    A5 37     lda PaletteUpdateDelay     ; Only write palettes every 8th frame(?)\r\n0001D60C:
    29 07     and #$07\r\n0001D60E: D0 1B     bne ++                             
    ; $0001D62B\r\n\r\n\r\n\r\n; if bit3 of PaletteUpdateDelay is set then write
    palette at $38,$39   else    $3A,$3B\r\n0001D610: A6 3A     ldx $3A\r\n0001D612:
    A4 3B     ldy $3B\r\n\r\n0001D614: A5 37     lda PaletteUpdateDelay\r\n0001D616:
    29 08     and #$08\r\n0001D618: F0 04     beq +                              
    ; $0001D61E\r\n0001D61A: A6 38     ldx $38\r\n0001D61C: A4 39     ldy $39\r\n+\r\n0001D61E:
    86 35     stx $35\r\n0001D620: 84 36     sty $36\r\n\r\n\r\n0001D622: A5 34    
    lda WritePaletteParam\r\n\r\n0001D624: 48        pha\r\n0001D625: 20 47 D6  jsr
    WritePalette                    ; $D647\r\n0001D628: 68        pla\r\n\r\n0001D629:
    85 34     sta WritePaletteParam\r\n\r\n++\r\n; if PaletteUpdateDelay - #1 = 0
    then write palette at $3A,$3B\r\n0001D62B: C6 37     dec PaletteUpdateDelay\r\n0001D62D:
    D0 17     bne +                               ; $0001D646\r\n\r\n0001D62F: A5
    3A     lda $3A\r\n0001D631: 85 35     sta $35\r\n0001D633: A5 3B     lda $3B\r\n0001D635:
    85 36     sta $36\r\n\r\n0001D637: A5 34     lda WritePaletteParam\r\n0001D639:
    20 47 D6  jsr WritePalette                    ; $D647\r\n\r\n\r\n; if BossCurrentStrategy
    !=0 and BossCurrentStrategy < 5 then BossCurrentStrategy++\r\n0001D63C: A5 3E    
    lda BossCurrentStrategy\r\n0001D63E: F0 06     beq +                              
    ; $0001D646\r\n\r\n0001D640: C9 05     cmp #$05\r\n0001D642: B0 02     bcs +                              
    ; $0001D646\r\n\r\n0001D644: E6 3E     inc BossCurrentStrategy\r\n\r\n+\r\n0001D646:
    60        rts\r\n\r\n\r\n;\r\n; A = $ssssp000\r\n; p = palette (=0 for BG, =1
    for sprites)\r\n; s = palette size (16-240. Use ssss = 0001 for 1 palette, ssss
    = 0010 for 2) \r\n;\r\n;\r\n;   10 = 1 BG pal\r\n;   18 = 1 sprite pal\r\n;  
    20 = both pals at once, first BG, then sprite\r\n;\r\n; $35,$36 = palette address\r\n;\r\n;\r\n\r\nWritePalette\r\n0001D647:
    48        pha\r\n0001D648: 29 F0     and #$F0\r\n0001D64A: AA        tax\r\n0001D64B:
    A9 3F     lda #$3F\r\n0001D64D: 8D 06 20  sta $2006\r\n0001D650: 68        pla\r\n\r\n0001D651:
    0A        asl a\r\n0001D652: 29 10     and #$10 ; choose 3F00 or 3F10.\r\n0001D654:
    8D 06 20  sta $2006\r\n0001D657: A0 00     ldy #$00\r\n\r\n-\r\n0001D659: B1
    35     lda ($35),y\r\n0001D65B: 8D 07 20  sta $2007\r\n0001D65E: C8        iny\r\n0001D65F:
    CA        dex\r\n0001D660: D0 F7     bne -                           ; $0001D659\r\n\r\n\r\n;
    Meaningless code here?...\r\n0001D662: A9 3F     lda #$3F\r\n0001D664: 8D 06
    20  sta $2006\r\n0001D667: 8E 06 20  stx $2006 ;write 3F00\r\n\r\n0001D66A: 8E
    06 20  stx $2006 ;write 0000\r\n0001D66D: 8E 06 20  stx $2006\r\n0001D670: 86
    34     stx WritePaletteParam\r\n0001D672: 60        rts\r\n\r\n\r\n\r\n\r\n;
    \r\n; $300 contains data to be transferred to PPU in this format (size = $15
    bytes):\r\n;\r\n; 00-01 : PPU name table address of 32x32 block to write (hi;
    lo)\r\n; 02-11 : 8x8 tiles, one column at a time, each column consists of 4 rows\r\n;
    12-13 : PPU attribute table address of 32x32 block to write (hi; lo)\r\n; 14   
    : attribute byte of 32x32 block\r\n;\r\n; TSAPPUtransferSize\r\n;   = #%11000000 
    ; do DoTSABitManipulation\r\n;   = #%00nnnnnn  ; n = number of 32x32 blocks to
    write\r\n;\r\n;\r\n\r\nDoTSAPPUtransfer\r\n0001D673: A5 1C      lda TSAPPUtransferSize\r\n0001D675:
    D0 03 4C FD D6 beq EndOfTransfer                               ; $D6FD\r\n0001D67A:
    29 C0      and #$C0\r\n0001D67C: F0 03 4C 07 D7 bne DoTSABitManipulation ;$D707\r\n0001D681:
    A5 FF     lda PPU2000value   ; Set PPU autoincrement to 32 (not 1)\r\n0001D683:
    09 04     ora #$04\r\n0001D685: 85 FF     sta PPU2000value\r\n0001D687: 8D 00
    20  sta $2000\r\n\r\n; Initialize the pointer to the data to be written\r\n0001D68A:
    A9 02     lda #(TSAPPUtransfer0NTdata).lo\r\n0001D68C: 85 0E     sta $0E\r\n0001D68E:
    A9 03     lda #(TSAPPUtransfer0NTdata).hi\r\n0001D690: 85 0F     sta $0F\r\n\r\n\r\n0001D692:
    A9 00     lda #(TSAPPUtransfer0NTaddress).lo\r\n---\r\n0001D694: 85 0C     sta
    $0C\r\n0001D696: AA        tax\r\n0001D697: A0 00     ldy #$00\r\n\r\n0001D699:
    A9 03     lda #(TSAPPUtransfer0NTaddress).hi\r\n;;;;;; This write may affect
    to random number generator:\r\n0001D69B: 85 0D     sta $0D\r\n\r\n; if $300,X,$301,X
    = #$0380 then $0C,$0D = #$0100  (write 2 bytes)\r\n; (so we don't write beyond
    the vertical boundaries of the nametable)\r\n0001D69D: BD 01 03  lda TSAPPUtransfer0NTaddress+1,x\r\n0001D6A0:
    29 80     and #$80\r\n0001D6A2: 1D 00 03  ora TSAPPUtransfer0NTaddress+0,x\r\n0001D6A5:
    29 83     and #$83\r\n0001D6A7: C9 83     cmp #$83 ;Compare address to $0380\r\n0001D6A9:
    D0 04     bne +                                           ; $D6AF\r\n\r\n0001D6AB:
    A9 01     lda #$01\r\n0001D6AD: 85 0D     sta $0D\r\n+\r\n--\r\n0001D6AF: BD
    00 03  lda TSAPPUtransfer0NTaddress+0,x\r\n0001D6B2: 8D 06 20  sta $2006\r\n0001D6B5:
    BD 01 03  lda TSAPPUtransfer0NTaddress+1,x\r\n0001D6B8: 8D 06 20  sta $2006\r\n-\r\n0001D6BB:
    B1 0E     lda ($0E),y\r\n0001D6BD: 8D 07 20  sta $2007\r\n0001D6C0: C8       
    iny\r\n0001D6C1: 98        tya\r\n0001D6C2: 25 0D     and $0D\r\n0001D6C4: D0
    F5     bne -                       ; $0001D6BB\r\n\r\n; Compensate if blocks
    skipped to make sure we're at the right address\r\n0001D6C6: A5 0D     lda $0D\r\n0001D6C8:
    C9 03     cmp #$03\r\n0001D6CA: F0 02     beq +                       ; $0001D6CE\r\n0001D6CC:
    C8        iny\r\n0001D6CD: C8        iny\r\n+\r\n\r\n; Loop until Y == 16\r\n0001D6CE:
    98        tya\r\n0001D6CF: 29 0F     and #$0F\r\n0001D6D1: F0 06     beq +                      
    ; $0001D6D9\r\n0001D6D3: FE 01 03  inc TSAPPUtransfer0NTaddress+1,x\r\n0001D6D6:
    4C AF D6  jmp --                      ; $D6AF\r\n+\r\n; Write attribute byte
    for the whole 32x32 block\r\n0001D6D9: BD 12 03  lda TSAPPUtransfer0AttrAddress+0,x\r\n0001D6DC:
    8D 06 20  sta $2006\r\n\r\n0001D6DF: BD 13 03  lda TSAPPUtransfer0AttrAddress+1,x\r\n0001D6E2:
    8D 06 20  sta $2006\r\n\r\n0001D6E5: BD 14 03  lda TSAPPUtransfer0AttrData,x\r\n0001D6E8:
    8D 07 20  sta $2007\r\n\r\n0001D6EB: C6 1C     dec TSAPPUtransferSize\r\n0001D6ED:
    F0 0E     beq EndOfTransfer                               ; $D6FD\r\n\r\n0001D6EF:
    18        clc         ; $0E += #21\r\n0001D6F0: A5 0E     lda $0E\r\n0001D6F2:
    69 15     adc #$15\r\n0001D6F4: 85 0E     sta $0E\r\n\r\n0001D6F6: 18       
    clc         ; $0C += #21\r\n0001D6F7: A5 0C     lda $0C\r\n0001D6F9: 69 15    
    adc #$15\r\n0001D6FB: D0 97     bne ---                                        
    ; $D694\r\n\r\n\r\nEndofTransfer\r\n0001D6FD: A5 FF     lda PPU2000value      
    ; clear #$04, that is, set PPU inc by 1\r\n0001D6FF: 29 FB     and #$FB\r\n0001D701:
    85 FF     sta PPU2000value\r\n0001D703: 8D 00 20  sta $2000\r\n0001D706: 60       
    rts\r\n\r\nDoTSABitManipulation\r\n; if TSAPPUtransferSize != #$40 then set bits
    in PPU-ram as specified in bitset buffer\r\n0001D707: A5 1C     lda TSAPPUtransferSize\r\n0001D709:
    C9 40      cmp #$40\r\n0001D70B: F0 03 4C 50 D7 bne PPUramBitSet              
    ; $D750\r\n0001D710: A2 00     ldx #$00\r\n0001D712: 86 1C     stx TSAPPUtransferSize\r\n--\r\n0001D714:
    AD 00 03  lda TSAPPUtransfer0NTaddress+0\r\n0001D717: 8D 06 20  sta $2006\r\n0001D71A:
    AD 01 03  lda TSAPPUtransfer0NTaddress+1\r\n0001D71D: 8D 06 20  sta $2006\r\n;
    Transfer 8 bytes from buffer to PPU-ram\r\n-\r\n0001D720: BD 02 03  lda TSAPPUtransfer0NTdata,x\r\n0001D723:
    8D 07 20  sta $2007\r\n0001D726: E8        inx\r\n0001D727: 8A        txa\r\n0001D728:
    29 07     and #$07\r\n0001D72A: D0 F4     bne -                           ; $0001D720\r\n\r\n0001D72C:
    18        clc                             ; CPU-ram address += 32\r\n0001D72D:
    AD 01 03  lda TSAPPUtransfer0NTaddress+1\r\n0001D730: 69 20     adc #$20\r\n0001D732:
    8D 01 03  sta TSAPPUtransfer0NTaddress+1\r\n\r\n0001D735: A4 1C     ldy TSAPPUtransferSize    
    ; Move OR mask from pos. Y to pos. 0\r\n0001D737: B9 15 03  lda TSAPPUtransfer0AttrOrMask,y\r\n0001D73A:
    8D 15 03  sta TSAPPUtransfer0AttrOrMask\r\n0001D73D: A0 00     ldy #$00\r\n0001D73F:
    20 66 D7  jsr PPUramBitSetSingle          ; $D766\r\n\r\n0001D742: E6 1C    
    inc TSAPPUtransferSize\r\n0001D744: EE 13 03  inc TSAPPUtransfer0AttrAddress+1\r\n\r\n0001D747:
    E0 10     cpx #$10\r\n0001D749: D0 C9     bne --                          ; $0001D714\r\n\r\n0001D74B:
    A9 00     lda #$00\r\n0001D74D: 85 1C     sta TSAPPUtransferSize\r\n0001D74F:
    60        rts\r\n\r\n\r\n\r\n;\r\n; TSAPPUtransferSize = %0?00nnnn\r\n;\r\n;  
    n =  number of bytes to perform bit operations on\r\n;\r\n; Among other things,
    this is used to flash boss selection in stage select\r\n;\r\n\r\nPPUramBitSet\r\n0001D750:
    A5 1C     lda TSAPPUtransferSize\r\n0001D752: 29 0F     and #$0F\r\n0001D754:
    AA        tax\r\n0001D755: A0 00     ldy #$00\r\n\r\n-\r\n0001D757: 20 66 D7 
    jsr PPUramBitSetSingle      ; $D766\r\n0001D75A: C8        iny\r\n0001D75B: C8       
    iny\r\n0001D75C: C8        iny\r\n0001D75D: C8        iny\r\n0001D75E: CA       
    dex\r\n0001D75F: D0 F6     bne -                       ; $0001D757\r\n\r\n0001D761:
    A9 00     lda #$00    ;\r\n0001D763: 85 1C     sta TSAPPUtransferSize\r\n0001D765:
    60        rts\r\n\r\n\r\n; PPU addr = word at $0312[Y]\r\n; It will read 1 byte\r\n;
    And then read another, and write it (back & $0314[Y]) | ($0315[Y])\r\nPPUramBitSetSingle\r\n0001D766:
    B9 12 03  lda TSAPPUtransfer0AttrAddress+0,y\r\n0001D769: 8D 06 20  sta $2006\r\n0001D76C:
    B9 13 03  lda TSAPPUtransfer0AttrAddress+1,y\r\n0001D76F: 8D 06 20  sta $2006\r\n\r\n0001D772:
    AD 07 20  lda $2007\r\n0001D775: AD 07 20  lda $2007\r\n0001D778: 39 14 03  and
    TSAPPUtransfer0AttrAndMask,y\r\n0001D77B: 19 15 03  ora TSAPPUtransfer0AttrOrMask,y\r\n\r\n0001D77E:
    48        pha\r\n0001D77F: B9 12 03  lda TSAPPUtransfer0AttrAddress+0,y\r\n0001D782:
    8D 06 20  sta $2006\r\n0001D785: B9 13 03  lda TSAPPUtransfer0AttrAddress+1,y\r\n0001D788:
    8D 06 20  sta $2006\r\n0001D78B: 68        pla\r\n\r\n0001D78C: 8D 07 20  sta
    $2007\r\n0001D78F: 60        rts\r\n\r\n\r\nAnalyzeCurrentTile\r\n0001D790: A2
    02     ldx #$02\r\n0001D792: A0 00     ldy #$00\r\n0001D794: AD 20 04  lda ObjectFlags+0\r\n0001D797:
    29 DF     and #$DF          ;~0x20\r\n0001D799: 8D 20 04  sta ObjectFlags+0\r\n-\r\n0001D79C:
    B5 2A     lda $2A,x\r\n0001D79E: 10 12     bpl $0001D7B2\r\n; Negative tiles:\r\n0001D7A0:
    29 7F     and #$7F\r\n0001D7A2: C9 03     cmp #$03\r\n0001D7A4: D0 06     bne
    +\r\n; Set scrolling = left (huh?) --- THIS ACTUALLY CAUSES A GLITCH IN ROCKMAN
    2\r\n0001D7A6: A9 02     lda #$02\r\n0001D7A8: 85 26     sta CurrentStripeEndType\r\n0001D7AA:
    D0 0E     bne $0001D7BA ;unconditional jump\r\n+\r\n0001D7AC: C9 04     cmp #$04\r\n0001D7AE:
    F0 26     beq $0001D7D6\r\n0001D7B0: D0 08     bne $0001D7BA\r\n; Positive tiles:\r\n0001D7B2:
    C9 01     cmp #$01\r\n0001D7B4: F0 04     beq $0001D7BA\r\n0001D7B6: C9 04    
    cmp #$04\r\n0001D7B8: D0 04     bne $0001D7BE\r\n0001D7BA: A0 01     ldy #$01\r\n0001D7BC:
    D0 1B     bne $0001D7D9 ;unconditional jump\r\n\r\n; Spike?\r\n; Spike kills
    in all three positions.\r\n0001D7BE: C9 03     cmp #$03\r\n0001D7C0: F0 1C    
    beq SpikeKill1\r\n\r\n; Ladder?\r\n0001D7C2: C9 02     cmp #$02\r\n0001D7C4:
    D0 0A     bne +\r\n0001D7C6: A5 30     lda CurrentTileState\r\n0001D7C8: 1D DB
    D7  ora CurrentTileStateBits,x\r\n0001D7CB: 85 30     sta CurrentTileState\r\n0001D7CD:
    4C D6 D7  jmp $D7D6\r\n+\r\n0001D7D0: C9 05     cmp #$05\r\n0001D7D2: D0 02    
    bne $0001D7D6\r\n0001D7D4: 85 94     sta MegamanWalkTimer\r\n0001D7D6: CA       
    dex\r\n0001D7D7: 10 C3     bpl -\r\n0001D7D9: 98        tya\r\n0001D7DA: 60       
    rts\r\n\r\nCurrentTileStateBits:\r\n    .byte $08 ;ladder here\r\n    .byte $04
    ;ladder above\r\n    .byte $02 ;ladder above that\r\n\r\nSpikeKill1\r\n0001D7DE:
    4C 19 C2  jmp MegaManKilled                               ; $C219\r\n\r\n0001D7E1:
    A2 02     ldx #$02\r\n0001D7E3: A9 00     lda #$00\r\n0001D7E5: 85 96     sta
    $96\r\n0001D7E7: B4 2A     ldy $2A,x\r\n0001D7E9: 10 06     bpl $0001D7F1\r\n0001D7EB:
    C0 84     cpy #$84\r\n0001D7ED: D0 10     bne $0001D7FF\r\n0001D7EF: F0 10    
    beq $0001D801\r\n\r\n0001D7F1: C0 03     cpy #$03\r\n0001D7F3: F0 26     beq
    SpikeKill2\r\n0001D7F5: C0 01     cpy #$01\r\n0001D7F7: F0 06     beq $0001D7FF\r\n0001D7F9:
    C0 04     cpy #$04\r\n0001D7FB: D0 04     bne $0001D801\r\n0001D7FD: 85 96    
    sta $96\r\n0001D7FF: 09 01     ora #$01\r\n0001D801: CA        dex\r\n0001D802:
    10 E3     bpl $0001D7E7\r\n0001D804: A8        tay\r\n0001D805: A6 2F     ldx
    RefObjectNumber\r\n0001D807: D0 10     bne ++                                         
    ; $D819\r\n0001D809: 98        tya\r\n0001D80A: D0 0D     bne ++                                         
    ; $D819\r\n0001D80C: AD 80 06  lda ObjectYSpeed+0\r\n0001D80F: 10 08     bpl
    ++                                          ; $D819\r\n0001D811: A5 30     lda
    CurrentTileState\r\n0001D813: C9 01     cmp #$01\r\n0001D815: D0 02     bne ++                                         
    ; $D819\r\n0001D817: A0 01     ldy #$01\r\n\r\n++\r\n0001D819: 98        tya\r\n0001D81A:
    60        rts\r\n\r\n\r\nSpikeKill2\r\n0001D81B: 4C 19 C2  jmp MegaManKilled                              
    ; $C219\r\n\r\n; First byte is bank number, second byte is number of 256-bytes
    to write\r\nStageSelectionGFXinfo: ; at $D81E\r\n    .byte $00,$02\r\n    .byte
    $00,$02\r\n    .byte $00,$02\r\n    .byte $00,$01\r\n    .byte $00,$01\r\n   
    .byte $00,$03\r\n    .byte $00,$03\r\n    .byte $02,$01\r\n    .byte $02,$01\r\n   
    .byte $00,$08\r\n; Addresses corresponding to $D81E, telling which 256-byte sequences
    are sourced.\r\nStageSelectionGFXsource: ; at $D822\r\n    .word $9800\r\n   
    .word $A800\r\n    .word $A000\r\n    .word $A400\r\n    .word $A700\r\n    .word
    $AC00\r\n    .word $9C00\r\n    .word $BA00\r\n    .word $9700\r\n    .word $B800\r\n\r\n;;
    Begin the stage selection screen.\r\nExecStageSelectionScreen\r\n0001D846: A9
    06     lda #$06\r\n0001D848: 85 42     sta CurrentBank\r\n0001D84A: 8D 06 C0 
    sta $C006\r\n0001D84D: A9 00     lda #$00\r\n0001D84F: 8D 06 20  sta $2006 ;PPU
    address=$0000\r\n0001D852: 8D 06 20  sta $2006\r\n0001D855: A9 00     lda #$00\r\n0001D857:
    85 0C     sta $0C\r\n---\r\n0001D859: 0A        asl a\r\n0001D85A: AA       
    tax\r\n0001D85B: BD 1E D8  lda StageSelectionGFXinfo+0,x\r\n0001D85E: A8       
    tay\r\n0001D85F: 85 42     sta CurrentBank\r\n0001D861: 99 00 C0  sta $C000,y\r\n\r\n0001D864:
    BD 32 D8  lda StageSelectionGFXsource+0,x\r\n0001D867: 85 04     sta $04\r\n0001D869:
    BD 33 D8  lda StageSelectionGFXsource+1,x\r\n0001D86C: 85 05     sta $05\r\n0001D86E:
    BD 1F D8  lda StageSelectionGFXinfo+1,x\r\n0001D871: AA        tax\r\n\r\n--\r\n0001D872:
    A0 00     ldy #$00\r\n-\r\n0001D874: B1 04     lda ($04),y\r\n0001D876: 8D 07
    20  sta $2007\r\n0001D879: C8        iny\r\n0001D87A: D0 F8     bne -                                          
    ; $D874\r\n\r\n0001D87C: E6 05     inc $05\r\n0001D87E: CA        dex\r\n0001D87F:
    D0 F1     bne --\r\n0001D881: E6 0C     inc $0C\r\n0001D883: A5 0C     lda $0C\r\n0001D885:
    C9 0A     cmp #$0A\r\n0001D887: D0 D0     bne ---\r\n0001D889: A9 06     lda
    #$06\r\n0001D88B: 85 42     sta CurrentBank\r\n0001D88D: 8D 06 C0  sta $C006\r\n0001D890:
    20 F6 BF  jsr RunStageSelectionScreen\r\n0001D893: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\nLoadEnemies:\r\n0001D896: A5 3E     lda BossCurrentStrategy ;
    No enemy loading if fighting boss\r\n0001D898: F0 01     beq +\r\n-\r\n0001D89A:
    60        rts\r\n+\r\n0001D89B: A9 06     lda #$06\r\n0001D89D: 8D 06 C0  sta
    $C006\r\n0001D8A0: 85 42     sta CurrentBank\r\n0001D8A2: A5 8F     lda ZigZagFireStatus\r\n0001D8A4:
    F0 03     beq +\r\n0001D8A6: 20 02 DB  jsr UpdateZigZagFire\r\n+\r\n0001D8A9:
    A5 92     lda AutoSpawnObjectFFcounter\r\n0001D8AB: F0 03     beq +\r\n0001D8AD:
    20 66 C6  jsr SpawnObject_TypeIsFF\r\n+\r\n0001D8B0: A5 8D     lda ScreenMovedFlag\r\n0001D8B2:
    29 01     and #$01\r\n0001D8B4: F0 E4     beq - ; Quit if nothing has changed\r\n0001D8B6:
    A5 8D     lda ScreenMovedFlag\r\n0001D8B8: 29 FE         and #$FE\r\n0001D8BA:
    D0 03 4C 21 D9 beq LoadEnemies_Backward\r\n\r\nLoadEnemies_Forward\r\n0001D8BF:
    18        clc\r\n0001D8C0: A5 1A     lda ScrollPosX\r\n0001D8C2: 69 FF     adc
    #$FF\r\n0001D8C4: 85 04     sta $04        ;current screen X position -1\r\n\r\n0001D8C6:
    A5 1B     lda ScrollPosScreen\r\n0001D8C8: 69 00     adc #$00\r\n0001D8CA: 85
    05     sta $05        ;current screen number -0\r\n\r\n0001D8CC: A5 8C     lda
    CurrentEnemyIndex\r\n0001D8CE: 20 89 D9  jsr LoadEnemyNumber\r\n0001D8D1: A0
    00     ldy #$00\r\n-\r\n0001D8D3: B1 06     lda (CurrentRoomPointer),y ; load
    screen number\r\n0001D8D5: C5 05     cmp $05\r\n0001D8D7: 90 0C     bcc +                                          
    ; $D8E5\r\n0001D8D9: D0 21     bne ++                                         
    ; $D8FC\r\n0001D8DB: C8        iny\r\n0001D8DC: B1 06     lda (CurrentRoomPointer),y
    ; load X coordinate for testing\r\n0001D8DE: 88        dey\r\n0001D8DF: C5 04    
    cmp $04\r\n0001D8E1: F0 02     beq +                                          
    ; $D8E5\r\n0001D8E3: B0 17     bcs ++                                         
    ; $D8FC\r\n+\r\n0001D8E5: C8        iny\r\n0001D8E6: B1 06     lda (CurrentRoomPointer),y\r\n0001D8E8:
    85 00     sta $00 ;store X coordinate\r\n0001D8EA: C8        iny\r\n0001D8EB:
    B1 06     lda (CurrentRoomPointer),y\r\n0001D8ED: 85 01     sta $01 ;store Y
    coordinate\r\n0001D8EF: C8        iny\r\n0001D8F0: B1 06     lda (CurrentRoomPointer),y
    ;load enemy number\r\n0001D8F2: C8        iny\r\n0001D8F3: A6 8C     ldx CurrentEnemyIndex\r\n0001D8F5:
    20 AD D9  jsr SpawnObject\r\n0001D8F8: E6 8C     inc CurrentEnemyIndex\r\n0001D8FA:
    D0 D7     bne -                                           ; $D8D3\r\n++\r\n0001D8FC:
    A5 8B     lda PreviousEnemyIndex\r\n0001D8FE: 18        clc\r\n0001D8FF: 69 01    
    adc #$01\r\n0001D901: 20 89 D9  jsr LoadEnemyNumber\r\n-\r\n0001D904: B1 06    
    lda (CurrentRoomPointer),y\r\n0001D906: C5 1B     cmp ScrollPosScreen\r\n0001D908:
    90 0C     bcc ++\r\n0001D90A: D0 12     bne +++\r\n0001D90C: C8        iny\r\n0001D90D:
    B1 06     lda (CurrentRoomPointer),y\r\n0001D90F: C5 1A     cmp ScrollPosX\r\n0001D911:
    90 02     bcc +\r\n0001D913: D0 09     bne +++\r\n+\r\n0001D915: 88        dey\r\n++\r\n0001D916:
    C8        iny\r\n0001D917: C8        iny\r\n0001D918: C8        iny\r\n0001D919:
    C8        iny\r\n0001D91A: E6 8B     inc PreviousEnemyIndex\r\n0001D91C: D0 E6    
    bne -\r\n+++\r\n0001D91E: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\nLoadEnemies_Backward\r\n0001D921: A5 1B     lda ScrollPosScreen\r\n0001D923:
    85 05     sta $05\r\n0001D925: A5 1A     lda ScrollPosX\r\n0001D927: 85 04    
    sta $04\r\n-\r\n0001D929: A5 8B     lda PreviousEnemyIndex\r\n0001D92B: C9 FF    
    cmp #$FF\r\n0001D92D: F0 2B     beq ++\r\n0001D92F: 20 89 D9  jsr LoadEnemyNumber\r\n0001D932:
    B1 06     lda (CurrentRoomPointer),y\r\n0001D934: C5 1B     cmp ScrollPosScreen\r\n0001D936:
    90 22     bcc ++\r\n0001D938: D0 08     bne +\r\n0001D93A: C8        iny\r\n0001D93B:
    B1 06     lda (CurrentRoomPointer),y\r\n0001D93D: 88        dey\r\n0001D93E:
    C5 1A     cmp ScrollPosX\r\n0001D940: 90 18     bcc ++\r\n+\r\n0001D942: C8       
    iny\r\n0001D943: B1 06     lda (CurrentRoomPointer),y\r\n0001D945: 85 00    
    sta $00\r\n0001D947: C8        iny\r\n0001D948: B1 06     lda (CurrentRoomPointer),y\r\n0001D94A:
    85 01     sta $01\r\n0001D94C: C8        iny\r\n0001D94D: B1 06     lda (CurrentRoomPointer),y\r\n0001D94F:
    C8        iny\r\n0001D950: A6 8B     ldx PreviousEnemyIndex\r\n0001D952: 20 AD
    D9  jsr SpawnObject\r\n0001D955: C6 8B     dec PreviousEnemyIndex\r\n0001D957:
    4C 29 D9  jmp -\r\n++\r\n0001D95A: 18        clc\r\n0001D95B: A5 1A     lda ScrollPosX\r\n0001D95D:
    69 FF     adc #$FF\r\n0001D95F: 85 04     sta $04\r\n0001D961: A5 1B     lda
    ScrollPosScreen\r\n0001D963: 69 00     adc #$00\r\n0001D965: 85 05     sta $05\r\n0001D967:
    A5 8C     lda CurrentEnemyIndex\r\n0001D969: F0 1B     beq ++\r\n0001D96B: 38       
    sec\r\n0001D96C: E9 01     sbc #$01\r\n0001D96E: 20 89 D9  jsr LoadEnemyNumber\r\n0001D971:
    B1 06     lda (CurrentRoomPointer),y\r\n0001D973: C5 05     cmp $05\r\n0001D975:
    90 0F     bcc ++\r\n0001D977: D0 09     bne +\r\n0001D979: C8        iny\r\n0001D97A:
    B1 06     lda (CurrentRoomPointer),y\r\n0001D97C: C5 04     cmp $04\r\n0001D97E:
    90 06     bcc ++\r\n0001D980: F0 04     beq ++\r\n+\r\n0001D982: C6 8C     dec
    CurrentEnemyIndex\r\n0001D984: D0 E1     bne $0001D967\r\n++\r\n0001D986: 4C
    B3 C3  jmp SwitchBank05                                ; $C3B3\r\n\r\n\r\nLoadEnemyNumber\r\n0001D989:
    A6 00     ldx $00\r\n0001D98B: 86 07     stx CurrentRoomPointer+1\r\n0001D98D:
    0A        asl a\r\n0001D98E: 26 07     rol CurrentRoomPointer+1\r\n0001D990:
    0A        asl a\r\n0001D991: 26 07     rol CurrentRoomPointer+1\r\n0001D993:
    85 06     sta CurrentRoomPointer\r\n0001D995: A5 31     lda CurrentStage\r\n0001D997:
    0A        asl a\r\n0001D998: AA        tax\r\n0001D999: 18        clc\r\n0001D99A:
    BD 52 A4  lda EnemyDataPointers+0,x\r\n0001D99D: 65 06     adc CurrentRoomPointer\r\n0001D99F:
    85 06     sta CurrentRoomPointer\r\n0001D9A1: A5 07     lda CurrentRoomPointer+1\r\n0001D9A3:
    29 03     and #$03\r\n0001D9A5: 7D 53 A4  adc EnemyDataPointers+1,x\r\n0001D9A8:
    85 07     sta CurrentRoomPointer+1\r\n0001D9AA: A0 00     ldy #$00\r\n0001D9AC:
    60        rts\r\n\r\n\r\nSpawnObject\r\n;; Spawn a new object\r\n;;;;  A = object
    type\r\n;;;;  Y = ?\r\n;;;;  X = weapon power?\r\n;;;;  $00 = object pos x\r\n;;;; 
    $01 = object pos y\r\n;;;;  $05 = object screen number\r\n0001D9AD: 85 02    
    sta $02\r\n0001D9AF: 84 03     sty $03\r\n0001D9B1: C9 FF     cmp #$FF\r\n0001D9B3:
    D0 06     bne +\r\n; If the object type is $FF\r\n0001D9B5: 20 66 C6  jsr SpawnObject_TypeIsFF\r\n0001D9B8:
    4C 2F DA  jmp EndSpawnObject\r\n+\r\n0001D9BB: 86 0C     stx $0C\r\n0001D9BD:
    A5 01     lda $01\r\n0001D9BF: C9 FE            cmp #$FE\r\n0001D9C1: D0 03 4C
    32 DA   beq SpawnObjectYisFE\r\n0001D9C6: 8A        txa\r\n0001D9C7: A2 0F    
    ldx #$0F\r\n-\r\n0001D9C9: D5 7B     cmp $7B,x\r\n0001D9CB: F0 05     beq +\r\n0001D9CD:
    CA        dex\r\n0001D9CE: 10 F9     bpl -\r\n0001D9D0: 30 03     bmi ++\r\n-\r\n+\r\n0001D9D2:
    A4 03     ldy $03\r\n0001D9D4: 60        rts\r\n++\r\n0001D9D5: A2 10     ldx
    #$10\r\n0001D9D7: 20 76 C5  jsr FindFreeObject                              ;
    FindFreeObject\r\n0001D9DA: B0 F6     bcs -                                          
    ; $D9D2\r\n\r\n0001D9DC: A5 0C     lda $0C\r\n0001D9DE: 95 6B     sta Meters+1,x\r\n0001D9E0:
    A9 FF     lda #$FF\r\n0001D9E2: 9D 00 04  sta ObjectSpriteNum,x\r\n\r\n0001D9E5:
    A5 02     lda $02  ;object type\r\n0001D9E7: 9D E0 06  sta ObjectType,x\r\n0001D9EA:
    A5 05     lda $05  ;screen number\r\n0001D9EC: 9D 60 04  sta ObjectPosScreen,x\r\n0001D9EF:
    A5 00     lda $00  ;x coordinate\r\n0001D9F1: 9D 80 04  sta ObjectPosX,x\r\n\r\n0001D9F4:
    A5 01     lda $01  ;y coordinate\r\n0001D9F6: C9 FF     cmp #$FF\r\n0001D9F8:
    D0 03     bne +                                           ; $D9FD\r\n0001D9FA:
    4C 64 DA  jmp SpawnObject_YisFF ; $DA64\r\n+\r\n0001D9FD: 9D 00 06  sta ObjectPosY,x\r\n\r\n0001DA00:
    A4 02     ldy $02  ;object type\r\n0001DA02: B9 80 A3  lda DefaultObjectFlags,y\r\n0001DA05:
    9D 20 04  sta ObjectFlags,x\r\n0001DA08: 98        tya\r\n0001DA09: 48       
    pha\r\n\r\n0001DA0A: B9 C6 A3   lda DefaultObjectSpeedCtrl,y\r\n0001DA0D: A8        
    tay\r\n0001DA0E: 20 33 F5   jsr InitObjectDefaultSpeed\r\n0001DA11: 68       
    pla\r\n\r\n0001DA12: A8        tay\r\n0001DA13: B9 0C A4  lda DefaultObjectFireDelay,y\r\n0001DA16:
    9D 40 06  sta ObjectFireDelay,x\r\n\r\n0001DA19: A9 14     lda #$14\r\n0001DA1B:
    9D C0 06  sta ObjectLifeMeter,x\r\n\r\n0001DA1E: A9 00     lda #$00\r\n0001DA20:
    9D 40 04  sta ObjectUnknown440,x\r\n0001DA23: 9D A0 06  sta ObjectLifeCycleCounter,x\r\n0001DA26:
    9D 20 06  sta ObjectPosYfraction,x\r\n0001DA29: 9D A0 04  sta ObjectPosXfraction,x\r\n0001DA2C:
    9D 80 05  sta IssuedSoundsList,x\r\nEndSpawnObject\r\n0001DA2F: A4 03     ldy
    $03\r\n0001DA31: 60        rts\r\n\r\nSpawnObjectYisFE\r\n0001DA32: A5 02    
    lda $02 ;object type\r\n0001DA34: 85 0C     sta $0C\r\n0001DA36: A2 10     ldx
    #$10\r\n-\r\n0001DA38: 20 16 F5  jsr FindObjectOfSelectedType\r\n0001DA3B: B0
    24     bcs +++ ; If the object was not found.\r\n0001DA3D: BD 20 04  lda ObjectFlags,x\r\n0001DA40:
    09 08     ora #$08\r\n0001DA42: 9D 20 04  sta ObjectFlags,x ;Set unknown flag\r\n0001DA45:
    A5 02     lda $02\r\n0001DA47: C9 1F     cmp #$1F\r\n0001DA49: F0 09     beq
    +\r\n0001DA4B: C9 09     cmp #$09\r\n0001DA4D: D0 0F     bne ++\r\n; ;Object
    type: 09\r\n0001DA4F: A9 40     lda #$40\r\n0001DA51: 9D 40 06  sta ObjectFireDelay,x\r\n+
    ;Object type: 1F\r\n0001DA54: A9 04     lda #$04\r\n0001DA56: 9D 80 06  sta ObjectYSpeed,x\r\n0001DA59:
    A9 00     lda #$00\r\n0001DA5B: 9D 60 06  sta ObjectYSpeedFraction,x\r\n++\r\n0001DA5E:
    E8        inx\r\n0001DA5F: D0 D7     bne -\r\n+++\r\n0001DA61: A4 03     ldy
    $03\r\n0001DA63: 60        rts\r\n\r\n\r\nSpawnObject_YisFF\r\n0001DA64: 8A       
    txa\r\n0001DA65: 48        pha\r\n0001DA66: A9 00     lda #$00\r\n0001DA68: 85
    8F     sta ZigZagFireStatus\r\n0001DA6A: A5 02     lda $02 ;object type\r\n0001DA6C:
    C9 2C     cmp #$2C\r\n0001DA6E: F0 16     beq ++\r\n0001DA70: 85 90     sta $90\r\n0001DA72:
    A2 01     ldx #$01\r\n0001DA74: C9 06     cmp #$06\r\n0001DA76: D0 06     bne
    +\r\n; ; \"WATCHERS\" MANAGER\r\n0001DA78: A2 7E     ldx #$7E\r\n0001DA7A: A9
    04     lda #$04\r\n0001DA7C: 85 8F     sta ZigZagFireStatus\r\n+ ; Probably,
    ZIGZAG FIRE\r\n0001DA7E: 86 91     stx $91\r\n0001DA80: 20 02 DB  jsr UpdateZigZagFire\r\n0001DA83:
    68        pla\r\n0001DA84: AA        tax\r\n0001DA85: 60        rts\r\n++ ; LIFT
    MANAGER\r\n0001DA86: A5 31     lda CurrentStage\r\n0001DA88: C9 05     cmp #$05\r\n0001DA8A:
    D0 06     bne +                                           ; $DA92\r\n0001DA8C:
    A0 02     ldy #$02 ; Gutsman stage. Eat three.\r\n0001DA8E: A2 00     ldx #$00\r\n0001DA90:
    F0 04     beq ++                                          ; $DA96\r\n+\r\n0001DA92:
    A2 15     ldx #$15 ; If it's not Gutsman stage.\r\n0001DA94: A0 00     ldy #$00\r\n++\r\n0001DA96:
    86 0C     stx $0C ; index into LiftData.\r\n0001DA98: 84 0D     sty $0D ; number
    of elements to read from that table.\r\n-\r\n0001DA9A: A9 2C     lda #$2C\r\n0001DA9C:
    20 63 F6  jsr CreateEnemy   ;create a lift.\r\n\r\n0001DA9F: A4 0C     ldy $0C\r\n0001DAA1:
    B9 EC DA  lda LiftData+6,y\r\n0001DAA4: 95 6B     sta Meters+1,x\r\n\r\n0001DAA6:
    A9 20     lda #$20    ; Make object invisible and non-collidable\r\n0001DAA8:
    9D 20 04  sta ObjectFlags,x\r\n0001DAAB: B9 E6 DA  lda LiftData+0,y\r\n0001DAAE:
    9D 80 04  sta ObjectPosX,x\r\n0001DAB1: B9 E7 DA  lda LiftData+1,y\r\n0001DAB4:
    9D 60 04  sta ObjectPosScreen,x\r\n0001DAB7: B9 E8 DA  lda LiftData+2,y\r\n0001DABA:
    9D 00 06  sta ObjectPosY,x\r\n0001DABD: B9 E9 DA  lda LiftData+3,y\r\n0001DAC0:
    9D 40 06  sta ObjectFireDelay,x\r\n0001DAC3: B9 EA DA  lda LiftData+4,y\r\n0001DAC6:
    9D 60 06  sta ObjectYSpeedFraction,x\r\n0001DAC9: B9 EB DA  lda LiftData+5,y\r\n0001DACC:
    9D C0 06  sta ObjectLifeMeter,x\r\n\r\n0001DACF: 98        tya\r\n0001DAD0: 18       
    clc\r\n0001DAD1: 69 07     adc #$07\r\n0001DAD3: 85 0C     sta $0C ;next lift
    pointer\r\n0001DAD5: A9 00     lda #$00 ;Make the lift move 1 pix/s to the right\r\n0001DAD7:
    9D E0 04  sta ObjectXSpeedFraction,x\r\n0001DADA: A9 01     lda #$01\r\n0001DADC:
    9D C0 04  sta ObjectXSpeed,x\r\n0001DADF: C6 0D     dec $0D ;number of lifts\r\n0001DAE1:
    10 B7     bpl -\r\n0001DAE3: 68        pla\r\n0001DAE4: AA        tax\r\n0001DAE5:
    60        rts\r\n\r\nLiftData: ; at DAE6. Contains 7-byte records.\r\n       
    ; Bytes:\r\n        ;  0=ObjectPosX\r\n        ;  1=ObjectPosScreen (screen number)\r\n       
    ;  2=ObjectPosY\r\n        ;  3=ObjectFireDelay (#$40 = moves left, #$00 = moves
    right)\r\n        ;  4=ObjectYSpeedFraction (?)\r\n        ;  5=ObjectLifeMeter
    (lift index)\r\n        ;  6=Meters+1 (huh?)\r\n    .byte $F0,$03,$47,$40,$00,$00,$00
    ; In Gutsman stages, these three are used at once.\r\n    .byte $88,$03,$87,$40,$00,$01,$00\r\n   
    .byte $20,$04,$C7,$40,$08,$02,$00\r\n    .byte $78,$1B,$87,$40,$00,$03,$00 ;
    Otherwise, this only will be used.\r\n\r\n\r\nUpdateZigZagFire\r\n0001DB02: C6
    91     dec $91\r\n0001DB04: F0 01     beq +\r\n0001DB06: 60        rts\r\n+\r\n0001DB07:
    A2 10     ldx #$10\r\n0001DB09: 20 76 C5  jsr FindFreeObject                             
    ; FindFreeObject\r\n0001DB0C: B0 44     bcs $0001DB52\r\n0001DB0E: A0 03    
    ldy #$03\r\n0001DB10: A5 90     lda $90\r\n0001DB12: 85 02     sta $02\r\n-\r\n0001DB14:
    D9 53 DB  cmp DB53_table,y\r\n0001DB17: F0 03     beq +                                          
    ; $DB1C\r\n0001DB19: 88        dey\r\n0001DB1A: 10 F8     bpl -                                          
    ; $DB14\r\n+\r\n0001DB1C: 98        tya\r\n0001DB1D: 0A        asl a\r\n0001DB1E:
    A8        tay\r\n0001DB1F: B9 57 DB  lda DB57_table+0,y\r\n0001DB22: 85 04    
    sta $04\r\n0001DB24: B9 58 DB  lda DB57_table+1,y\r\n0001DB27: 85 05     sta
    $05\r\n0001DB29: A4 8F     ldy ZigZagFireStatus\r\n0001DB2B: B1 04     lda ($04),y\r\n0001DB2D:
    85 91     sta $91\r\n0001DB2F: C8        iny\r\n0001DB30: B1 04     lda ($04),y\r\n0001DB32:
    85 00     sta $00\r\n0001DB34: C8        iny\r\n0001DB35: B1 04     lda ($04),y\r\n0001DB37:
    85 01     sta $01\r\n0001DB39: C8        iny\r\n0001DB3A: 84 8F     sty ZigZagFireStatus\r\n\r\n0001DB3C:
    18        clc\r\n0001DB3D: A5 1A     lda ScrollPosX\r\n0001DB3F: 65 00     adc
    $00\r\n0001DB41: 85 00     sta $00\r\n\r\n0001DB43: A5 1B     lda ScrollPosScreen\r\n0001DB45:
    69 00     adc #$00\r\n0001DB47: 85 05     sta $05\r\n0001DB49: 20 E0 D9  jsr
    $D9E0\r\n0001DB4C: A5 91     lda $91\r\n0001DB4E: D0 02     bne +                                          
    ; $DB52\r\n0001DB50: 85 8F     sta ZigZagFireStatus\r\n+\r\n0001DB52: 60       
    rts\r\n\r\n\r\nDB53_table: ; at DB53\r\n    .byte 0,9,6,14\r\nDB57_table: ; at
    DB57\r\n    .word LocDB5F\r\n    .word LocDB68\r\n    .word LocDB6A\r\n    .word
    LocDB80\r\nLoc_DB5F\r\n    .byte $31,$04,$4C\r\n    .byte $23,$04,$8C\r\n   
    .byte $00,$04,$5C\r\nLoc_DB68\r\n    .byte $02,$78\r\nLoc_DB6A\r\n    .byte $08,$00,$88\r\n   
    .byte $08,$02,$58,$08,$30,$A8,$E0,$30,$38,$08,$18,$C8\r\n    .byte $E0,$18,$50,$08,$00,$98,$E0\r\nLoc_DB80\r\n   
    .byte $1F,$B0,$04\r\n    .byte $1F,$B0,$04\r\n    .byte $1F,$B0,$04\r\n    .byte
    $00,$B0,$04\r\n\r\n;\r\n; Do boss AI?...\r\n;\r\nRunBossAI\r\n0001DB8C: A5 3E    
    lda BossCurrentStrategy\r\n;\r\n; 0 or 1: kill boss (?)\r\n; 2: close boss door,
    then call init\r\n; 3: pose (in BossAI_Begin)\r\n; 4: still something (BossAI_Begin)\r\n;
    5+: play!\r\n;\r\n0001DB8E: C9 02     cmp #$02\r\n0001DB90: B0 09     bcs +                                      
    ; $DB9B\r\n0001DB92: A9 00     lda #$00\r\n0001DB94: 8D C1 06  sta ObjectLifeMeter+1\r\n0001DB97:
    60        rts\r\n-\r\n0001DB98: 4C 21 DC  jmp BossAI_Begin\r\n+\r\n0001DB9B:
    D0 FB     bne -                                       ; $DB98\r\n\r\n0001DB9D:
    A5 31     lda CurrentStage\r\n0001DB9F: C5 AC     cmp FightingBossNum\r\n0001DBA1:
    D0 0C     bne ++                                      ; $DBAF\r\n0001DBA3: A5
    3C     lda MiscCounter1\r\n0001DBA5: F0 08     beq ++                                     
    ; $DBAF\r\n0001DBA7: C6 3C     dec MiscCounter1\r\n0001DBA9: D0 03     bne +                                      
    ; $DBAE\r\n0001DBAB: 20 92 D0  jsr CloseBossDoor\r\n+\r\n0001DBAE: 60       
    rts\r\n++\r\n; Not native boss battle, or boss door closed.\r\n0001DBAF: A5 AC    
    lda FightingBossNum\r\n0001DBB1: C9 06     cmp #$06\r\n0001DBB3: 90 0F     bcc
    $0001DBC4\r\n0001DBB5: F0 0A     beq $0001DBC1\r\n0001DBB7: C9 08     cmp #$08\r\n0001DBB9:
    90 03     bcc $0001DBBE\r\n; Boss 8 or 9\r\n0001DBBB: 4C 05 F1  jmp Boss8and9init\r\n;
    Boss 7 (Rockman clone)\r\n0001DBBE: 4C 57 EF  jmp Boss7Init\r\n; Boss 6 (Statue)\r\n0001DBC1:
    4C 94 F0  jmp Boss6Init\r\n; Bosses 0-5\r\n0001DBC4: A2 00     ldx #$00\r\n0001DBC6:
    86 2F     stx RefObjectNumber\r\n0001DBC8: 86 43     stx BossVariable43\r\n0001DBCA:
    86 44     stx BossVariable44\r\n0001DBCC: E8        inx\r\n0001DBCD: A0 C4    
    ldy #$C4\r\n0001DBCF: 20 33 F5  jsr InitObjectDefaultSpeed\r\n0001DBD2: 20 7B
    F6  jsr InitActor\r\n0001DBD5: CA        dex\r\n0001DBD6: 8E C1 06  stx ObjectLifeMeter+1\r\n0001DBD9:
    A6 AC     ldx FightingBossNum\r\n0001DBDB: BD 91 ED  lda BossInitialStatus,x\r\n0001DBDE:
    8D 01 04  sta ObjectSpriteNum+1\r\n0001DBE1: BD 9A ED  lda BossInitialXcoord,x\r\n0001DBE4:
    8D 81 04  sta ObjectPosX+1\r\n0001DBE7: BD A3 ED  lda BossInitialYcoord,x\r\n0001DBEA:
    8D 01 06  sta ObjectPosY+1\r\n0001DBED: A9 17     lda #$17\r\n0001DBEF: 8D 21
    04  sta ObjectFlags+1\r\n0001DBF2: EE 41 04  inc ObjectUnknown440+1\r\n0001DBF5:
    E6 3E     inc BossCurrentStrategy\r\n0001DBF7: A9 5E     lda #$5E\r\n0001DBF9:
    85 3F     sta BossVariable3F\r\n0001DBFB: E6 2F     inc RefObjectNumber\r\n0001DBFD:
    20 3D C5  jsr C53D_routine\r\n0001DC00: A5 AC     lda FightingBossNum\r\n0001DC02:
    D0 05     bne +\r\n0001DC04: A9 26     lda #$26        ; Issue \"Cutman sound\"
    for boss 0\r\n0001DC06: 20 77 C4  jsr IssueSound                                 
    ; $C477\r\n+\r\n0001DC09: C5 31     cmp CurrentStage ; Is this the boss's natural
    battle?\r\n0001DC0B: F0 13     beq +\r\n; No, it's a rematch\r\n0001DC0D: A5
    31     lda CurrentStage\r\n0001DC0F: C9 07     cmp #$07\r\n0001DC11: D0 0D    
    bne +\r\n; So it's in Wily2, not Wily4. Move the boss to the screen left side.\r\n0001DC13:
    A9 40     lda #$40\r\n0001DC15: 8D 81 04  sta ObjectPosX+1\r\n0001DC18: AD 21
    04  lda ObjectFlags+1\r\n0001DC1B: 09 40     ora #$40\r\n0001DC1D: 8D 21 04 
    sta ObjectFlags+1\r\n+\r\n0001DC20: 60        rts\r\n\r\n\r\nBossAI_Begin\r\n;
    A = BossCurrentStrategy (5-n = actual boss strategies)\r\n0001DC21: C9 03    
    cmp #$03\r\n0001DC23: D0 3A     bne +++\r\n; Pose\r\n0001DC25: A5 AC     lda
    FightingBossNum \r\n0001DC27: C9 02     cmp #$02\r\n0001DC29: D0 21     bne ++              
    ;DC4C\r\n0001DC2B: AD 41 04  lda ObjectUnknown440+1 ;bombman only\r\n0001DC2E:
    C9 3C     cmp #$3C\r\n0001DC30: D0 11     bne +\r\n0001DC32: A9 0C      lda #$0C\r\n0001DC34:
    20 17 EE   jsr Boss_FindAmmoSlot ;Bombman poses with a bomb.\r\n0001DC37: A9
    30      lda #$30\r\n0001DC39: 9D 60 06   sta ObjectYSpeedFraction,x\r\n0001DC3C:
    A9 03      lda #$03\r\n0001DC3E: 9D 80 06   sta ObjectYSpeed,x\r\n0001DC41: E6
    44      inc BossVariable44\r\n+\r\n0001DC43: A5 3F     lda BossVariable3F\r\n0001DC45:
    C9 3A     cmp #$3A\r\n0001DC47: B0 03     bcs ++                                         
    ; $DC4C\r\n0001DC49: 20 9B F3  jsr IncObjectLifeMeter                           
    ; $F39B\r\n++\r\n; Not bombman, or bombman's pose done\r\n0001DC4C: C6 3F    
    dec BossVariable3F\r\n0001DC4E: AD 41 04  lda ObjectUnknown440+1\r\n0001DC51:
    D0 0B     bne +                                           ; $DC5E\r\n; Done pose\r\n0001DC53:
    E6 3E     inc BossCurrentStrategy\r\n0001DC55: A5 AC     lda FightingBossNum\r\n0001DC57:
    C9 06     cmp #$06\r\n0001DC59: B0 03     bcs +                                          
    ; $DC5E\r\n0001DC5B: CE 01 04  dec ObjectSpriteNum+1\r\n+\r\n0001DC5E: 60       
    rts\r\n+++\r\n0001DC5F: A5 3E     lda BossCurrentStrategy\r\n0001DC61: C9 04    
    cmp #$04\r\n0001DC63: D0 0A     bne ++                                      ;
    $DC6F\r\n0001DC65: 20 9B F3  jsr IncObjectLifeMeter                        ;
    $F39B\r\n0001DC68: C6 3F     dec BossVariable3F\r\n0001DC6A: D0 02     bne +                                      
    ; $DC6E\r\n0001DC6C: E6 3E     inc BossCurrentStrategy\r\n+\r\n0001DC6E: 60       
    rts\r\n++\r\n0001DC6F: A9 00     lda #$00\r\n0001DC71: 85 68     sta ForcedInputFlag  
    ; Let the player start playing!\r\n0001DC73: 38        sec\r\n0001DC74: A5 3E    
    lda BossCurrentStrategy\r\n0001DC76: E9 05     sbc #$05\r\n0001DC78: 0A       
    asl a\r\n0001DC79: A8        tay\r\n0001DC7A: A5 AC     lda FightingBossNum\r\n0001DC7C:
    0A        asl a\r\n0001DC7D: AA        tax\r\n0001DC7E: BD AC ED  lda BossAI_Table+0,x\r\n0001DC81:
    85 00     sta $00\r\n0001DC83: BD AD ED  lda BossAI_Table+1,x\r\n0001DC86: 85
    01     sta $01\r\n0001DC88: 6C 00 00  jmp ($0000)\r\n\r\nBossAI_Cutman:\r\n0001DC8B:
    A5 56     lda BossBlinkState\r\n0001DC8D: F0 06     beq +\r\n0001DC8F: C9 1F    
    cmp #$1F\r\n0001DC91: 90 02     bcc +\r\n0001DC93: A0 28     ldy #$28\r\n+\r\n0001DC95:
    B9 C0 DF  lda CutmanStrategies+0,y\r\n0001DC98: 48        pha\r\n0001DC99: B9
    C1 DF  lda CutmanStrategies+1,y\r\n0001DC9C: 48        pha\r\n0001DC9D: A5 44    
    lda BossVariable44\r\n0001DC9F: D0 03     bne +\r\n0001DCA1: 4C 55 DD  jmp CutmanGotoStrategy\r\n+\r\n0001DCA4:
    A9 12     lda #$12\r\n0001DCA6: 8D 41 06  sta ObjectFireDelay+1\r\n0001DCA9:
    A9 45     lda #$45\r\n0001DCAB: A2 04     ldx #$04\r\n0001DCAD: 20 86 C5  jsr
    FindLastObjectOfType\r\n0001DCB0: A5 44     lda BossVariable44\r\n0001DCB2: C9
    02     cmp #$02\r\n0001DCB4: F0 41     beq CutmanCutterReturning\r\n\r\nCutmanCutterGoingOut\r\n0001DCB6:
    BD 00 06  lda ObjectPosY,x\r\n0001DCB9: C9 18     cmp #$18\r\n0001DCBB: 90 12    
    bcc CutmanCutterFlipDirection\r\n0001DCBD: C9 D8     cmp #$D8\r\n0001DCBF: B0
    0E     bcs CutmanCutterFlipDirection\r\n0001DCC1: BD 80 04  lda ObjectPosX,x\r\n0001DCC4:
    C9 18     cmp #$18\r\n0001DCC6: 90 07     bcc CutmanCutterFlipDirection\r\n0001DCC8:
    C9 E8     cmp #$E8\r\n0001DCCA: B0 03     bcs CutmanCutterFlipDirection\r\n0001DCCC:
    4C 55 DD  jmp CutmanGotoStrategy\r\n\r\nCutmanCutterFlipDirection\r\n0001DCCF:
    E6 44     inc BossVariable44\r\n; Flip object's direction\r\n0001DCD1: BD 20
    04  lda ObjectFlags,x\r\n0001DCD4: 49 40     eor #$40\r\n0001DCD6: 9D 20 04 
    sta ObjectFlags,x\r\n\r\n0001DCD9: BD 80 06  lda ObjectYSpeed,x\r\n0001DCDC:
    49 FF     eor #$FF\r\n0001DCDE: 9D 80 06  sta ObjectYSpeed,x\r\n0001DCE1: BD
    60 06  lda ObjectYSpeedFraction,x \r\n0001DCE4: 49 FF     eor #$FF                  
    ;  value = -value\r\n0001DCE6: 18        clc\r\n0001DCE7: 69 01     adc #$01\r\n0001DCE9:
    9D 60 06  sta ObjectYSpeedFraction,x ; negated now\r\n0001DCEC: A9 60     lda
    #$60\r\n0001DCEE: 85 48     sta $48\r\n0001DCF0: A9 02     lda #$02\r\n0001DCF2:
    85 49     sta $49\r\n0001DCF4: 4C 55 DD  jmp CutmanGotoStrategy\r\n\r\nCutmanCutterReturning\r\n0001DCF7:
    A5 23     lda FrameCounter\r\n0001DCF9: 29 03     and #$03\r\n0001DCFB: D0 58    
    bne CutmanGotoStrategy\r\n0001DCFD: BD 20 04  lda ObjectFlags,x\r\n0001DD00:
    29 BF     and #$BF            ;clears #$40\r\n0001DD02: 9D 20 04  sta ObjectFlags,x\r\n0001DD05:
    38        sec\r\n\r\n\r\n0001DD06: AD 81 04  lda ObjectPosX+1           ; Compare
    to Cutman's X location\r\n0001DD09: FD 80 04  sbc ObjectPosX,x\r\n0001DD0C: 90
    0C     bcc +                                           ; $DD1A\r\n0001DD0E: 85
    02     sta $02\r\n\r\n; Turn object\r\n0001DD10: BD 20 04  lda ObjectFlags,x\r\n0001DD13:
    09 40     ora #$40            ;sets #$40\r\n0001DD15: 9D 20 04  sta ObjectFlags,x\r\n\r\n0001DD18:
    D0 06     bne ++                                          ; $DD20\r\n+\r\n0001DD1A:
    49 FF     eor #$FF\r\n0001DD1C: 69 01     adc #$01\r\n0001DD1E: 85 02     sta
    $02      ;Distance of cutter from boss\r\n++\r\n0001DD20: 18        clc\r\n0001DD21:
    A5 48     lda $48      ;This was #$60, right?\r\n0001DD23: 69 04     adc #$04\r\n0001DD25:
    85 48     sta $48\r\n0001DD27: 85 00     sta $00      ;New value for XSpeedFraction\r\n0001DD29:
    A5 49     lda $49      ;This was #$02, right?\r\n0001DD2B: 69 00     adc #$00\r\n0001DD2D:
    85 49     sta $49\r\n0001DD2F: 85 01     sta $01      ;New value for XSpeed\r\n\r\n0001DD31:
    38        sec\r\n0001DD32: BD 00 06  lda ObjectPosY,x\r\n0001DD35: ED 01 06 
    sbc ObjectPosY+1\r\n0001DD38: 85 03     sta $03      ;Compare to Cutman's Y location\r\n0001DD3A:
    20 C6 F8  jsr F8C6_routine\r\n0001DD3D: A5 03     lda $03\r\n0001DD3F: C9 08    
    cmp #$08     ;If it's Y-wise farther than 8 pixels, let it live\r\n0001DD41:
    B0 12     bcs CutmanGotoStrategy\r\n0001DD43: A5 02     lda $02\r\n0001DD45:
    C9 08     cmp #$08     ;If it's X-wise farther than 8 pixels, let it live\r\n0001DD47:
    B0 0C     bcs CutmanGotoStrategy\r\n0001DD49: A9 F8     lda #$F8     ;The cutter
    reached Cutman's hand. Instant-kill it.\r\n0001DD4B: 9D 00 06  sta ObjectPosY,x\r\n0001DD4E:
    A9 00     lda #$00\r\n0001DD50: 85 44     sta BossVariable44          ;Scissor
    be gone.\r\n0001DD52: 8D 41 06  sta ObjectFireDelay+1\r\n\r\nCutmanGotoStrategy\r\n0001DD55:
    68        pla\r\n0001DD56: 85 05     sta $05\r\n0001DD58: 68        pla\r\n0001DD59:
    85 04     sta $04\r\n0001DD5B: AD A1 06  lda ObjectLifeCycleCounter+1\r\n0001DD5E:
    F0 01     beq +                                           ; $DD61\r\n0001DD60:
    60        rts\r\n+\r\n0001DD61: 6C 04 00  jmp ($0004)\r\n\r\nCutmanStrategyDefault\r\n0001DD64:
    A2 06     ldx #$06\r\n0001DD66: 20 D5 ED  jsr BossSearchMegaman\r\n0001DD69:
    C9 40     cmp #$40\r\n0001DD6B: B0 12     bcs +                                          
    ; $DD7F\r\n0001DD6D: E8        inx\r\n0001DD6E: AD 01 06  lda ObjectPosY+1\r\n0001DD71:
    CD 00 06  cmp ObjectPosY+0                                ; ObjectPosY+0\r\n0001DD74:
    F0 09     beq +                                           ; $DD7F\r\n0001DD76:
    AD 00 04  lda ObjectSpriteNum+0                           ; ObjectSpriteNum+0\r\n0001DD79:
    C9 09     cmp #$09\r\n0001DD7B: F0 02     beq +                                          
    ; $DD7F\r\n0001DD7D: A2 18     ldx #$18\r\n+\r\n0001DD7F: 86 3E     stx BossCurrentStrategy\r\n0001DD81:
    60        rts\r\n\r\n\r\nCutmanStrategyWalkTowardsMegaman\r\n0001DD82: 20 C2
    ED  jsr BossFuncEDC2\r\n0001DD85: A9 3F     lda #$3F\r\n0001DD87: CD 01 04  cmp
    ObjectSpriteNum+1\r\n0001DD8A: F0 1E     beq +\r\n0001DD8C: 8D 01 04  sta ObjectSpriteNum+1\r\n0001DD8F:
    A9 00     lda #$00\r\n0001DD91: 8D 41 04  sta ObjectUnknown440+1\r\n0001DD94:
    8D 41 06  sta ObjectFireDelay+1\r\n0001DD97: A9 20     lda #$20\r\n0001DD99:
    8D E1 04  sta ObjectXSpeedFraction+1\r\n0001DD9C: A9 01     lda #$01\r\n0001DD9E:
    8D C1 04  sta ObjectXSpeed+1\r\n0001DDA1: A5 44     lda BossVariable44\r\n0001DDA3:
    F0 05     beq +\r\n0001DDA5: A9 11     lda #$11\r\n0001DDA7: 8D 41 06  sta ObjectFireDelay+1\r\n+\r\n0001DDAA:
    20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001DDAD: A5 2A     lda $2A\r\n0001DDAF:
    D0 03     bne +\r\n0001DDB1: 4C 64 DD  jmp CutmanStrategyDefault\r\n+\r\n0001DDB4:
    A9 07     lda #$07\r\n0001DDB6: 85 3E     sta BossCurrentStrategy\r\n0001DDB8:
    60        rts\r\n\r\n\r\nCutmanStrategy2\r\n0001DDB9: 20 C2 ED  jsr BossFuncEDC2\r\n0001DDBC:
    A9 41     lda #$41\r\n0001DDBE: 8D 01 04  sta ObjectSpriteNum+1\r\n0001DDC1:
    A9 00     lda #$00\r\n0001DDC3: 8D 41 06  sta ObjectFireDelay+1\r\n0001DDC6:
    8D 41 04  sta ObjectUnknown440+1\r\n0001DDC9: A5 44     lda BossVariable44\r\n0001DDCB:
    F0 05     beq $0001DDD2\r\n0001DDCD: A9 1F     lda #$1F\r\n0001DDCF: 8D 41 06 
    sta ObjectFireDelay+1\r\n0001DDD2: A9 06     lda #$06\r\n0001DDD4: 20 A0 C5 
    jsr RandomFunc\r\n0001DDD7: A0 02     ldy #$02\r\n0001DDD9: 4A        lsr a\r\n0001DDDA:
    B0 05     bcs +\r\n0001DDDC: 88        dey\r\n0001DDDD: 4A        lsr a\r\n0001DDDE:
    90 01     bcc +\r\n0001DDE0: 88        dey\r\n+\r\n0001DDE1: B9 EA DF  lda DFEA_table,y 
    ;8,9,12\r\n0001DDE4: 85 3E     sta BossCurrentStrategy\r\n0001DDE6: A9 06    
    lda #$06\r\n0001DDE8: 8D 81 06  sta ObjectYSpeed+1\r\n0001DDEB: A9 40     lda
    #$40\r\n0001DDED: 8D 61 06  sta ObjectYSpeedFraction+1\r\n0001DDF0: 20 D5 ED 
    jsr BossSearchMegaman\r\n0001DDF3: 18        clc\r\n0001DDF4: 79 ED DF  adc DFED_table,y\r\n0001DDF7:
    10 05     bpl $0001DDFE\r\n0001DDF9: 49 FF     eor #$FF\r\n0001DDFB: 18       
    clc\r\n0001DDFC: 69 01     adc #$01\r\n0001DDFE: AA        tax\r\n0001DDFF: A9
    32     lda #$32\r\n0001DE01: A0 00     ldy #$00\r\n0001DE03: 20 AC C5  jsr EnemyCalculateJumpCurveToHitMegaman\r\n0001DE06:
    A5 04     lda $04\r\n0001DE08: 8D E1 04  sta ObjectXSpeedFraction+1\r\n0001DE0B:
    A5 05     lda $05\r\n0001DE0D: 8D C1 04  sta ObjectXSpeed+1\r\n0001DE10: 60       
    rts\r\n\r\n\r\nCutmanStrategy3\r\n0001DE11: 20 90 DE  jsr $DE90\r\n0001DE14:
    A2 0E     ldx #$0E\r\n0001DE16: 29 01     and #$01\r\n0001DE18: D0 0A     bne
    $0001DE24\r\n0001DE1A: A5 44     lda BossVariable44\r\n0001DE1C: D0 06     bne
    $0001DE24\r\n0001DE1E: A2 10     ldx #$10\r\n0001DE20: A9 08     lda #$08\r\n0001DE22:
    85 3F     sta BossVariable3F\r\n0001DE24: 86 3E     stx BossCurrentStrategy\r\n0001DE26:
    60        rts\r\n\r\n\r\nCutmanStrategy4\r\n0001DE27: 20 90 DE  jsr $DE90\r\n0001DE2A:
    E6 3E     inc BossCurrentStrategy\r\n0001DE2C: 29 01     and #$01\r\n0001DE2E:
    D0 0C     bne +\r\n0001DE30: A5 44     lda BossVariable44\r\n0001DE32: D0 08    
    bne +\r\n0001DE34: A9 12     lda #$12\r\n0001DE36: 85 3E     sta BossCurrentStrategy\r\n0001DE38:
    A9 12     lda #$12\r\n0001DE3A: 85 3F     sta BossVariable3F\r\n+\r\n0001DE3C:
    60        rts\r\n\r\n\r\n\r\nCutmanStrategyConsiderJumpingPeacefully\r\n0001DE3D:
    20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001DE40: F0 37     beq ++\r\n0001DE42:
    E6 3E     inc BossCurrentStrategy\r\n0001DE44: 20 D5 ED  jsr BossSearchMegaman\r\n0001DE47:
    C9 0E     cmp #$0E\r\n0001DE49: 90 05     bcc +\r\n0001DE4B: A9 05     lda #$05\r\n0001DE4D:
    85 3E     sta BossCurrentStrategy\r\n0001DE4F: 60        rts\r\n+\r\n0001DE50:
    A9 03     lda #$03\r\n0001DE52: 20 A0 C5  jsr RandomFunc\r\n0001DE55: 29 01    
    and #$01\r\n0001DE57: F0 0C     beq +\r\n0001DE59: A5 44     lda BossVariable44\r\n0001DE5B:
    D0 08     bne +\r\n0001DE5D: A9 14     lda #$14\r\n0001DE5F: 85 3E     sta BossCurrentStrategy\r\n0001DE61:
    A9 12     lda #$12\r\n0001DE63: 85 3F     sta BossVariable3F\r\n+\r\n0001DE65:
    A9 E0     lda #$-20 ;negative integer\r\n0001DE67: 8D 61 06  sta ObjectYSpeedFraction+1\r\n0001DE6A:
    A9 04     lda #$04\r\n0001DE6C: 8D 81 06  sta ObjectYSpeed+1\r\n0001DE6F: A9
    C0     lda #$C0\r\n0001DE71: 8D E1 04  sta ObjectXSpeedFraction+1\r\n0001DE74:
    A9 00     lda #$00\r\n0001DE76: 8D C1 04  sta ObjectXSpeed+1\r\n++\r\n0001DE79:
    60        rts\r\n\r\n\r\nCutmanStrategy7\r\n0001DE7A: 20 90 DE  jsr ++\r\n0001DE7D:
    A2 0D     ldx #$0D\r\n0001DE7F: 29 01     and #$01\r\n0001DE81: D0 0A     bne
    +\r\n0001DE83: A5 44     lda BossVariable44\r\n0001DE85: D0 06     bne +\r\n0001DE87:
    A2 16     ldx #$16\r\n0001DE89: A9 15     lda #$15\r\n0001DE8B: 85 3F     sta
    BossVariable3F\r\n+\r\n0001DE8D: 86 3E     stx BossCurrentStrategy\r\n0001DE8F:
    60        rts\r\n++\r\n0001DE90: 20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001DE93:
    A9 03     lda #$03\r\n0001DE95: 20 A0 C5  jsr RandomFunc\r\n0001DE98: 60       
    rts\r\n\r\n\r\n\r\nCutmanStrategy6\r\n0001DE99: 20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001DE9C:
    F0 04     beq $0001DEA2\r\n0001DE9E: A9 05     lda #$05\r\n0001DEA0: 85 3E    
    sta BossCurrentStrategy\r\n0001DEA2: 60        rts\r\n\r\n\r\n\r\nCutmanStrategy8\r\n0001DEA3:
    20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001DEA6: F0 08     beq +\r\n0001DEA8:
    A5 46     lda RandomSeed\r\n0001DEAA: 29 01     and #$01\r\n0001DEAC: D0 F0    
    bne $0001DE9E\r\n0001DEAE: E6 3E     inc BossCurrentStrategy\r\n+\r\n0001DEB0:
    60        rts\r\n\r\n\r\n\r\nCutmanStrategyPeacefulJump\r\n0001DEB1: 20 F8 ED 
    jsr BossFuncWalkTowardsMegaman\r\n0001DEB4: F0 2A     beq ++\r\n0001DEB6: A5
    44     lda BossVariable44\r\n0001DEB8: D0 2F     bne $0001DEE9\r\n0001DEBA: AD
    01 06  lda ObjectPosY+1\r\n0001DEBD: CD 00 06  cmp ObjectPosY+0                                
    ; ObjectPosY+0\r\n0001DEC0: F0 0C     beq +\r\n0001DEC2: AD 00 04  lda ObjectSpriteNum+0                           
    ; ObjectSpriteNum+0\r\n0001DEC5: C9 09     cmp #$09\r\n0001DEC7: F0 05     beq
    +\r\n0001DEC9: A9 18     lda #$18\r\n0001DECB: 85 3E     sta BossCurrentStrategy\r\n0001DECD:
    60        rts\r\n+\r\n0001DECE: A9 43     lda #$43\r\n0001DED0: 8D 01 04  sta
    ObjectSpriteNum+1\r\n0001DED3: A9 00     lda #$00\r\n0001DED5: 8D E1 04  sta
    ObjectXSpeedFraction+1\r\n0001DED8: 8D C1 04  sta ObjectXSpeed+1\r\n0001DEDB:
    8D 41 06  sta ObjectFireDelay+1\r\n0001DEDE: E6 3E     inc BossCurrentStrategy\r\n++\r\n0001DEE0:
    60        rts\r\n\r\n\r\nCutmanStrategyThrowWhileStanding\r\n0001DEE1: 20 F8
    ED  jsr BossFuncWalkTowardsMegaman\r\n0001DEE4: AD 41 04  lda ObjectUnknown440+1\r\n0001DEE7:
    D0 05     bne +\r\n0001DEE9: A9 05     lda #$05\r\n0001DEEB: 85 3E     sta BossCurrentStrategy\r\n0001DEED:
    60        rts\r\n+\r\n0001DEEE: C9 10     cmp #$10\r\n0001DEF0: D0 05     bne
    $0001DEF7\r\n0001DEF2: A9 06     lda #$06\r\n0001DEF4: 20 8F DF  jsr CutmanThrowScissor\r\n0001DEF7:
    60        rts\r\n\r\n\r\n\r\nCutmanStrategyJumpThenThrowAfterDelay\r\n0001DEF8:
    20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001DEFB: C6 3F     dec BossVariable3F\r\n0001DEFD:
    D0 0F     bne +\r\n0001DEFF: A9 43     lda #$43\r\n0001DF01: 8D 01 04  sta ObjectSpriteNum+1\r\n0001DF04:
    A9 00     lda #$00\r\n0001DF06: 8D 41 04  sta ObjectUnknown440+1\r\n0001DF09:
    8D 41 06  sta ObjectFireDelay+1\r\n0001DF0C: E6 3E     inc BossCurrentStrategy\r\n+\r\n0001DF0E:
    60        rts\r\n\r\n\r\nCutmanStrategyThrowWhileJumping\r\n0001DF0F: AD 41 04 
    lda ObjectUnknown440+1\r\n0001DF12: D0 07     bne $0001DF1B\r\n0001DF14: A9 41    
    lda #$41\r\n0001DF16: 8D 01 04  sta ObjectSpriteNum+1\r\n0001DF19: D0 07    
    bne $0001DF22\r\n0001DF1B: C9 10     cmp #$10\r\n0001DF1D: D0 03     bne $0001DF22\r\n0001DF1F:
    20 8F DF  jsr CutmanThrowScissor\r\n0001DF22: 20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001DF25:
    F0 1F     beq $0001DF46\r\n0001DF27: AD 01 06  lda ObjectPosY+1\r\n0001DF2A:
    CD 00 06  cmp ObjectPosY+0                                 ; ObjectPosY+0\r\n0001DF2D:
    F0 0C     beq $0001DF3B\r\n0001DF2F: AD 00 04  lda ObjectSpriteNum+0                           
    ; ObjectSpriteNum+0\r\n0001DF32: C9 09     cmp #$09\r\n0001DF34: F0 05     beq
    $0001DF3B\r\n0001DF36: A9 18     lda #$18\r\n0001DF38: 85 3E     sta BossCurrentStrategy\r\n0001DF3A:
    60        rts\r\n\r\n\r\n\r\n0001DF3B: A5 3E     lda BossCurrentStrategy\r\n0001DF3D:
    29 07     and #$07\r\n0001DF3F: 4A        lsr a\r\n0001DF40: AA        tax\r\n0001DF41:
    BD 47 DF  lda DF47_table,x\r\n0001DF44: 85 3E     sta BossCurrentStrategy\r\n0001DF46:
    60        rts\r\n\r\n\r\nDF47_table: ; at $DF47\r\n    .byte $0E, $0A, $05, $05\r\n\r\nCutmanStrategeStandMakeNoise\r\n0001DF4B:
    A9 46     lda #$46\r\n0001DF4D: CD 01 04  cmp ObjectSpriteNum+1\r\n0001DF50:
    F0 17     beq $0001DF69\r\n0001DF52: 8D 01 04  sta ObjectSpriteNum+1\r\n0001DF55:
    A9 3F     lda #$3F\r\n0001DF57: 85 3F     sta BossVariable3F\r\n0001DF59: A9
    00     lda #$00\r\n0001DF5B: 8D 41 04  sta ObjectUnknown440+1\r\n0001DF5E: 8D
    E1 04  sta ObjectXSpeedFraction+1\r\n0001DF61: 8D C1 04  sta ObjectXSpeed+1\r\n\r\n0001DF64:
    A9 26     lda #$26        ; Door???\r\n0001DF66: 20 77 C4  jsr IssueSound                                 
    ; $C477\r\n\r\n0001DF69: 20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001DF6C:
    AD 01 06  lda ObjectPosY+1\r\n0001DF6F: CD 00 06  cmp ObjectPosY+0                                
    ; ObjectPosY+0\r\n0001DF72: D0 07     bne $0001DF7B\r\n0001DF74: AD 00 04  lda
    ObjectSpriteNum+0                            ; ObjectSpriteNum+0\r\n0001DF77:
    C9 09     cmp #$09\r\n0001DF79: D0 08     bne $0001DF83\r\n0001DF7B: A5 3F    
    lda BossVariable3F\r\n0001DF7D: F0 04     beq $0001DF83\r\n0001DF7F: C6 3F    
    dec BossVariable3F\r\n0001DF81: D0 0B     bne $0001DF8E\r\n0001DF83: A5 44    
    lda BossVariable44\r\n0001DF85: D0 07     bne $0001DF8E\r\n0001DF87: A2 0E    
    ldx #$0E\r\n0001DF89: 86 3E     stx BossCurrentStrategy\r\n0001DF8B: 4C CE DE 
    jmp $DECE\r\n0001DF8E: 60        rts\r\n\r\n\r\nCutmanThrowScissor\r\n0001DF8F:
    A9 06     lda #$06\r\n0001DF91: 20 17 EE  jsr Boss_FindAmmoSlot\r\n0001DF94:
    B0 23     bcs +\r\n0001DF96: 20 D5 ED  jsr BossSearchMegaman\r\n0001DF99: 85
    02     sta $02\r\n0001DF9B: A9 02     lda #$02\r\n0001DF9D: 85 01     sta $01\r\n0001DF9F:
    A9 60     lda #$60\r\n0001DFA1: 85 00     sta $00\r\n0001DFA3: 38        sec\r\n0001DFA4:
    AD 01 06  lda ObjectPosY+1\r\n0001DFA7: E9 0A     sbc #$0A\r\n0001DFA9: 38       
    sec\r\n0001DFAA: ED 00 06  sbc ObjectPosY+0                                 ;
    ObjectPosY+0\r\n0001DFAD: 85 03     sta $03\r\n0001DFAF: 20 C6 F8  jsr F8C6_routine\r\n0001DFB2:
    E6 44     inc BossVariable44 ;scissor exists\r\n\r\n0001DFB4: A9 25     lda #$25       
    ; scissor machine sound\r\n0001DFB6: 20 77 C4  jsr IssueSound                                 
    ; $C477\r\n+\r\n0001DFB9: 60        rts\r\n\r\nCutmanStrategy20\r\n0001DFBA:
    A9 57     lda #$57\r\n0001DFBC: 20 16 EF  jsr BossFuncEF16\r\n0001DFBF: 60       
    rts\r\n\r\nCutmanStrategies: ; at DFC0\r\n    .word CutmanStrategyDefault                 
    ;5 = default\r\n    .word CutmanStrategyWalkTowardsMegaman       ;6 = walk towards
    Megaman, when close goto phase 7\r\n    .word CutmanStrategy2                       
    ;7 = may lead to phase 13 or phase 22\r\n    .word CutmanStrategy3                       
    ;8\r\n    .word CutmanStrategy4                        ;9 \r\n    .word CutmanStrategyConsiderJumpingPeacefully
    ;10 = may lead to phase 14\r\n    .word CutmanStrategy6                       
    ;11\r\n    .word CutmanStrategy7                        ;12 = jump phase 2?\r\n   
    .word CutmanStrategy8                        ;13 = jump phase 3 A ? jump again,
    towards megaman \r\n    .word CutmanStrategyPeacefulJump             ;14 = jump
    phase 3 D ? jump straight up, don't throw scissor\r\n    .word CutmanStrategyThrowWhileStanding      
    ;15 = throw scissor \r\n    .word CutmanStrategyJumpThenThrowAfterDelay  ;16\r\n   
    .word CutmanStrategyThrowWhileJumping        ;17 = throw scissor while jump\r\n   
    .word CutmanStrategyJumpThenThrowAfterDelay  ;18 = jump towards megaman, throw
    scissor\r\n    .word CutmanStrategyThrowWhileJumping        ;19 = throw scissor
    while jumping?\r\n    .word CutmanStrategyJumpThenThrowAfterDelay  ;20\r\n   
    .word CutmanStrategyThrowWhileJumping        ;21\r\n    .word CutmanStrategyJumpThenThrowAfterDelay 
    ;22 = jump phase 3 B ? jump, throw scissor at some time\r\n    .word CutmanStrategyThrowWhileJumping       
    ;23 = throw scissor while jumping?\r\n    .word CutmanStrategeStandMakeNoise          
    ;24 = make scissor noise and stand still\r\n    .word CutmanStrategy20    ;25\r\n\r\nDFEA_table:\r\n   
    .byte 8,9,12\r\nDFED_table:\r\n    .byte $E0,$00,$20\r\n\r\nBossAI_Bombman:\r\n0001DFF0:
    AD A1 06  lda ObjectLifeCycleCounter+1\r\n0001DFF3: F0 01     beq +\r\n0001DFF5:
    60        rts\r\n+\r\n0001DFF6: B9 ED E0  lda BombmanStrategies+0,y\r\n0001DFF9:
    85 04     sta $04\r\n0001DFFB: B9 EE E0  lda BombmanStrategies+1,y\r\n0001DFFE:
    85 05     sta $05\r\n0001E000: 6C 04 00  jmp ($0004)\r\n\r\n\r\nBombmanStrategyDefault\r\n0001E003:
    20 C2 ED  jsr BossFuncEDC2\r\n0001E006: A9 00     lda #$00\r\n0001E008: 8D 41
    04  sta ObjectUnknown440+1\r\n0001E00B: 8D 41 06  sta ObjectFireDelay+1\r\n0001E00E:
    A2 00     ldx #$00\r\n0001E010: A5 46     lda RandomSeed\r\n0001E012: 29 01    
    and #$01\r\n0001E014: F0 01     beq +\r\n0001E016: E8    inx\r\n+\r\n0001E017:
    BD 3B E0  lda E03B_table,x\r\n0001E01A: 85 3E     sta BossCurrentStrategy\r\n0001E01C:
    BD 3E E0  lda E03E_table,x\r\n0001E01F: 8D 01 04  sta ObjectSpriteNum+1\r\n0001E022:
    BD 41 E0  lda E041_table,x\r\n0001E025: 8D E1 04  sta ObjectXSpeedFraction+1\r\n0001E028:
    BD 44 E0  lda E044_table,x\r\n0001E02B: 8D C1 04  sta ObjectXSpeed+1\r\n0001E02E:
    BD 47 E0  lda E047_table,x\r\n0001E031: 8D 61 06  sta ObjectYSpeedFraction+1\r\n0001E034:
    BD 4A E0  lda E04A_table,x\r\n0001E037: 8D 81 06  sta ObjectYSpeed+1\r\n0001E03A:
    60        rts\r\n\r\nE03B_table: .byte $0D,$16,$0D ;stored to BossCurrentStrategy\r\nE03E_table:
    .byte $28,$29,$2A ;Gives values for boss's SpriteNum\r\nE041_table: .byte $90,$09,$09
    ;Gives values for boss's XSpeedFraction\r\nE044_table: .byte $02,$01,$01 ;Gives
    values for boss's XSpeed\r\nE047_table: .byte $60,$B0,$B0 ;Gives values for boss's
    YSpeedFraction\r\nE04A_table: .byte $07,$05,$05 ;Gives values for boss's YSpeed\r\n\r\nBombmanStrategyBackwardsJump\r\n0001E04D:
    C6 3E     dec BossCurrentStrategy\r\n0001E04F: 20 C2 ED  jsr BossFuncEDC2\r\n0001E052:
    A5 43     lda BossVariable43\r\n0001E054: 49 40     eor #$40\r\n0001E056: 85
    43     sta BossVariable43\r\n0001E058: A9 00     lda #$00\r\n0001E05A: 8D 41
    04  sta ObjectUnknown440+1\r\n0001E05D: 8D 41 06  sta ObjectFireDelay+1\r\n0001E060:
    A2 02     ldx #$02\r\n0001E062: 4C 17 E0  jmp $E017\r\n\r\nBombmanStrategyContinueThrowingBombs\r\n0001E065:
    20 DF E0  jsr BossResetStrategyIfMegamanIsClose\r\n0001E068: A5 44     lda BossVariable44\r\n0001E06A:
    D0 09     bne $0001E075\r\n0001E06C: 4C B8 E0  jmp $E0B8\r\n\r\nBombmanStrategyWaitCounter\r\n0001E06F:
    A5 44     lda BossVariable44\r\n0001E071: D0 02     bne $0001E075\r\n0001E073:
    C6 3E     dec BossCurrentStrategy\r\n0001E075: 60        rts\r\n\r\n\r\n\r\nBombmanStrategyThrowBombAfterDelay\r\n0001E076:
    20 DF E0  jsr BossResetStrategyIfMegamanIsClose\r\n0001E079: AE 41 06  ldx ObjectFireDelay+1\r\n0001E07C:
    D0 23     bne ++\r\n0001E07E: C6 3E     dec BossCurrentStrategy\r\n0001E080:
    AA        tax\r\n0001E081: 38        sec\r\n0001E082: E9 18     sbc #$18\r\n0001E084:
    90 01     bcc +\r\n0001E086: AA        tax\r\n+\r\n0001E087: A0 00     ldy #$00\r\n0001E089:
    A9 33     lda #$33\r\n0001E08B: 20 AC C5  jsr EnemyCalculateJumpCurveToHitMegaman\r\n0001E08E:
    A9 00     lda #$00\r\n0001E090: 20 17 EE  jsr Boss_FindAmmoSlot\r\n0001E093:
    B0 0C     bcs ++\r\n0001E095: A5 04     lda $04\r\n0001E097: 9D E0 04  sta ObjectXSpeedFraction,x\r\n0001E09A:
    A5 05     lda $05\r\n0001E09C: 9D C0 04  sta ObjectXSpeed,x\r\n0001E09F: E6 44    
    inc BossVariable44\r\n++\r\n0001E0A1: 60        rts\r\n\r\n\r\nBombmanStrategyDecideNextAction\r\n0001E0A2:
    20 DF E0  jsr BossResetStrategyIfMegamanIsClose\r\n0001E0A5: A9 06     lda #$06\r\n0001E0A7:
    20 A0 C5  jsr RandomFunc\r\n0001E0AA: 4A        lsr a\r\n0001E0AB: B0 0B    
    bcs +\r\n0001E0AD: C6 3E     dec BossCurrentStrategy\r\n0001E0AF: C6 3E     dec
    BossCurrentStrategy\r\n0001E0B1: 4A        lsr a\r\n0001E0B2: 90 04     bcc +\r\n0001E0B4:
    C6 3E     dec BossCurrentStrategy\r\n0001E0B6: C6 3E     dec BossCurrentStrategy\r\n+\r\n0001E0B8:
    C6 3E     dec BossCurrentStrategy\r\n0001E0BA: A9 2B     lda #$2B\r\n0001E0BC:
    8D 01 04  sta ObjectSpriteNum+1\r\n0001E0BF: A9 00     lda #$00\r\n0001E0C1:
    8D 41 04  sta ObjectUnknown440+1\r\n0001E0C4: A9 1F     lda #$1F\r\n0001E0C6:
    8D 41 06  sta ObjectFireDelay+1\r\n0001E0C9: 60        rts\r\n\r\n\r\n\r\nBombmanStrategyMoveUntilHitWall\r\n0001E0CA:
    20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001E0CD: F0 0F     beq +\r\n0001E0CF:
    A9 1D     lda #$1D\r\n0001E0D1: 8D 01 04  sta ObjectSpriteNum+1\r\n0001E0D4:
    A9 00     lda #$00\r\n0001E0D6: 8D E1 04  sta ObjectXSpeedFraction+1\r\n0001E0D9:
    8D C1 04  sta ObjectXSpeed+1\r\n0001E0DC: C6 3E     dec BossCurrentStrategy\r\n+\r\n0001E0DE:
    60        rts\r\n\r\nBossResetStrategyIfMegamanIsClose\r\n0001E0DF: 20 D5 ED 
    jsr BossSearchMegaman\r\n0001E0E2: C9 30     cmp #$30\r\n0001E0E4: B0 06    
    bcs +\r\n0001E0E6: A9 05     lda #$05\r\n0001E0E8: 85 3E     sta BossCurrentStrategy\r\n0001E0EA:
    68        pla ; performs a DOUBLE RETURN (return to caller's caller)\r\n0001E0EB:
    68        pla\r\n+\r\n0001E0EC: 60        rts\r\n\r\n\r\nBombmanStrategies:\r\n   
    .word BombmanStrategyDefault               ;5 = choose jump\r\n    .word BombmanStrategyWaitCounter          
    ;6\r\n    .word BombmanStrategyThrowBombAfterDelay   ;7\r\n    .word BombmanStrategyContinueThrowingBombs
    ;8\r\n    .word BombmanStrategyThrowBombAfterDelay   ;9\r\n    .word BombmanStrategyContinueThrowingBombs
    ;10\r\n    .word BombmanStrategyThrowBombAfterDelay   ;11\r\n    .word BombmanStrategyDecideNextAction     
    ;12\r\n    .word BombmanStrategyMoveUntilHitWall      ;13 = big jump\r\n    .word
    BombmanStrategyBackwardsJump         ;14\r\n    .word BombmanStrategyWaitCounter          
    ;15\r\n    .word BombmanStrategyThrowBombAfterDelay   ;16\r\n    .word BombmanStrategyContinueThrowingBombs
    ;17\r\n    .word BombmanStrategyThrowBombAfterDelay   ;18\r\n    .word BombmanStrategyContinueThrowingBombs
    ;19\r\n    .word BombmanStrategyThrowBombAfterDelay   ;20\r\n    .word BombmanStrategyDecideNextAction     
    ;21\r\n    .word BombmanStrategyMoveUntilHitWall      ;22 = small jump\r\n\r\nBossAI_Iceman:\r\n0001E111:
    AD A1 06  lda ObjectLifeCycleCounter+1\r\n0001E114: F0 01     beq +\r\n0001E116:
    60        rts\r\n+\r\n0001E117: B9 A2 E2  lda IcemanStrategies+0,y\r\n0001E11A:
    85 04     sta $04\r\n0001E11C: B9 A3 E2  lda IcemanStrategies+1,y\r\n0001E11F:
    85 05     sta $05\r\n0001E121: 6C 04 00  jmp ($0004)\r\n\r\n\r\nIcemanStrategy0\r\n0001E124:
    A9 00     lda #$00\r\n0001E126: 8D 41 04  sta ObjectUnknown440+1\r\n0001E129:
    8D 41 06  sta ObjectFireDelay+1\r\n0001E12C: A9 3B     lda #$3B\r\n0001E12E:
    8D 01 04  sta ObjectSpriteNum+1\r\n0001E131: A9 20     lda #$20\r\n0001E133:
    8D E1 04  sta ObjectXSpeedFraction+1\r\n0001E136: A9 01     lda #$01\r\n0001E138:
    8D C1 04  sta ObjectXSpeed+1\r\n0001E13B: AD 80 04  lda ObjectPosX+0\r\n0001E13E:
    48        pha\r\n0001E13F: A5 43      lda BossVariable43\r\n0001E141: 29 0F     
    and #$0F\r\n0001E143: AA         tax\r\n0001E144: BD C8 E2   lda E2C8_table,x\r\n0001E147:
    8D 80 04   sta ObjectPosX+0\r\n0001E14A: 20 C2 ED   jsr BossFuncEDC2\r\n0001E14D:
    68        pla\r\n0001E14E: 8D 80 04  sta ObjectPosX+0\r\n0001E151: E6 3E    
    inc BossCurrentStrategy\r\n0001E153: 60        rts\r\n\r\nIcemanStrategy1\r\n0001E154:
    AD 80 04  lda ObjectPosX+0\r\n0001E157: 48        pha\r\n0001E158: A5 43     
    lda BossVariable43\r\n0001E15A: 29 0F      and #$0F\r\n0001E15C: AA         tax\r\n0001E15D:
    BD C8 E2   lda $E2C8,x\r\n0001E160: 8D 80 04   sta ObjectPosX+0\r\n0001E163:
    20 D5 ED   jsr BossSearchMegaman\r\n0001E166: AA         tax\r\n0001E167: 68       
    pla\r\n0001E168: 8D 80 04  sta ObjectPosX+0\r\n0001E16B: E0 02     cpx #$02\r\n0001E16D:
    90 04     bcc $0001E173\r\n0001E16F: 20 FB ED  jsr $EDFB\r\n0001E172: 60       
    rts\r\n\r\n\r\n\r\n0001E173: EE 01 04  inc ObjectSpriteNum+1\r\n0001E176: A9
    1F     lda #$1F\r\n0001E178: 8D 41 06  sta ObjectFireDelay+1\r\n0001E17B: A9
    00     lda #$00\r\n0001E17D: 8D 41 04  sta ObjectUnknown440+1\r\n0001E180: A9
    10     lda #$10\r\n0001E182: 8D E1 04  sta ObjectXSpeedFraction+1\r\n0001E185:
    A9 00     lda #$00\r\n0001E187: 8D C1 04  sta ObjectXSpeed+1\r\n0001E18A: E6
    3E     inc BossCurrentStrategy\r\n0001E18C: 60        rts\r\n\r\n\r\nIcemanStrategy2\r\n0001E18D:
    AD 41 06  lda ObjectFireDelay+1\r\n0001E190: F0 04     beq +\r\n0001E192: 20
    FB ED  jsr $EDFB\r\n0001E195: 60        rts\r\n+\r\n0001E196: E6 3E     inc BossCurrentStrategy\r\n0001E198:
    60        rts\r\n\r\nIcemanStrategy3\r\n0001E199: 20 D5 ED  jsr BossSearchMegaman\r\n0001E19C:
    A9 00     lda #$00\r\n0001E19E: 8D E1 04  sta ObjectXSpeedFraction+1\r\n0001E1A1:
    8D C1 04  sta ObjectXSpeed+1\r\n0001E1A4: A9 DF     lda #-33 ;signed integer\r\n0001E1A6:
    8D 61 06  sta ObjectYSpeedFraction+1\r\n0001E1A9: A9 04     lda #$04\r\n0001E1AB:
    8D 81 06  sta ObjectYSpeed+1\r\n0001E1AE: E6 3E     inc BossCurrentStrategy\r\n0001E1B0:
    60        rts\r\n\r\n\r\nIcemanStrategy4\r\n0001E1B1: 20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001E1B4:
    AD 81 06  lda ObjectYSpeed+1\r\n0001E1B7: 10 31     bpl $0001E1EA\r\n0001E1B9:
    A5 3E     lda BossCurrentStrategy\r\n0001E1BB: 29 07     and #$07\r\n0001E1BD:
    4A        lsr a\r\n0001E1BE: AA        tax\r\n0001E1BF: AD 01 06  lda ObjectPosY+1\r\n0001E1C2:
    DD EB E1  cmp $E1EB,x\r\n0001E1C5: 90 23     bcc $0001E1EA\r\n0001E1C7: A6 44    
    ldx BossVariable44\r\n0001E1C9: A0 00     ldy #$00\r\n0001E1CB: A9 03     lda
    #$03\r\n0001E1CD: 20 AC C5  jsr EnemyCalculateJumpCurveToHitMegaman\r\n0001E1D0:
    A5 05     lda $05\r\n0001E1D2: 0A        asl a\r\n0001E1D3: AA        tax\r\n0001E1D4:
    BD DC E2  lda E2DC_table+0,x\r\n0001E1D7: 8D 81 06  sta ObjectYSpeed+1\r\n0001E1DA:
    BD DD E2  lda E2DC_table+1,x\r\n0001E1DD: 8D 61 06  sta ObjectYSpeedFraction+1\r\n0001E1E0:
    AD 21 04  lda ObjectFlags+1\r\n0001E1E3: 29 EF     and #$EF\r\n0001E1E5: 8D 21
    04  sta ObjectFlags+1\r\n0001E1E8: E6 3E     inc BossCurrentStrategy\r\n0001E1EA:
    60        rts\r\n\r\n\r\n\r\n0001E1EB: 94 A4     sty $A4,x\r\n0001E1ED: B4       
    .byte $B4\r\n\r\nIcemanStrategy10\r\n0001E1EE: E6        .byte $E6\r\n0001E1EF:
    3E A6 44  rol $44A6,x\r\n0001E1F2: A0 00     ldy #$00\r\n0001E1F4: A9 03    
    lda #$03\r\n0001E1F6: 20 AC C5  jsr EnemyCalculateJumpCurveToHitMegaman\r\n0001E1F9:
    A6 05     ldx $05\r\n0001E1FB: BD D8 E2  lda E2D8_table,x\r\n0001E1FE: 85 3F    
    sta BossVariable3F\r\n0001E200: 60        rts\r\n\r\n\r\nIcemanStrategy5\r\n0001E201:
    20 D5 ED  jsr BossSearchMegaman\r\n0001E204: A9 05     lda #$05\r\n0001E206:
    20 17 EE  jsr Boss_FindAmmoSlot\r\n0001E209: B0 27     bcs $0001E232\r\n0001E20B:
    86 0D     stx $0D\r\n0001E20D: A6 44     ldx BossVariable44\r\n0001E20F: A0 00    
    ldy #$00\r\n0001E211: A9 03     lda #$03\r\n0001E213: 20 AC C5  jsr EnemyCalculateJumpCurveToHitMegaman\r\n0001E216:
    A5 05     lda $05\r\n0001E218: 0A        asl a\r\n0001E219: AA        tax\r\n0001E21A:
    A4 0D     ldy $0D\r\n0001E21C: BD CC E2  lda E2C8_table+4,x\r\n0001E21F: 99 C0
    04  sta ObjectXSpeed,y\r\n0001E222: BD CD E2  lda E2C8_table+5,x\r\n0001E225:
    99 E0 04  sta ObjectXSpeedFraction,y\r\n0001E228: A9 26     lda #$26\r\n0001E22A:
    8D 41 06  sta ObjectFireDelay+1\r\n\r\n0001E22D: A9 2A     lda #$2A        ;
    Metal sound\r\n0001E22F: 20 77 C4  jsr IssueSound                                 
    ; $C477\r\n0001E232: E6 3E     inc BossCurrentStrategy\r\n0001E234: 60       
    rts\r\n\r\n\r\nIcemanStrategy11\r\n0001E235: 20 C2 ED  jsr BossFuncEDC2\r\n0001E238:
    C6 3F     dec BossVariable3F\r\n0001E23A: D0 15     bne $0001E251\r\n0001E23C:
    AD 81 06  lda ObjectYSpeed+1\r\n0001E23F: 49 FF     eor #$FF\r\n0001E241: 8D
    81 06  sta ObjectYSpeed+1\r\n0001E244: AD 61 06  lda ObjectYSpeedFraction+1 ;negates
    the value\r\n0001E247: 49 FF     eor #$FF\r\n0001E249: 18        clc\r\n0001E24A:
    69 01     adc #$01\r\n0001E24C: 8D 61 06  sta ObjectYSpeedFraction+1\r\n0001E24F:
    E6 3E     inc BossCurrentStrategy\r\n0001E251: 60        rts\r\n\r\n\r\nIcemanStrategy13\r\n0001E252:
    20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001E255: A5 3E     lda BossCurrentStrategy\r\n0001E257:
    29 07     and #$07\r\n0001E259: 4A        lsr a\r\n0001E25A: 4A        lsr a\r\n0001E25B:
    AA        tax\r\n0001E25C: AD 01 06  lda ObjectPosY+1\r\n0001E25F: DD 67 E2 
    cmp E267_table,x\r\n0001E262: B0 02     bcs $0001E266\r\n0001E264: E6 3E    
    inc BossCurrentStrategy\r\n0001E266: 60        rts\r\nE267_table\r\n    .byte
    $A5,$95\r\n\r\nIcemanStrategy15\r\n0001E269: AD 21 04  lda ObjectFlags+1\r\n0001E26C:
    09 10     ora #$10\r\n0001E26E: 8D 21 04  sta ObjectFlags+1\r\n0001E271: A9 C0    
    lda #$-40\r\n0001E273: 8D 61 06  sta ObjectYSpeedFraction+1\r\n0001E276: A9 02    
    lda #$02\r\n0001E278: 8D 81 06  sta ObjectYSpeed+1\r\n0001E27B: E6 3E     inc
    BossCurrentStrategy\r\n0001E27D: 60        rts\r\n\r\n\r\nIcemanStrategy16\r\n0001E27E:
    20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001E281: A5 2B     lda $2B\r\n0001E283:
    F0 1C     beq $0001E2A1\r\n0001E285: A9 05     lda #$05\r\n0001E287: 85 3E    
    sta BossCurrentStrategy\r\n0001E289: A5 44     lda BossVariable44\r\n0001E28B:
    C9 09     cmp #$09\r\n0001E28D: F0 02     beq $0001E291\r\n0001E28F: E6 44    
    inc BossVariable44\r\n0001E291: E6 43     inc BossVariable43\r\n0001E293: A5
    43     lda BossVariable43\r\n0001E295: 29 0F     and #$0F\r\n0001E297: C9 04    
    cmp #$04\r\n0001E299: D0 06     bne $0001E2A1\r\n0001E29B: A5 43     lda BossVariable43\r\n0001E29D:
    29 F0     and #$F0\r\n0001E29F: 85 43     sta BossVariable43\r\n0001E2A1: 60       
    rts\r\n\r\nIcemanStrategies: ; at E2A2\r\n    .word IcemanStrategy0\r\n    .word
    IcemanStrategy1\r\n    .word IcemanStrategy2\r\n    .word IcemanStrategy3\r\n   
    .word IcemanStrategy4\r\n    .word IcemanStrategy5\r\n    .word IcemanStrategy4\r\n   
    .word IcemanStrategy5\r\n    .word IcemanStrategy4\r\n    .word IcemanStrategy5\r\n   
    .word IcemanStrategy10\r\n    .word IcemanStrategy11\r\n    .word IcemanStrategy5\r\n   
    .word IcemanStrategy13\r\n    .word IcemanStrategy5\r\n    .word IcemanStrategy13\r\n   
    .word IcemanStrategy5\r\n    .word IcemanStrategy15\r\n    .word IcemanStrategy16\r\n\r\nE2C8_table:
    ; at E2C8\r\n    .byte $D0,$A8,$80,$A8, $01,$60,$01,$80, $02,$00,$02,$E0, $0D,$0C,$09,$06\r\nE2D8_table:
    ; at E2D8\r\n0001E2D8: 30 2E     bmi $0001E308\r\n0001E2DA: 26 1B     rol $1B\r\n\r\nE2DC_table:
    ;YSpeed and YSpeedFraction\r\n    .byte $FF,$60\r\n    .byte $FF,$50\r\n    .byte
    $FF,$2C\r\n    .byte $FE,$-20\r\n\r\nBossAI_Fireman:\r\n0001E2E4: A5 56     lda
    BossBlinkState\r\n0001E2E6: C9 10     cmp #$10\r\n0001E2E8: D0 06     bne +\r\n0001E2EA:
    A0 04     ldy #$04\r\n0001E2EC: A9 07     lda #$07\r\n0001E2EE: 85 3E     sta
    BossCurrentStrategy\r\n+\r\n0001E2F0: B9 1C E4  lda FiremanStrategies+0,y\r\n0001E2F3:
    48        pha\r\n0001E2F4: B9 1D E4  lda FiremanStrategies+1,y\r\n0001E2F7: 48       
    pha\r\n0001E2F8: AD 81 04  lda ObjectPosX+1\r\n0001E2FB: 48        pha\r\n0001E2FC:
    AD 21 04  lda ObjectFlags+1\r\n0001E2FF: 48        pha\r\n0001E300: A2 10    
    ldx #$10\r\n-\r\n0001E302: A9 37     lda #$37\r\n0001E304: 20 86 C5  jsr FindLastObjectOfType\r\n0001E307:
    B0 31     bcs +++\r\n0001E309: 86 05     stx $05\r\n0001E30B: BD 80 04  lda ObjectPosX,x\r\n0001E30E:
    8D 81 04  sta ObjectPosX+1\r\n0001E311: 20 D5 ED  jsr BossSearchMegaman\r\n0001E314:
    C9 08     cmp #$08\r\n0001E316: B0 1D     bcs ++\r\n0001E318: A9 38     lda #$38\r\n0001E31A:
    A2 10     ldx #$10\r\n0001E31C: 20 86 C5  jsr FindLastObjectOfType\r\n0001E31F:
    90 08     bcc +\r\n0001E321: A9 04     lda #$04\r\n0001E323: 20 17 EE  jsr Boss_FindAmmoSlot\r\n0001E326:
    4C 3A E3  jmp +++\r\n+\r\n0001E329: A0 1C     ldy #$1C\r\n0001E32B: A9 04    
    lda #$04\r\n0001E32D: 85 0D     sta $0D\r\n0001E32F: 20 27 EE  jsr $EE27\r\n0001E332:
    4C 3A E3  jmp +++\r\n++\r\n0001E335: A6 05     ldx $05\r\n0001E337: E8       
    inx\r\n0001E338: D0 C8     bne -\r\n+++\r\n0001E33A: 68        pla\r\n0001E33B:
    8D 21 04  sta ObjectFlags+1\r\n0001E33E: 68        pla\r\n0001E33F: 8D 81 04 
    sta ObjectPosX+1\r\n0001E342: 68        pla\r\n0001E343: 85 05     sta $05\r\n0001E345:
    68        pla\r\n0001E346: 85 04     sta $04\r\n0001E348: AD A1 06  lda ObjectLifeCycleCounter+1\r\n0001E34B:
    F0 01     beq +\r\n0001E34D: 60        rts\r\n+\r\n0001E34E: 6C 04 00  jmp ($0004)\r\n\r\nFiremanStrategy0\r\n0001E351:
    A2 07     ldx #$07\r\n0001E353: 20 D5 ED  jsr BossSearchMegaman\r\n0001E356:
    C9 61     cmp #$61\r\n0001E358: B0 0F     bcs $0001E369\r\n0001E35A: C9 5F    
    cmp #$5F\r\n0001E35C: 90 03     bcc $0001E361\r\n0001E35E: 86 3E     stx BossCurrentStrategy\r\n0001E360:
    60        rts\r\n\r\n\r\n\r\n0001E361: AD 21 04  lda ObjectFlags+1\r\n0001E364:
    49 40     eor #$40\r\n0001E366: 8D 21 04  sta ObjectFlags+1\r\n\r\n0001E369:
    AD 21 04  lda ObjectFlags+1\r\n0001E36C: 29 40     and #$40\r\n0001E36E: 85 43    
    sta BossVariable43\r\n0001E370: A9 34     lda #$34\r\n0001E372: CD 01 04  cmp
    ObjectSpriteNum+1\r\n0001E375: F0 15     beq $0001E38C\r\n0001E377: 8D 01 04 
    sta ObjectSpriteNum+1\r\n0001E37A: A9 00     lda #$00\r\n0001E37C: 8D 41 04 
    sta ObjectUnknown440+1\r\n0001E37F: 8D 41 06  sta ObjectFireDelay+1\r\n0001E382:
    A9 20     lda #$20\r\n0001E384: 8D E1 04  sta ObjectXSpeedFraction+1\r\n0001E387:
    A9 01     lda #$01\r\n0001E389: 8D C1 04  sta ObjectXSpeed+1\r\n0001E38C: 20
    FB ED  jsr $EDFB\r\n0001E38F: A5 2A     lda $2A\r\n0001E391: F0 05     beq $0001E398\r\n0001E393:
    20 C2 ED  jsr BossFuncEDC2\r\n0001E396: E6 3E     inc BossCurrentStrategy\r\n0001E398:
    60        rts\r\n\r\n\r\nFiremanStrategy1\r\n0001E399: AD 21 04  lda ObjectFlags+1\r\n0001E39C:
    48        pha\r\n0001E39D: 20 D5 ED  jsr BossSearchMegaman\r\n0001E3A0: C9 61    
    cmp #$61\r\n0001E3A2: B0 12     bcs $0001E3B6\r\n0001E3A4: 68        pla\r\n0001E3A5:
    8D 21 04  sta ObjectFlags+1\r\n0001E3A8: 20 FB ED  jsr $EDFB\r\n0001E3AB: A5
    2A     lda $2A\r\n0001E3AD: D0 01     bne $0001E3B0\r\n0001E3AF: 60        rts\r\n\r\n\r\n\r\n0001E3B0:
    20 C2 ED  jsr BossFuncEDC2\r\n0001E3B3: C6 3E     dec BossCurrentStrategy\r\n0001E3B5:
    60        rts\r\n\r\n\r\n\r\n0001E3B6: 68        pla\r\n0001E3B7: C6 3E     dec
    BossCurrentStrategy\r\n0001E3B9: 60        rts\r\n\r\n\r\nFiremanStrategy2\r\n0001E3BA:
    A9 35     lda #$35\r\n0001E3BC: 8D 01 04  sta ObjectSpriteNum+1\r\n0001E3BF:
    A9 00     lda #$00\r\n0001E3C1: 8D 41 04  sta ObjectUnknown440+1\r\n0001E3C4:
    8D 41 06  sta ObjectFireDelay+1\r\nFiremanStrategy4:\r\n0001E3C7: 20 D5 ED  jsr
    BossSearchMegaman\r\n0001E3CA: A9 01     lda #$01\r\n0001E3CC: 20 17 EE  jsr
    Boss_FindAmmoSlot\r\n0001E3CF: B0 14     bcs $0001E3E5\r\n0001E3D1: A9 3F    
    lda #$3F\r\n0001E3D3: 85 44     sta BossVariable44\r\n0001E3D5: A2 10     ldx
    #$10\r\n0001E3D7: A9 38     lda #$38\r\n0001E3D9: 20 86 C5  jsr FindLastObjectOfType\r\n0001E3DC:
    B0 05     bcs $0001E3E3\r\n0001E3DE: A9 F8     lda #$F8\r\n0001E3E0: 9D 00 06 
    sta ObjectPosY,x\r\n0001E3E3: E6 3E     inc BossCurrentStrategy\r\n0001E3E5:
    60        rts\r\n\r\n\r\n\r\nFiremanStrategy3\r\n0001E3E6: A5 44     lda BossVariable44\r\n0001E3E8:
    C9 30     cmp #$30\r\n0001E3EA: B0 10     bcs $0001E3FC\r\n0001E3EC: 20 D5 ED 
    jsr BossSearchMegaman\r\n0001E3EF: C9 61     cmp #$61\r\n0001E3F1: B0 04    
    bcs $0001E3F7\r\n0001E3F3: C9 5F     cmp #$5F\r\n0001E3F5: B0 05     bcs $0001E3FC\r\n0001E3F7:
    A9 05     lda #$05\r\n0001E3F9: 85 3E     sta BossCurrentStrategy\r\n0001E3FB:
    60        rts\r\n\r\n0001E3FC: C6 44     dec BossVariable44\r\n0001E3FE: D0 02    
    bne $0001E402\r\n0001E400: E6 3E     inc BossCurrentStrategy\r\n0001E402: 60       
    rts\r\n\r\nFiremanStrategy11:\r\n0001E403: 20 D5 ED  jsr BossSearchMegaman\r\n0001E406:
    C6 44     dec BossVariable44\r\n0001E408: D0 05     bne $0001E40F\r\n0001E40A:
    A2 33     ldx #$33\r\n0001E40C: 8E 01 04  stx ObjectSpriteNum+1\r\n0001E40F:
    C9 61     cmp #$61\r\n0001E411: B0 E4     bcs $0001E3F7\r\n0001E413: C9 5F    
    cmp #$5F\r\n0001E415: 90 E0     bcc $0001E3F7\r\n0001E417: A5 14     lda JoyPad0\r\n0001E419:
    D0 DC     bne $0001E3F7\r\n0001E41B: 60        rts\r\n\r\n\r\nFiremanStrategies:\r\n   
    .word FiremanStrategy0\r\n    .word FiremanStrategy1\r\n    .word FiremanStrategy2\r\n   
    .word FiremanStrategy3\r\n    .word FiremanStrategy4\r\n    .word FiremanStrategy3\r\n   
    .word FiremanStrategy4\r\n    .word FiremanStrategy3\r\n    .word FiremanStrategy4\r\n   
    .word FiremanStrategy3\r\n    .word FiremanStrategy4\r\n    .word FiremanStrategy11\r\n\r\nBossAI_Elecman\r\n0001E434:
    A5 56     lda BossBlinkState\r\n0001E436: F0 0C     beq +\r\n0001E438: C9 1F    
    cmp #$1F\r\n0001E43A: 90 08     bcc +\r\n0001E43C: A0 12     ldy #$12\r\n0001E43E:
    AD A1 06  lda ObjectLifeCycleCounter+1\r\n0001E441: F0 01     beq +\r\n0001E443:
    60        rts\r\n+\r\n0001E444: B9 5A E5  lda ElecmanStrategies+0,y\r\n0001E447:
    85 04     sta $04\r\n0001E449: B9 5B E5  lda ElecmanStrategies+1,y\r\n0001E44C:
    85 05     sta $05\r\n0001E44E: 6C 04 00  jmp ($0004)\r\n\r\nElecmanStrategy0\r\n0001E451:
    A9 48     lda #$48\r\n0001E453: CD 01 04  cmp ObjectSpriteNum+1\r\n0001E456:
    F0 13     beq $0001E46B\r\n0001E458: 8D 01 04  sta ObjectSpriteNum+1\r\n0001E45B:
    A9 00     lda #$00\r\n0001E45D: 8D 41 04  sta ObjectUnknown440+1\r\n0001E460:
    8D 41 06  sta ObjectFireDelay+1\r\n0001E463: 8D E1 04  sta ObjectXSpeedFraction+1\r\n0001E466:
    A9 02     lda #$02\r\n0001E468: 8D C1 04  sta ObjectXSpeed+1\r\n0001E46B: A5
    43     lda BossVariable43\r\n0001E46D: 29 0F     and #$0F\r\n0001E46F: AA       
    tax\r\n0001E470: AD 80 04  lda ObjectPosX+0\r\n0001E473: 48        pha\r\n0001E474:
    BD 50 E5  lda E550_table,x\r\n0001E477: 8D 80 04  sta ObjectPosX+0\r\n0001E47A:
    20 D5 ED  jsr BossSearchMegaman\r\n0001E47D: C9 03     cmp #$03\r\n0001E47F:
    B0 02     bcs $0001E483\r\n0001E481: E6 3E     inc BossCurrentStrategy\r\n0001E483:
    20 C2 ED  jsr BossFuncEDC2\r\n0001E486: 68        pla\r\n0001E487: 8D 80 04 
    sta ObjectPosX+0\r\n0001E48A: 20 FB ED  jsr $EDFB\r\n0001E48D: A5 2A     lda
    $2A\r\n0001E48F: D0 06     bne $0001E497\r\n\r\n0001E491: A5 18     lda JoyD0      
    ; If B has been pressed\r\n0001E493: 29 02     and #$02\r\n0001E495: F0 04    
    beq +                                       ; $0001E49B\r\n0001E497: A9 09    
    lda #$09\r\n0001E499: 85 3E     sta BossCurrentStrategy\r\n+\r\n0001E49B: 60       
    rts\r\n\r\nElecmanStrategy1\r\n0001E49C: A9 00     lda #$00\r\n0001E49E: 8D E1
    04  sta ObjectXSpeedFraction+1\r\n0001E4A1: 8D C1 04  sta ObjectXSpeed+1\r\n0001E4A4:
    8D 41 04  sta ObjectUnknown440+1\r\n0001E4A7: A9 49     lda #$49\r\n0001E4A9:
    8D 01 04  sta ObjectSpriteNum+1\r\n0001E4AC: A9 1F     lda #$1F\r\n0001E4AE:
    8D 41 06  sta ObjectFireDelay+1\r\n0001E4B1: E6 3E     inc BossCurrentStrategy\r\n0001E4B3:
    20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001E4B6: 60        rts\r\n\r\n\r\n\r\nElecmanStrategy2\r\n0001E4B7:
    AD 41 06  lda ObjectFireDelay+1\r\n0001E4BA: D0 0C     bne +                                          
    ; $E4C8\r\n0001E4BC: 20 ED EB  jsr Boss7_WeaponAI_E\r\n0001E4BF: B0 07     bcs
    +                                           ; $E4C8\r\n0001E4C1: E6 3E     inc
    BossCurrentStrategy\r\n0001E4C3: A9 1E     lda #$1E        ; Electricity shooting?\r\n0001E4C5:
    20 77 C4  jsr IssueSound                                  ; $C477\r\n+\r\n0001E4C8:
    20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001E4CB: 60        rts\r\n\r\n\r\n\r\nElecmanStrategy3\r\n0001E4CC:
    20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001E4CF: A5 44     lda BossVariable44\r\n0001E4D1:
    D0 14     bne ++                                          ; $E4E7\r\n0001E4D3:
    E6 43     inc BossVariable43\r\n0001E4D5: A5 43     lda BossVariable43\r\n0001E4D7:
    29 0F     and #$0F\r\n0001E4D9: C9 04     cmp #$04\r\n0001E4DB: D0 06     bne
    +                                           ; $E4E3\r\n0001E4DD: A5 43     lda
    BossVariable43\r\n0001E4DF: 29 F0     and #$F0\r\n0001E4E1: 85 43     sta BossVariable43\r\n+\r\n0001E4E3:
    A9 05     lda #$05\r\n0001E4E5: 85 3E     sta BossCurrentStrategy\r\n++\r\n0001E4E7:
    60        rts\r\n\r\n\r\n\r\nElecmanStrategy4\r\n0001E4E8: A9 4B     lda #$4B\r\n0001E4EA:
    8D 01 04  sta ObjectSpriteNum+1\r\n0001E4ED: A9 00     lda #$00\r\n0001E4EF:
    8D 41 04  sta ObjectUnknown440+1\r\n0001E4F2: 8D 41 06  sta ObjectFireDelay+1\r\n0001E4F5:
    8D 61 06  sta ObjectYSpeedFraction+1\r\n0001E4F8: A9 E0     lda #$E0\r\n0001E4FA:
    8D E1 04  sta ObjectXSpeedFraction+1\r\n0001E4FD: A9 01     lda #$01\r\n0001E4FF:
    8D C1 04  sta ObjectXSpeed+1\r\n0001E502: A9 04     lda #$04\r\n0001E504: 8D
    81 06  sta ObjectYSpeed+1\r\n0001E507: 20 C2 ED  jsr BossFuncEDC2\r\n0001E50A:
    A5 46     lda RandomSeed\r\n0001E50C: 29 03     and #$03\r\n0001E50E: D0 06    
    bne $0001E516\r\n0001E510: A5 43     lda BossVariable43\r\n0001E512: 49 40    
    eor #$40\r\n0001E514: 85 43     sta BossVariable43\r\n0001E516: E6 3E     inc
    BossCurrentStrategy\r\n0001E518: 60        rts\r\n\r\n\r\nElcemanStrategy5\r\n0001E519:
    20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001E51C: F0 05     beq +\r\n0001E51E:
    A9 05     lda #$05\r\n0001E520: 85 3E     sta BossCurrentStrategy\r\n0001E522:
    60        rts\r\n+\r\n0001E523: A5 18     lda JoyD0       ; If B has been pressed
    then inc BossCurrentStrategy\r\n0001E525: 29 02     and #$02\r\n0001E527: F0
    02     beq +                                       ; $0001E52B\r\n0001E529: E6
    3E     inc BossCurrentStrategy\r\n+\r\n0001E52B: 60        rts\r\n\r\nElecmanStrategy6\r\n0001E52C:
    A9 00     lda #$00\r\n0001E52E: 20 A4 E4  jsr $E4A4\r\n0001E531: F0 08     beq
    $0001E53B\r\n0001E533: A9 00     lda #$00\r\n0001E535: 8D E1 04  sta ObjectXSpeedFraction+1\r\n0001E538:
    8D C1 04  sta ObjectXSpeed+1\r\n0001E53B: 60        rts\r\n\r\n\r\n\r\n\r\nElecmanStrategy7\r\n0001E53C:
    20 B7 E4  jsr ElecmanStrategy2\r\n0001E53F: D0 F2     bne $0001E533\r\n0001E541:
    60        rts\r\n\r\n\r\nElecmanStrategy8\r\n0001E542: A5 44     lda BossVariable44\r\n0001E544:
    D0 04     bne $0001E54A\r\n0001E546: A9 05     lda #$05\r\n0001E548: 85 3E    
    sta BossCurrentStrategy\r\n0001E54A: 20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001E54D:
    D0 E4     bne $0001E533\r\n0001E54F: 60        rts\r\n\r\nE550_table: ;at E550\r\n   
    .byte $B0, $80, $30, $80\r\n    ; Table of Megaman X positions. Used for what?\r\n   
    ; Right edge, middle, left edge, middle\r\n\r\nElecmanStrategy9\r\n0001E554:
    A9 59     lda #$59\r\n0001E556: 20 16 EF  jsr BossFuncEF16\r\n0001E559: 60       
    rts\r\n\r\n\r\nElecmanStrategies: ;at E55A\r\n    .word ElecmanStrategy0\r\n   
    .word ElecmanStrategy1\r\n    .word ElecmanStrategy2\r\n    .word ElecmanStrategy3\r\n   
    .word ElecmanStrategy4\r\n    .word ElecmanStrategy5\r\n    .word ElecmanStrategy6\r\n   
    .word ElecmanStrategy7\r\n    .word ElecmanStrategy8\r\n    .word ElecmanStrategy9\r\n\r\nBossAI_Gutsman:\r\n0001E56E:
    AD A106   lda ObjectLifeCycleCounter+1\r\n0001E571: F0 01     beq +\r\n0001E573:
    60        rts\r\n+\r\n0001E574: B9 CA E6  lda GutsmanStrategies+0,y\r\n0001E577:
    85 04     sta $04\r\n0001E579: B9 CB E6  lda GutsmanStrategies+1,y\r\n0001E57C:
    85 05     sta $05\r\n0001E57E: 6C 04 00  jmp ($0004)\r\n\r\nGutsmanStrategy0:\r\n0001E581:
    A9 1F     lda #$1F\r\n0001E583: 8D 41 06  sta ObjectFireDelay+1\r\n0001E586:
    A9 30     lda #$30\r\n0001E588: 8D 01 04  sta ObjectSpriteNum+1\r\n0001E58B:
    A9 00     lda #$00\r\n0001E58D: 8D E1 04  sta ObjectXSpeedFraction+1\r\n0001E590:
    8D C1 04  sta ObjectXSpeed+1\r\n0001E593: 8D 41 04  sta ObjectUnknown440+1\r\n0001E596:
    A9 30     lda #$30\r\n0001E598: 8D 61 06  sta ObjectYSpeedFraction+1\r\n0001E59B:
    A9 04     lda #$04\r\n0001E59D: 8D 81 06  sta ObjectYSpeed+1\r\n0001E5A0: A9
    19     lda #$19\r\n0001E5A2: 85 3E     sta BossCurrentStrategy\r\n0001E5A4: 60       
    rts\r\n\r\n\r\n\r\nGutsmanStrategy5\r\n0001E5A5: A5 47     lda GutsmanStompCounter\r\n0001E5A7:
    D0 0D     bne +                                           ; $E5B6\r\n0001E5A9:
    A5 46     lda RandomSeed\r\n0001E5AB: 29 01     and #$01\r\n0001E5AD: F0 42    
    beq $0001E5F1\r\n0001E5AF: 20 E0 E5  jsr $E5E0\r\n0001E5B2: A9 09     lda #$09\r\n0001E5B4:
    85 3E     sta BossCurrentStrategy\r\n+\r\n0001E5B6: 60        rts\r\n\r\n\r\nGutsmanStrategy3\r\n0001E5B7:
    A5 47     lda GutsmanStompCounter\r\n0001E5B9: D0 07     bne +                                          
    ; $E5C2\r\n0001E5BB: 20 E0 E5  jsr $E5E0\r\n0001E5BE: A9 07     lda #$07\r\n0001E5C0:
    85 3E     sta BossCurrentStrategy\r\n+\r\n0001E5C2: 60        rts\r\n\r\n\r\n\r\nGutsmanStrategy7\r\n0001E5C3:
    A5 47     lda GutsmanStompCounter\r\n0001E5C5: D0 0E     bne +                                          
    ; $E5D5\r\n0001E5C7: A5 3E     lda BossCurrentStrategy\r\n0001E5C9: 48       
    pha\r\n0001E5CA: 20 C2 ED  jsr BossFuncEDC2\r\n0001E5CD: 20 81 E5  jsr $E581\r\n0001E5D0:
    68        pla\r\n0001E5D1: 85 3E     sta BossCurrentStrategy\r\n0001E5D3: C6
    3E     dec BossCurrentStrategy\r\n+\r\n0001E5D5: 60        rts\r\n\r\n\r\nGutsmanStrategy15\r\n0001E5D6:
    A5 47     lda GutsmanStompCounter\r\n0001E5D8: D0 16     bne $0001E5F0\r\n0001E5DA:
    A5 46     lda RandomSeed\r\n0001E5DC: 29 01     and #$01\r\n0001E5DE: D0 15    
    bne $0001E5F5\r\n0001E5E0: 20 C2 ED  jsr BossFuncEDC2\r\n0001E5E3: 20 81 E5 
    jsr $E581\r\n0001E5E6: A5 43     lda BossVariable43\r\n0001E5E8: 49 40     eor
    #$40\r\n0001E5EA: 85 43     sta BossVariable43\r\n0001E5EC: A9 13     lda #$13\r\n0001E5EE:
    85 3E     sta BossCurrentStrategy\r\n0001E5F0: 60        rts\r\n\r\nGutsmanStrategy1:\r\n0001E5F1:
    A5 47     lda GutsmanStompCounter\r\n0001E5F3: D0 FB     bne $0001E5F0\r\n0001E5F5:
    A9 05     lda #$05\r\n0001E5F7: 85 3E     sta BossCurrentStrategy\r\n0001E5F9:
    60        rts\r\n\r\nGutsmanStrategy2\r\n0001E5FA: A9 09     lda #$09\r\n0001E5FC:
    8D E1 04  sta ObjectXSpeedFraction+1\r\n0001E5FF: A9 01     lda #$01\r\n0001E601:
    8D C1 04  sta ObjectXSpeed+1\r\n0001E604: AD 41 06  lda ObjectFireDelay+1\r\n0001E607:
    D0 1E     bne $0001E627\r\n0001E609: A5 23     lda FrameCounter\r\n0001E60B:
    29 03     and #$03\r\n0001E60D: F0 18     beq $0001E627\r\n0001E60F: 20 F8 ED 
    jsr BossFuncWalkTowardsMegaman\r\n\r\n0001E612: A5 2B     lda $2B\r\n0001E614:
    F0 11     beq +                                           ; $E627\r\n\r\n; Make
    gutsman stomp\r\n0001E616: C6 3E     dec BossCurrentStrategy\r\n0001E618: A9
    25     lda #$25\r\n0001E61A: 8D 01 04  sta ObjectSpriteNum+1\r\n\r\n; Shake screen
    for 32 frames\r\n0001E61D: A9 20     lda #$20\r\n0001E61F: 85 47     sta GutsmanStompCounter\r\n\r\n0001E621:
    A9 28     lda #$28        ; Gutsman stomping sound\r\n0001E623: 20 77 C4  jsr
    IssueSound                                  ; $C477\r\n0001E626: 60        rts\r\n\r\n+\r\n0001E627:
    A9 00     lda #$00\r\n0001E629: 60        rts\r\n\r\n\r\nGutsmanStrategy17\r\n0001E62A:
    A5 44     lda BossVariable44\r\n0001E62C: D0 27     bne +++\r\n0001E62E: 20 C2
    ED  jsr BossFuncEDC2\r\n0001E631: A9 03     lda #$03\r\n0001E633: 20 A0 C5  jsr
    RandomFunc\r\n0001E636: C9 01     cmp #$01\r\n0001E638: 90 17     bcc ++\r\n0001E63A:
    08        php\r\n0001E63B: 20 81 E5  jsr $E581\r\n0001E63E: 28        plp\r\n0001E63F:
    D0 05     bne +\r\n0001E641: A9 0F     lda #$0F\r\n0001E643: 85 3E     sta BossCurrentStrategy\r\n0001E645:
    60        rts\r\n+\r\n0001E646: A9 15     lda #$15\r\n0001E648: 85 3E     sta
    BossCurrentStrategy\r\n0001E64A: A5 43     lda BossVariable43\r\n0001E64C: 49
    40     eor #$40\r\n0001E64E: 85 43     sta BossVariable43\r\n0001E650: 60       
    rts\r\n++\r\n0001E651: A9 05     lda #$05\r\n0001E653: 85 3E     sta BossCurrentStrategy\r\n+++\r\n0001E655:
    60        rts\r\n\r\n\r\n\r\nGutsmanStrategy18\r\n0001E656: AE 41 06  ldx ObjectFireDelay+1\r\n0001E659:
    D0 FA     bne $0001E655\r\n0001E65B: 20 D5 ED  jsr BossSearchMegaman\r\n0001E65E:
    48        pha\r\n0001E65F: C6 3E     dec BossCurrentStrategy\r\n0001E661: A9
    02     lda #$02\r\n0001E663: 20 17 EE  jsr Boss_FindAmmoSlot\r\n0001E666: 68       
    pla\r\n0001E667: B0 21     bcs $0001E68A\r\n0001E669: 85 02     sta $02\r\n0001E66B:
    A9 04     lda #$04\r\n0001E66D: 85 01     sta $01\r\n0001E66F: A9 00     lda
    #$00\r\n0001E671: 85 00     sta $00\r\n0001E673: 18        clc\r\n0001E674: AD
    00 06  lda ObjectPosY+0                                 ; ObjectPosY+0\r\n0001E677:
    69 0C     adc #$0C\r\n0001E679: 85 0C     sta $0C\r\n0001E67B: 38        sec\r\n0001E67C:
    AD 01 06  lda ObjectPosY+1\r\n0001E67F: E9 18     sbc #$18\r\n0001E681: E5 0C    
    sbc $0C\r\n0001E683: 85 03     sta $03\r\n0001E685: 20 C6 F8  jsr F8C6_routine\r\n0001E688:
    E6 44     inc BossVariable44\r\n0001E68A: 60        rts\r\n\r\n\r\nGutsmanStrategy19\r\n0001E68B:
    A5 44     lda BossVariable44\r\n0001E68D: D0 10     bne +\r\n0001E68F: A9 2E    
    lda #$2E\r\n0001E691: 8D 01 04  sta ObjectSpriteNum+1\r\n0001E694: A9 1F    
    lda #$1F\r\n0001E696: 8D 41 06  sta ObjectFireDelay+1\r\n0001E699: A5 47    
    lda GutsmanStompCounter\r\n0001E69B: D0 02     bne +                                          
    ; $E69F\r\n0001E69D: C6 3E     dec BossCurrentStrategy\r\n+\r\n0001E69F: 60       
    rts\r\n\r\n\r\nGutsmanStrategy20\r\n0001E6A0: 20 04 E6  jsr $E604\r\n0001E6A3:
    F0 FA     beq $0001E69F\r\n0001E6A5: A9 2D     lda #$2D\r\n0001E6A7: 8D 01 04 
    sta ObjectSpriteNum+1\r\n0001E6AA: A9 00     lda #$00\r\n0001E6AC: 8D 41 04 
    sta ObjectUnknown440+1\r\n0001E6AF: A9 03     lda #$03\r\n0001E6B1: 20 17 EE 
    jsr Boss_FindAmmoSlot\r\n0001E6B4: B0 13     bcs $0001E6C9\r\n0001E6B6: AD 01
    06  lda ObjectPosY+1\r\n0001E6B9: C9 C0     cmp #$C0\r\n0001E6BB: F0 05     beq
    $0001E6C2\r\n0001E6BD: A9 19     lda #$19\r\n0001E6BF: 9D 40 04  sta ObjectUnknown440,x\r\n0001E6C2:
    A9 20     lda #$20\r\n0001E6C4: 9D 00 06  sta ObjectPosY,x\r\n0001E6C7: E6 44    
    inc BossVariable44\r\n0001E6C9: 60        rts\r\n\r\n\r\n\r\nGutsmanStrategies:
    ;at E6CA\r\n    .word GutsmanStrategy0\r\n    .word GutsmanStrategy1\r\n    .word
    GutsmanStrategy2\r\n    .word GutsmanStrategy3\r\n    .word GutsmanStrategy2\r\n   
    .word GutsmanStrategy5\r\n    .word GutsmanStrategy2\r\n    .word GutsmanStrategy7\r\n   
    .word GutsmanStrategy2\r\n    .word GutsmanStrategy7\r\n    .word GutsmanStrategy2\r\n   
    .word GutsmanStrategy1\r\n    .word GutsmanStrategy2\r\n    .word GutsmanStrategy7\r\n   
    .word GutsmanStrategy2\r\n    .word GutsmanStrategy15\r\n    .word GutsmanStrategy2\r\n   
    .word GutsmanStrategy17\r\n    .word GutsmanStrategy18\r\n    .word GutsmanStrategy19\r\n   
    .word GutsmanStrategy20\r\n\r\nBossAI_Boss6\r\n0001E6F4: A5 56     lda BossBlinkState\r\n0001E6F6:
    F0 14     beq ++\r\n0001E6F8: C9 04     cmp #$04\r\n0001E6FA: F0 0C     beq +\r\n0001E6FC:
    20 4F C7  jsr PaletteSetupForBGwith3F0\r\n0001E6FF: A9 08     lda #$08\r\n0001E701:
    85 37     sta PaletteUpdateDelay\r\n0001E703: A9 00     lda #$00\r\n0001E705:
    8D A1 06  sta ObjectLifeCycleCounter+1\r\n+\r\n0001E708: A9 05     lda #$05\r\n0001E70A:
    85 56     sta BossBlinkState\r\n++\r\n0001E70C: B9 69 EA  lda Boss6Strategies+0,y\r\n0001E70F:
    85 04     sta $04\r\n0001E711: B9 6A EA  lda Boss6Strategies+1,y\r\n0001E714:
    85 05     sta $05\r\n0001E716: 6C 04 00  jmp ($0004)\r\n\r\nBoss6Strategy0\r\n0001E719:
    C6 3F     dec BossVariable3F\r\n0001E71B: F0 01     beq +\r\n0001E71D: 60       
    rts\r\n+\r\n0001E71E: A2 02     ldx #$02\r\n-\r\n0001E720: BD 44 E7  lda E744_table,x\r\n0001E723:
    9D D5 03  sta BGPalettes + $5,x\r\n0001E726: CA        dex\r\n0001E727: 10 F7    
    bpl -\r\n0001E729: 20 3F C7  jsr PaletteSetupForBG\r\n0001E72C: E6 3E     inc
    BossCurrentStrategy\r\n0001E72E: AD 60 04  lda ObjectPosScreen+0                        
    ; $0460\r\n0001E731: 8D 61 04  sta ObjectPosScreen+1\r\n0001E734: A9 7A     lda
    #$7A\r\n0001E736: 8D 01 04  sta ObjectSpriteNum+1\r\n0001E739: A9 00     lda
    #$00\r\n0001E73B: 8D 41 06  sta ObjectFireDelay+1\r\n0001E73E: 8D A1 06  sta
    ObjectLifeCycleCounter+1\r\n0001E741: 85 44     sta BossVariable44\r\n0001E743:
    60        rts\r\n\r\n\r\nE744_table: ;colours for some purpose\r\n    .byte $07,$17,$27\r\n\r\n\r\nBoss6Strategy1\r\n0001E747:
    A5 3F     lda BossVariable3F\r\n0001E749: C9 13     cmp #$13\r\n0001E74B: F0
    20     beq $0001E76D\r\n0001E74D: A5 44     lda BossVariable44\r\n0001E74F: C9
    19     cmp #$19\r\n0001E751: F0 03     beq Boss6_CallCreatePiece1\r\n0001E753:
    E6 44     inc BossVariable44\r\n0001E755: 60        rts\r\n\r\n\r\n\r\n\r\nBoss6_CallCreatePiece1\r\n0001E756:
    A9 00     lda #$00\r\n0001E758: 85 44     sta BossVariable44\r\n0001E75A: 20
    2A E8  jsr Boss6_CreatePiece\r\n0001E75D: A9 08     lda #$08\r\n0001E75F: 9D
    80 04  sta ObjectPosX,x\r\n0001E762: A9 31     lda #$31\r\n0001E764: 9D 40 04 
    sta ObjectUnknown440,x\r\n0001E767: A0 24     ldy #$24\r\n0001E769: 20 33 F5 
    jsr InitObjectDefaultSpeed\r\n0001E76C: 60        rts\r\n\r\n\r\n\r\n\r\n\r\n0001E76D:
    E6 3E     inc BossCurrentStrategy\r\n0001E76F: A9 40     lda #$40\r\n0001E771:
    85 44     sta BossVariable44\r\n0001E773: 60        rts\r\n\r\n\r\n\r\n\r\n\r\nBoss6Strategy4\r\n0001E774:
    A5 3F     lda BossVariable3F\r\n0001E776: C9 26     cmp #$26\r\n0001E778: F0
    11     beq $0001E78B\r\n0001E77A: A5 44     lda BossVariable44\r\n0001E77C: C9
    19     cmp #$19\r\n0001E77E: F0 03     beq Boss6_CallCreatePiece2\r\n0001E780:
    E6 44     inc BossVariable44\r\n0001E782: 60        rts\r\n\r\n\r\n\r\n\r\nBoss6_CallCreatePiece2\r\n0001E783:
    A9 00     lda #$00\r\n0001E785: 85 44     sta BossVariable44\r\n0001E787: 20
    2A E8  jsr Boss6_CreatePiece\r\n0001E78A: 60        rts\r\n\r\n\r\n\r\n0001E78B:
    E6 3E     inc BossCurrentStrategy\r\n0001E78D: A9 30     lda #$30\r\n0001E78F:
    85 44     sta BossVariable44\r\n0001E791: A9 00     lda #$00\r\n0001E793: 85
    3F     sta BossVariable3F\r\n0001E795: 60        rts\r\n\r\n\r\n\r\nBoss6Strategy7\r\n0001E796:
    A5 3F     lda BossVariable3F\r\n0001E798: C9 13     cmp #$13\r\n0001E79A: D0
    DE     bne $0001E77A\r\n0001E79C: A9 30     lda #$30\r\n0001E79E: 85 44     sta
    BossVariable44\r\n0001E7A0: A9 07     lda #$07\r\n0001E7A2: 85 3E     sta BossCurrentStrategy\r\n0001E7A4:
    60        rts\r\n\r\n\r\nBoss6Strategy2\r\n0001E7A5: C6 44     dec BossVariable44\r\n0001E7A7:
    D0 2A     bne $0001E7D3\r\n0001E7A9: A9 05     lda #$05\r\n0001E7AB: 20 A0 C5 
    jsr RandomFunc\r\n; Specify the location for the eye\r\n0001E7AE: A8        tay\r\n0001E7AF:
    0A        asl a\r\n0001E7B0: AA        tax\r\n0001E7B1: A5 3E     lda BossCurrentStrategy\r\n0001E7B3:
    C9 07     cmp #$07\r\n0001E7B5: F0 01     beq $0001E7B8\r\n0001E7B7: E8       
    inx\r\n0001E7B8: BD 1B E8  lda Boss6_Xtable,x\r\n0001E7BB: 8D 81 04  sta ObjectPosX+1\r\n0001E7BE:
    B9 25 E8  lda Boss6_Ytable,y\r\n0001E7C1: 8D 01 06  sta ObjectPosY+1\r\n\r\n0001E7C4:
    A9 06     lda #$06\r\n0001E7C6: 8D 21 04  sta ObjectFlags+1\r\n\r\n0001E7C9:
    A9 00     lda #$00\r\n0001E7CB: 8D 41 04  sta ObjectUnknown440+1\r\n0001E7CE:
    20 D5 ED  jsr BossSearchMegaman\r\n0001E7D1: E6 3E     inc BossCurrentStrategy\r\n0001E7D3:
    60        rts\r\n\r\n\r\n\r\n\r\nBoss6Strategy3\r\n0001E7D4: AD 41 04  lda ObjectUnknown440+1\r\n0001E7D7:
    F0 36     beq Boss6_HideEye\r\n0001E7D9: C9 20     cmp #$20\r\n0001E7DB: 90 3D    
    bcc $0001E81A\r\n0001E7DD: F0 10     beq Boss6_Shoot\r\n0001E7DF: C9 30     cmp
    #$30\r\n0001E7E1: B0 37     bcs $0001E81A\r\n0001E7E3: A0 21     ldy #$21\r\n0001E7E5:
    C6 44     dec BossVariable44\r\n0001E7E7: D0 02     bne $0001E7EB\r\n0001E7E9:
    A0 30     ldy #$30\r\n0001E7EB: 8C 41 04  sty ObjectUnknown440+1\r\n0001E7EE:
    60        rts\r\n\r\n\r\nBoss6_Shoot\r\n0001E7EF: 20 D5 ED  jsr BossSearchMegaman\r\n0001E7F2:
    85 0C     sta $0C\r\n0001E7F4: A9 01     lda #$01\r\n0001E7F6: 85 2F     sta
    RefObjectNumber\r\n0001E7F8: A9 2D     lda #$2D\r\n0001E7FA: 20 63 F6  jsr CreateEnemy                                  
    ; $F663\r\n\r\n0001E7FD: B0 0B     bcs $0001E80A\r\n0001E7FF: A9 07     lda #$07\r\n0001E801:
    85 01     sta $01\r\n0001E803: A9 00     lda #$00\r\n0001E805: 85 00     sta
    $00\r\n0001E807: 20 28 F6  jsr $F628\r\n0001E80A: A9 3F     lda #$3F\r\n0001E80C:
    85 44     sta BossVariable44\r\n0001E80E: 60        rts\r\n\r\nBoss6_HideEye\r\n0001E80F:
    E6 3E     inc BossCurrentStrategy\r\n0001E811: A9 F8     lda #$F8\r\n0001E813:
    8D 01 06  sta ObjectPosY+1\r\n0001E816: A9 00     lda #$00\r\n0001E818: 85 56    
    sta BossBlinkState\r\n0001E81A: 60        rts\r\n\r\nBoss6_Xtable ;at E81B\r\n   
    .byte $B8,$48,$B5,$45,$B3,$43,$B4,$44,$B5,$45\r\nBoss6_Ytable ;at E825\r\n   
    .byte $55,$5A,$60,   $66,$6C ?\r\n\r\n\r\nBoss6_CreatePiece\r\n0001E82A: A9 00    
    lda #$00\r\n0001E82C: 85 2F     sta RefObjectNumber\r\n0001E82E: A9 38     lda
    #$38 ;Boss 6 piece\r\n0001E830: 20 63 F6  jsr CreateEnemy                                  
    ; $F663\r\n\r\n0001E833: B0 3D     bcs $0001E872\r\n0001E835: A4 3F     ldy BossVariable3F\r\n0001E837:
    C0 13     cpy #$13\r\n0001E839: B0 0A     bcs $0001E845\r\n0001E83B: A9 42    
    lda #$42\r\n0001E83D: 9D 20 04  sta ObjectFlags,x\r\n0001E840: B9 76 E9  lda
    E963_table+$13,y\r\n0001E843: D0 08     bne $0001E84D\r\n0001E845: A9 02    
    lda #$02\r\n0001E847: 9D 20 04  sta ObjectFlags,x\r\n0001E84A: B9 50 E9  lda
    E963_table-$13,y\r\n0001E84D: 29 F0     and #$F0\r\n0001E84F: 9D 80 04  sta ObjectPosX,x\r\n0001E852:
    B9 63 E9  lda E963_table+0,y\r\n0001E855: 48        pha\r\n0001E856: 29 F0    
    and #$F0\r\n0001E858: 9D C0 06  sta ObjectLifeMeter,x\r\n0001E85B: 68       
    pla\r\n0001E85C: 0A        asl a\r\n0001E85D: 0A        asl a\r\n0001E85E: 0A       
    asl a\r\n0001E85F: 0A        asl a\r\n0001E860: 09 08     ora #$08\r\n0001E862:
    9D 00 06  sta ObjectPosY,x\r\n0001E865: 98        tya\r\n0001E866: 0A       
    asl a\r\n0001E867: 0A        asl a\r\n0001E868: 9D 40 06  sta ObjectFireDelay,x\r\n0001E86B:
    A0 08     ldy #$08\r\n0001E86D: 20 33 F5  jsr InitObjectDefaultSpeed\r\n0001E870:
    E6 3F     inc BossVariable3F\r\n0001E872: 60        rts\r\n\r\n\r\n\r\n\r\n\r\n0001E873:
    BC 40 06  ldy ObjectFireDelay,x\r\n0001E876: B9 89 E9  lda $E989,y\r\n0001E879:
    C9 FF     cmp #$FF\r\n0001E87B: D0 22     bne $0001E89F\r\n0001E87D: B9 8B E9 
    lda $E98B,y\r\n0001E880: 85 05     sta $05\r\n0001E882: B9 8C E9  lda $E98C,y\r\n0001E885:
    85 04     sta $04\r\n0001E887: BE 8A E9  ldx $E98A,y\r\n0001E88A: 20 B3 E8  jsr
    $E8B3\r\n0001E88D: A6 2F     ldx RefObjectNumber\r\n0001E88F: 20 44 E9  jsr $E944\r\n0001E892:
    BC 40 06  ldy ObjectFireDelay,x\r\n0001E895: B9 8A E9  lda $E98A,y\r\n0001E898:
    09 04     ora #$04\r\n0001E89A: AA        tax\r\n0001E89B: 20 B3 E8  jsr $E8B3\r\n0001E89E:
    60        rts\r\n\r\n\r\n\r\n\r\n\r\n\r\n0001E89F: 20 44 E9  jsr $E944\r\n0001E8A2:
    A2 00     ldx #$00\r\n0001E8A4: B9 89 E9  lda $E989,y\r\n0001E8A7: 95 06    
    sta CurrentRoomPointer,x\r\n0001E8A9: C8        iny\r\n0001E8AA: E8        inx\r\n0001E8AB:
    E0 04     cpx #$04\r\n0001E8AD: D0 F5     bne $0001E8A4\r\n0001E8AF: 20 1D E9 
    jsr $E91D\r\n0001E8B2: 60        rts\r\n\r\n\r\n\r\n\r\n\r\n\r\n0001E8B3: A0
    00     ldy #$00\r\n0001E8B5: BD 21 EA  lda $EA21,x\r\n0001E8B8: 99 06 00  sta
    $0006,y\r\n0001E8BB: E8        inx\r\n0001E8BC: C8        iny\r\n0001E8BD: C0
    04     cpy #$04\r\n0001E8BF: D0 F4     bne $0001E8B5\r\n0001E8C1: 20 1D E9  jsr
    $E91D\r\n0001E8C4: 60        rts\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n0001E8C5:
    BD 40 06  lda ObjectFireDelay,x\r\n0001E8C8: C9 4C     cmp #$4C\r\n0001E8CA:
    B0 05     bcs +\r\n0001E8CC: 18        clc\r\n0001E8CD: 69 4C     adc #$4C\r\n0001E8CF:
    D0 03     bne ++\r\n+\r\n0001E8D1: 38        sec\r\n0001E8D2: E9 4C     sbc #$4C\r\n++\r\n0001E8D4:
    85 0C     sta $0C\r\n0001E8D6: A8        tay\r\n0001E8D7: B9 89 E9  lda $E989,y\r\n0001E8DA:
    C9 FF     cmp #$FF\r\n0001E8DC: D0 2A     bne +++\r\n0001E8DE: B9 8B E9  lda
    $E98B,y\r\n0001E8E1: 85 05     sta $05\r\n0001E8E3: B9 8C E9  lda $E98C,y\r\n0001E8E6:
    85 04     sta $04\r\n0001E8E8: C0 08     cpy #$08\r\n0001E8EA: D0 08     bne
    +\r\n0001E8EC: A2 40     ldx #$40\r\n0001E8EE: 20 B3 E8  jsr $E8B3\r\n0001E8F1:
    4C 03 E9  jmp ++\r\n+\r\n0001E8F4: C0 54     cpy #$54\r\n0001E8F6: D0 08    
    bne +\r\n0001E8F8: A2 44     ldx #$44\r\n0001E8FA: 20 B3 E8  jsr $E8B3\r\n0001E8FD:
    4C 03 E9  jmp ++\r\n+\r\n0001E900: 20 12 E9  jsr $E912\r\n++\r\n0001E903: 20
    1D E9  jsr $E91D\r\n0001E906: A4 0C     ldy $0C\r\n+++\r\n0001E908: 20 44 E9 
    jsr $E944\r\n0001E90B: 20 12 E9  jsr $E912\r\n0001E90E: 20 1D E9  jsr $E91D\r\n0001E911:
    60        rts\r\n\r\n\r\n0001E912: A9 00     lda #$00\r\n0001E914: 85 06    
    sta CurrentRoomPointer\r\n0001E916: 85 07     sta CurrentRoomPointer+1\r\n0001E918:
    85 08     sta CurrentRoomPointer+2\r\n0001E91A: 85 09     sta CurrentRoomPointer+3\r\n0001E91C:
    60        rts\r\n\r\n\r\n0001E91D: A5 AA     lda $AA\r\n0001E91F: 0A        asl
    a\r\n0001E920: A8        tay\r\n0001E921: A5 05     lda $05\r\n0001E923: 99 80
    03  sta RawPPUtransferAddress+0,y\r\n0001E926: A5 04     lda $04\r\n0001E928:
    99 81 03  sta RawPPUtransferAddress+1,y\r\n0001E92B: 98        tya\r\n0001E92C:
    0A        asl a\r\n0001E92D: A8        tay\r\n0001E92E: A2 00     ldx #$00\r\n0001E930:
    B5 06     lda CurrentRoomPointer,x\r\n0001E932: 99 94 03  sta $0394,y\r\n0001E935:
    C8        iny\r\n0001E936: E8        inx\r\n0001E937: E0 04     cpx #$04\r\n0001E939:
    D0 F5     bne $0001E930\r\n0001E93B: A6 2F     ldx RefObjectNumber\r\n0001E93D:
    E6 AA     inc $AA\r\n\r\n0001E93F: A9 FF     lda #$FF\r\n0001E941: 85 5E    
    sta RawPPUtransferSize\r\n0001E943: 60        rts\r\n\r\n\r\n\r\n\r\n\r\n\r\n0001E944:
    A9 09     lda #$09\r\n0001E946: 85 05     sta $05\r\n0001E948: BD 00 06  lda
    ObjectPosY,x\r\n0001E94B: 29 F0     and #$F0\r\n0001E94D: 0A        asl a\r\n0001E94E:
    26 05     rol $05\r\n0001E950: 0A        asl a\r\n0001E951: 26 05     rol $05\r\n0001E953:
    85 04     sta $04\r\n0001E955: 38        sec\r\n0001E956: BD 80 04  lda ObjectPosX,x\r\n0001E959:
    E9 08     sbc #$08\r\n0001E95B: 4A        lsr a\r\n0001E95C: 4A        lsr a\r\n0001E95D:
    4A        lsr a\r\n0001E95E: 05 04     ora $04\r\n0001E960: 85 04     sta $04\r\n0001E962:
    60        rts\r\n\r\nE963_table:\r\n    .byte $E8,$E7,$E9,$E6\r\n    .byte $D7,$D8,$D6,$D5\r\n   
    .byte $C9,$C8,$C7,$C5,$C6\r\n    .byte $B8,$B6,$B7,$B5\r\n    .byte $B9,$A7\r\n   
    .byte $28,$27,$29,$26\r\n    .byte $37,$38,$36,$35\r\n    .byte $49,$48,$47,$45,$46\r\n   
    .byte $58,$56,$57,$55,$59\r\n    .byte $67\r\nE989:   .byte $A1\r\nE98A:   .byte
    $00,$A8\r\nE98C:   .byte $A9,$96\r\n0001E98E: 97        .db $97     ; <invalid
    opcode>\r\n0001E98F: 9D 00 FF  sta $FF00,x\r\n0001E992: 00        brk\r\n0001E993:
    26 5D     rol $5D\r\n0001E995: FF        .db $FF     ; <invalid opcode>\r\n0001E996:
    08        php\r\n0001E997: 25 5B     and $5B\r\n0001E999: 87        .db $87    
    ; <invalid opcode>\r\n0001E99A: 95 87     sta $87,x\r\n0001E99C: 9C        .db
    $9C     ; <invalid opcode>\r\n0001E99D: FF        .db $FF     ; <invalid opcode>\r\n0001E99E:
    10 26     bpl $0001E9C6\r\n0001E9A0: 59 87 8B  eor $8B87,y\r\n0001E9A3: 87       
    .db $87     ; <invalid opcode>\r\n0001E9A4: 8F        .db $8F     ; <invalid
    opcode>\r\n0001E9A5: 84 85     sty $85\r\n0001E9A7: 87        .db $87     ; <invalid
    opcode>\r\n0001E9A8: 88        dey\r\n0001E9A9: AC 00 B3  ldy $B300\r\n0001E9AC:
    00        brk\r\n0001E9AD: 87        .db $87     ; <invalid opcode>\r\n0001E9AE:
    87        .db $87     ; <invalid opcode>\r\n0001E9AF: A4 A5     ldy $A5\r\n0001E9B1:
    87        .db $87     ; <invalid opcode>\r\n0001E9B2: 87        .db $87     ;
    <invalid opcode>\r\n0001E9B3: 87        .db $87     ; <invalid opcode>\r\n0001E9B4:
    87        .db $87     ; <invalid opcode>\r\n0001E9B5: 82        .db $82     ;
    <invalid opcode>\r\n0001E9B6: 83        .db $83     ; <invalid opcode>\r\n0001E9B7:
    87        .db $87     ; <invalid opcode>\r\n0001E9B8: 87        .db $87     ;
    <invalid opcode>\r\n0001E9B9: 87        .db $87     ; <invalid opcode>\r\n0001E9BA:
    87        .db $87     ; <invalid opcode>\r\n0001E9BB: 87        .db $87     ;
    <invalid opcode>\r\n0001E9BC: 87        .db $87     ; <invalid opcode>\r\n0001E9BD:
    9E        .db $9E     ; <invalid opcode>\r\n0001E9BE: 9F        .db $9F     ;
    <invalid opcode>\r\n0001E9BF: A2 A3     ldx #$A3\r\n0001E9C1: 8A        txa\r\n0001E9C2:
    87        .db $87     ; <invalid opcode>\r\n0001E9C3: 8E 87 94  stx $9487\r\n0001E9C6:
    87        .db $87     ; <invalid opcode>\r\n0001E9C7: 9A        txs\r\n0001E9C8:
    9B        .db $9B     ; <invalid opcode>\r\n0001E9C9: 80        .db $80     ;
    <invalid opcode>\r\n0001E9CA: 81 86     sta ($86,x)\r\n0001E9CC: 87        .db
    $87     ; <invalid opcode>\r\n0001E9CD: FF        .db $FF     ; <invalid opcode>\r\n0001E9CE:
    18        clc\r\n0001E9CF: 26 53     rol $53\r\n0001E9D1: 92        .db $92    
    ; <invalid opcode>\r\n0001E9D2: 93        .db $93     ; <invalid opcode>\r\n0001E9D3:
    98        tya\r\n0001E9D4: 99 00 EE  sta $EE00,y\r\n0001E9D7: E6 E7     inc $E7\r\n0001E9D9:
    D8        cld\r\n0001E9DA: D9 00 D2  cmp $D200,y\r\n0001E9DD: FF        .db $FF    
    ; <invalid opcode>\r\n0001E9DE: 20 26 41  jsr $4126\r\n0001E9E1: FF        .db
    $FF     ; <invalid opcode>\r\n0001E9E2: 28        plp\r\n0001E9E3: 25 43    
    and $43\r\n0001E9E5: DA        .db $DA     ; <invalid opcode>\r\n0001E9E6: 87       
    .db $87     ; <invalid opcode>\r\n0001E9E7: D3        .db $D3     ; <invalid
    opcode>\r\n0001E9E8: 87        .db $87     ; <invalid opcode>\r\n0001E9E9: FF       
    .db $FF     ; <invalid opcode>\r\n0001E9EA: 30 26     bmi $0001EA12\r\n0001E9EC:
    45 C4     eor $C4\r\n0001E9EE: 87        .db $87     ; <invalid opcode>\r\n0001E9EF:
    C0 87     cpy #$87\r\n0001E9F1: CA        dex\r\n0001E9F2: CB        .db $CB    
    ; <invalid opcode>\r\n0001E9F3: C7        .db $C7     ; <invalid opcode>\r\n0001E9F4:
    87        .db $87     ; <invalid opcode>\r\n0001E9F5: 00        brk\r\n0001E9F6:
    E3        .db $E3     ; <invalid opcode>\r\n0001E9F7: 00        brk\r\n0001E9F8:
    BA        tsx\r\n0001E9F9: 87        .db $87     ; <invalid opcode>\r\n0001E9FA:
    87        .db $87     ; <invalid opcode>\r\n0001E9FB: EA        nop\r\n0001E9FC:
    EB        .db $EB     ; <invalid opcode>\r\n0001E9FD: 87        .db $87     ;
    <invalid opcode>\r\n0001E9FE: 87        .db $87     ; <invalid opcode>\r\n0001E9FF:
    87        .db $87     ; <invalid opcode>\r\n0001EA00: 87        .db $87     ;
    <invalid opcode>\r\n0001EA01: CC CD 87  cpy $87CD\r\n0001EA04: 87        .db
    $87     ; <invalid opcode>\r\n0001EA05: 87        .db $87     ; <invalid opcode>\r\n0001EA06:
    87        .db $87     ; <invalid opcode>\r\n0001EA07: 87        .db $87     ;
    <invalid opcode>\r\n0001EA08: 87        .db $87     ; <invalid opcode>\r\n0001EA09:
    D0 D1     bne $0001E9DC\r\n0001EA0B: EC ED 87  cpx $87ED\r\n0001EA0E: C5 87    
    cmp $87\r\n0001EA10: C1 87     cmp ($87,x)\r\n0001EA12: DB        .db $DB    
    ; <invalid opcode>\r\n0001EA13: D4        .db $D4     ; <invalid opcode>\r\n0001EA14:
    D5 CE     cmp $CE,x\r\n0001EA16: CF        .db $CF     ; <invalid opcode>\r\n0001EA17:
    87        .db $87     ; <invalid opcode>\r\n0001EA18: C9 FF     cmp #$FF\r\n0001EA1A:
    38        sec\r\n0001EA1B: 26 4B     rol $4B\r\n0001EA1D: DC        .db $DC    
    ; <invalid opcode>\r\n0001EA1E: DD D6 D7  cmp $D7D6,x\r\n0001EA21: 00       
    brk\r\n0001EA22: 40        rti\r\n0001EA23: B6 41     ldx $41,y\r\n0001EA25:
    AE AF B4  ldx $B4AF\r\n0001EA28: B5 00     lda $00,x\r\n0001EA2A: 00        brk\r\n0001EA2B:
    89        .db $89     ; <invalid opcode>\r\n0001EA2C: 00        brk\r\n0001EA2D:
    8C 8D 90  sty $908D\r\n0001EA30: 91 00     sta ($00),y\r\n0001EA32: AD 00 00 
    lda $0000\r\n0001EA35: 87        .db $87     ; <invalid opcode>\r\n0001EA36:
    A0 A6     ldy #$A6\r\n0001EA38: A7        .db $A7     ; <invalid opcode>\r\n0001EA39:
    00        brk\r\n0001EA3A: 00        brk\r\n0001EA3B: 00        brk\r\n0001EA3C:
    B0 AA     bcs $0001E9E8\r\n0001EA3E: AB        .db $AB     ; <invalid opcode>\r\n0001EA3F:
    B1 B2     lda ($B2),y\r\n0001EA41: 18        clc\r\n0001EA42: 00        brk\r\n0001EA43:
    19 B7 E0  ora $E0B7,y\r\n0001EA46: E1 B8     sbc ($B8,x)\r\n0001EA48: B9 00 00 
    lda $0000,y\r\n0001EA4B: 00        brk\r\n0001EA4C: C6 C2     dec $C2\r\n0001EA4E:
    C3        .db $C3     ; <invalid opcode>\r\n0001EA4F: DE DF E2  dec $E2DF,x\r\n0001EA52:
    00        brk\r\n0001EA53: 00        brk\r\n0001EA54: 00        brk\r\n0001EA55:
    EF        .db $EF     ; <invalid opcode>\r\n0001EA56: 87        .db $87     ;
    <invalid opcode>\r\n0001EA57: E8        inx\r\n0001EA58: E9 00     sbc #$00\r\n0001EA5A:
    00        brk\r\n0001EA5B: BD 00 E4  lda $E400,x\r\n0001EA5E: E5 BB     sbc $BB\r\n0001EA60:
    BC 00 40  ldy $4000,x\r\n0001EA63: 00        brk\r\n0001EA64: 41 18     eor ($18,x)\r\n0001EA66:
    00        brk\r\n0001EA67: 19 00     .byte $19,$00\r\n\r\nBoss6Strategies: ;at
    EA69\r\n    .word Boss6Strategy0\r\n    .word Boss6Strategy1\r\n    .word Boss6Strategy2\r\n   
    .word Boss6Strategy3\r\n    .word Boss6Strategy4\r\n    .word Boss6Strategy2\r\n   
    .word Boss6Strategy3\r\n    .word Boss6Strategy7\r\n\r\nBossAI_Boss7\r\n0001EA79:
    A5 56     lda BossBlinkState\r\n0001EA7B: F0 0C     beq $0001EA89\r\n0001EA7D:
    C9 1F     cmp #$1F\r\n0001EA7F: 90 08     bcc $0001EA89\r\n0001EA81: A0 12    
    ldy #$12\r\n0001EA83: AD A1 06  lda ObjectLifeCycleCounter+1\r\n0001EA86: F0
    01     beq +\r\n0001EA88: 60        rts\r\n+\r\n0001EA89: B9 3B EC  lda Boss7Strategies+0,y\r\n0001EA8C:
    85 04     sta $04\r\n0001EA8E: B9 3C EC  lda Boss7Strategies+1,y\r\n0001EA91:
    85 05     sta $05\r\n0001EA93: 6C 04 00  jmp ($0004)\r\n0001EA96: 60        rts\r\n\r\n\r\n\r\n\r\n\r\n\r\nBoss7Strategy0\r\n0001EA97:
    A9 06     lda #$06\r\n0001EA99: 20 53 E4  jsr $E453\r\n0001EA9C: A9 60     lda
    #$60\r\n0001EA9E: 8D E1 04  sta ObjectXSpeedFraction+1\r\n0001EAA1: A9 01    
    lda #$01\r\n0001EAA3: 8D C1 04  sta ObjectXSpeed+1\r\n0001EAA6: 60        rts\r\n\r\n\r\n\r\n\r\n\r\nBoss7Strategy1\r\n0001EAA7:
    20 4D EB  jsr $EB4D\r\n0001EAAA: 90 07     bcc $0001EAB3\r\n0001EAAC: 20 9C E4 
    jsr ElecmanStrategy1\r\n0001EAAF: 20 B8 EA  jsr $EAB8\r\n0001EAB2: 60       
    rts\r\n\r\n0001EAB3: A9 08     lda #$08\r\n0001EAB5: 85 3E     sta BossCurrentStrategy\r\n0001EAB7:
    60        rts\r\n\r\n\r\n\r\n\r\n\r\n; If selected weapon is cutman or bombman
    then $401 = #$6E, else $401 = #$01\r\n0001EAB8: A0 6E     ldy #$6E\r\n0001EABA:
    A5 5F     lda WeaponSelect\r\n0001EABC: C9 01     cmp #$01\r\n0001EABE: F0 06    
    beq +                                       ; $EAC6\r\n0001EAC0: C9 03     cmp
    #$03\r\n0001EAC2: F0 02     beq +                                       ; $EAC6\r\n0001EAC4:
    A0 01     ldy #$01\r\n+\r\n0001EAC6: 8C 01 04  sty ObjectSpriteNum+1\r\n\r\n0001EAC9:
    A9 00     lda #$00\r\n0001EACB: 8D 41 06  sta ObjectFireDelay+1\r\n0001EACE:
    60        rts\r\n\r\n\r\n\r\n\r\nBoss7Strategy2\r\n0001EACF: 20 6B EB  jsr Boss7_DoWeaponAI\r\n0001EAD2:
    B0 0A     bcs +\r\n0001EAD4: A9 08     lda #$08\r\n-\r\n0001EAD6: E6 3E     inc
    BossCurrentStrategy\r\n0001EAD8: 85 3F     sta BossVariable3F\r\n0001EADA: 20
    F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001EADD: 60        rts\r\n+\r\n0001EADE:
    A9 00     lda #$00\r\n0001EAE0: F0 F4     beq - ;unconditional jump\r\n\r\n\r\nBoss7Strategy3\r\n0001EAE2:
    20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001EAE5: A5 3F     lda BossVariable3F\r\n0001EAE7:
    D0 04     bne +\r\n0001EAE9: 4C D3 E4  jmp $E4D3\r\n0001EAEC: 60        rts\r\n+\r\n0001EAED:
    C6 3F     dec BossVariable3F\r\n0001EAEF: 60        rts\r\n\r\n\r\n\r\nBoss7Strategy4\r\n0001EAF0:
    A9 09     lda #$09\r\n0001EAF2: 4C EA E4  jmp $E4EA\r\n\r\nBoss7Strategy5\r\n0001EAF5:
    4C 19 E5  jmp ElecmanStrategy5\r\n\r\nBoss7Strategy6\r\n0001EAF8: 20 4D EB  jsr
    $EB4D\r\n0001EAFB: 90 2A     bcc +++ ; EB27\r\n0001EAFD: A9 00     lda #$00\r\n0001EAFF:
    20 A4 E4  jsr $E4A4\r\n0001EB02: D0 17     bne ++ ; $EB1B\r\n; If selected weapon
    is cutman or bombman then $401 = #$6F, else $401 = #$09\r\n0001EB04: A0 6F    
    ldy #$6F\r\n0001EB06: A5 5F     lda WeaponSelect\r\n0001EB08: C9 01     cmp #$01\r\n0001EB0A:
    F0 06     beq +                                       ; $EB12\r\n0001EB0C: C9
    03     cmp #$03\r\n0001EB0E: F0 02     beq +                                      
    ; $EB12\r\n0001EB10: A0 09     ldy #$09\r\n+\r\n0001EB12: 8C 01 04  sty ObjectSpriteNum+1\r\n0001EB15:
    A9 00     lda #$00\r\n0001EB17: 8D 41 06  sta ObjectFireDelay+1\r\n0001EB1A:
    60        rts\r\n++\r\n0001EB1B: A9 00     lda #$00\r\n0001EB1D: 8D E1 04  sta
    ObjectXSpeedFraction+1\r\n0001EB20: 8D C1 04  sta ObjectXSpeed+1\r\n0001EB23:
    20 B8 EA  jsr $EAB8\r\n0001EB26: 60        rts\r\n+++\r\n0001EB27: A9 0D    
    lda #$0D\r\n0001EB29: 85 3E     sta BossCurrentStrategy\r\n0001EB2B: 60       
    rts\r\n\r\n\r\nBoss7Strategy7\r\n0001EB2C: 20 CF EA  jsr Boss7Strategy2\r\n0001EB2F:
    D0 EA     bne $0001EB1B\r\n0001EB31: 60        rts\r\n\r\nBoss7Strategy8\r\n0001EB32:
    20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001EB35: F0 0F     beq ++\r\n0001EB37:
    20 1B EB  jsr $EB1B\r\n0001EB3A: A5 3F     lda BossVariable3F\r\n0001EB3C: F0
    04     beq +\r\n0001EB3E: C6 3F     dec BossVariable3F\r\n0001EB40: D0 04    
    bne ++\r\n+\r\n0001EB42: A9 05     lda #$05\r\n0001EB44: 85 3E     sta BossCurrentStrategy\r\n++\r\n0001EB46:
    60        rts\r\n\r\n\r\n\r\nBoss7Strategy9\r\n0001EB47: A9 12     lda #$12\r\n0001EB49:
    20 16 EF  jsr BossFuncEF16\r\n0001EB4C: 60        rts\r\n\r\n\r\n; If selected
    weapon is magnet beam or ??? (fireman/iceman) then clear carry\r\n; else \r\n0001EB4D:
    A5 5F     lda WeaponSelect\r\n0001EB4F: C9 06     cmp #$06\r\n0001EB51: 90 02    
    bcc +                                       ; $EB55\r\n0001EB53: 18        clc\r\n0001EB54:
    60        rts\r\n+\r\n0001EB55: C9 01     cmp #$01\r\n0001EB57: F0 06     beq
    +                                       ; $EB5F\r\n0001EB59: C9 03     cmp #$03\r\n0001EB5B:
    F0 06     beq ++                                      ; $EB63\r\n0001EB5D: 38       
    sec\r\n0001EB5E: 60        rts\r\n+\r\n0001EB5F: A9 33     lda #$33\r\n0001EB61:
    D0 02     bne +++ ;$EB65\r\n++\r\n0001EB63: A9 35     lda #$35\r\n+++\r\n0001EB65:
    85 0C     sta $0C\r\n0001EB67: 20 16 F5  jsr FindObjectOfSelectedType\r\n0001EB6A:
    60        rts\r\n\r\n\r\nBoss7_DoWeaponAI\r\n0001EB6B: A9 01     lda #$01\r\n0001EB6D:
    85 2F     sta RefObjectNumber\r\n0001EB6F: A6 5F     ldx WeaponSelect\r\n0001EB71:
    B5 6A     lda Meters,x\r\n0001EB73: F0 5A     beq Boss7_NoWeaponAI\r\n0001EB75:
    8A        txa\r\n0001EB76: 0A        asl a\r\n0001EB77: A8        tay\r\n0001EB78:
    B9 2B EC  lda Boss7WeaponAItable+0,y\r\n0001EB7B: 85 04     sta $04\r\n0001EB7D:
    B9 2C EC  lda Boss7WeaponAItable+1,y\r\n0001EB80: 85 05     sta $05\r\n0001EB82:
    6C 04 00  jmp ($0004)\r\n\r\n\r\nBoss7_WeaponAI_P\r\n0001EB85: A9 0D     lda
    #$0D\r\n0001EB87: 20 17 EE  jsr Boss_FindAmmoSlot\r\n0001EB8A: B0 43     bcs
    Boss7_NoWeaponAI\r\n0001EB8C: A9 00     lda #$00\r\n0001EB8E: 9D E0 04  sta ObjectXSpeedFraction,x\r\n0001EB91:
    A9 04     lda #$04\r\n0001EB93: 9D C0 04  sta ObjectXSpeed,x\r\n0001EB96: 18       
    clc\r\n0001EB97: 60        rts\r\n\r\nBoss7_WeaponAI_C\r\n0001EB98: A9 33    
    lda #$33\r\n0001EB9A: 20 63 F6  jsr CreateEnemy                                  
    ; $F663\r\n0001EB9D: B0 30     bcs Boss7_NoWeaponAI\r\n0001EB9F: A0 78     ldy
    #$78\r\nBoss7_FinishShot\r\n0001EBA1: 20 33 F5  jsr InitObjectDefaultSpeed\r\n0001EBA4:
    18        clc\r\n0001EBA5: 60        rts\r\n\r\nBoss7_WeaponAI_I\r\n0001EBA6:
    A9 34     lda #$34\r\n0001EBA8: 20 63 F6  jsr CreateEnemy                                  
    ; $F663\r\n0001EBAB: B0 22     bcs Boss7_NoWeaponAI\r\n0001EBAD: A0 24     ldy
    #$24\r\n0001EBAF: D0 F0     bne Boss7_FinishShot\r\n\r\nBoss7_WeaponAI_B\r\n0001EBB1:
    A9 35     lda #$35\r\n0001EBB3: 20 63 F6  jsr CreateEnemy                                  
    ; $F663\r\n0001EBB6: B0 17     bcs Boss7_NoWeaponAI\r\n0001EBB8: A9 03     lda
    #$03\r\n0001EBBA: 85 49     sta $49\r\n0001EBBC: BD 20 04  lda ObjectFlags,x\r\n0001EBBF:
    29 40     and #$40\r\n0001EBC1: 09 11     ora #$11\r\n0001EBC3: 9D 20 04  sta
    ObjectFlags,x\r\n0001EBC6: A9 90     lda #$90\r\n0001EBC8: 9D 40 06  sta ObjectFireDelay,x\r\n0001EBCB:
    A0 7C     ldy #$7C\r\n0001EBCD: D0 D2     bne Boss7_FinishShot\r\n\r\nBoss7_NoWeaponAI\r\n0001EBCF:
    38        sec\r\n0001EBD0: 60        rts\r\n\r\nBoss7_WeaponAI_F\r\n0001EBD1:
    A9 36     lda #$36\r\n0001EBD3: 20 63 F6  jsr CreateEnemy                                  
    ; $F663\r\n0001EBD6: B0 F7     bcs Boss7_NoWeaponAI\r\n0001EBD8: A0 24     ldy
    #$24\r\n0001EBDA: 20 33 F5  jsr InitObjectDefaultSpeed\r\n0001EBDD: A9 37    
    lda #$37\r\n0001EBDF: 20 63 F6  jsr CreateEnemy                                  
    ; $F663\r\n0001EBE2: B0 EB     bcs Boss7_NoWeaponAI\r\n0001EBE4: A9 20     lda
    #$20\r\n0001EBE6: 9D 40 06  sta ObjectFireDelay,x\r\n0001EBE9: A0 08     ldy
    #$08\r\n0001EBEB: D0 B4     bne Boss7_FinishShot\r\nBoss7_WeaponAI_E\r\n0001EBED:
    A9 07     lda #$07\r\n0001EBEF: 85 0C     sta $0C\r\n0001EBF1: 20 17 EE  jsr
    Boss_FindAmmoSlot\r\n0001EBF4: B0 D9     bcs Boss7_NoWeaponAI\r\n0001EBF6: A9
    50     lda #$50\r\n0001EBF8: 9D E0 04  sta ObjectXSpeedFraction,x\r\n0001EBFB:
    A9 01     lda #$01\r\n0001EBFD: 9D C0 04  sta ObjectXSpeed,x\r\n0001EC00: E6
    44     inc BossVariable44\r\n0001EC02: E6 0C     inc $0C\r\n0001EC04: A5 0C    
    lda $0C\r\n0001EC06: C9 0C     cmp #$0C\r\n0001EC08: D0 E5     bne $0001EBEF\r\n0001EC0A:
    A5 AC     lda FightingBossNum\r\n0001EC0C: C9 07     cmp #$07\r\n0001EC0E: D0
    19     bne $0001EC29\r\n0001EC10: A9 0E     lda #$0E\r\n0001EC12: 85 0C     sta
    $0C\r\n0001EC14: 20 17 EE  jsr Boss_FindAmmoSlot\r\n0001EC17: B0 B6     bcs Boss7_NoWeaponAI\r\n0001EC19:
    A9 00     lda #$00\r\n0001EC1B: 9D E0 04  sta ObjectXSpeedFraction,x\r\n0001EC1E:
    9D C0 04  sta ObjectXSpeed,x\r\n0001EC21: E6 0C     inc $0C\r\n0001EC23: A5 0C    
    lda $0C\r\n0001EC25: C9 10     cmp #$10\r\n0001EC27: D0 E9     bne $0001EC12\r\n0001EC29:
    18        clc\r\n0001EC2A: 60        rts\r\n\r\n\r\nBoss7WeaponAItable: ; at
    EC2B\r\n    .word Boss7_WeaponAI_P ;P\r\n    .word Boss7_WeaponAI_C ;C\r\n   
    .word Boss7_WeaponAI_I ;I\r\n    .word Boss7_WeaponAI_B ;B\r\n    .word Boss7_WeaponAI_F
    ;F\r\n    .word Boss7_WeaponAI_E ;E\r\n    .word Boss7_NoWeaponAI ;G (idle)\r\n   
    .word Boss7_NoWeaponAI ;M (idle)\r\n\r\nBoss7Strategies: ; at EC3B\r\n    .word
    Boss7Strategy0\r\n    .word Boss7Strategy1\r\n    .word Boss7Strategy2\r\n   
    .word Boss7Strategy3\r\n    .word Boss7Strategy4\r\n    .word Boss7Strategy5\r\n   
    .word Boss7Strategy6\r\n    .word Boss7Strategy7\r\n    .word Boss7Strategy8\r\n   
    .word Boss7Strategy9\r\n\r\nBossAI_Boss8\r\n0001EC4F: A5 3E     lda BossCurrentStrategy\r\n0001EC51:
    C9 06     cmp #$06\r\n0001EC53: B0 10     bcs +\r\n0001EC55: C6 44     dec BossVariable44\r\n0001EC57:
    D0 0E     bne ++\r\n0001EC59: A9 00     lda #$00\r\n0001EC5B: 85 44     sta BossVariable44\r\n0001EC5D:
    E6 3E     inc BossCurrentStrategy\r\n0001EC5F: 85 2F     sta RefObjectNumber\r\n0001EC61:
    20 A6 F4  jsr $F4A6\r\n0001EC64: 60        rts\r\n+\r\n0001EC65: D0 01     bne
    +++\r\n-\r\n++\r\n0001EC67: 60        rts\r\n+++\r\n0001EC68: AD C1 06  lda ObjectLifeMeter+1\r\n0001EC6B:
    D0 03     bne +                                           ; $EC70\r\n0001EC6D:
    4C 5A C0  jmp StageClear                                  ; $C05A\r\n+\r\n0001EC70:
    C6 3F     dec BossVariable3F\r\n0001EC72: D0 F3     bne -\r\n0001EC74: 20 A6
    F4  jsr $F4A6\r\n0001EC77: B0 EE     bcs -\r\n0001EC79: C6 3E     dec BossCurrentStrategy\r\n0001EC7B:
    60        rts\r\n\r\n\r\n\r\n\r\n\r\nBossAI_Boss9\r\n0001EC7C: EE B1 06  inc
    $06B1\r\n0001EC7F: 20 B8 EC  jsr BossAI_funcECB8\r\n0001EC82: A9 00     lda #$00\r\n0001EC84:
    85 0C     sta $0C\r\n0001EC86: 20 D5 ED  jsr BossSearchMegaman\r\n0001EC89: 38       
    sec\r\n0001EC8A: E9 08     sbc #$08\r\n0001EC8C: 90 02     bcc +\r\n0001EC8E:
    85 0C     sta $0C\r\n+\r\n0001EC90: C6 44     dec BossVariable44\r\n0001EC92:
    D0 23     bne +\r\n0001EC94: A9 20     lda #$20\r\n0001EC96: 85 44     sta BossVariable44\r\n0001EC98:
    A6 0C     ldx $0C\r\n0001EC9A: A0 00     ldy #$00\r\n0001EC9C: A9 33     lda
    #$33\r\n0001EC9E: 20 AC C5  jsr EnemyCalculateJumpCurveToHitMegaman\r\n0001ECA1:
    A2 16     ldx #$16\r\n0001ECA3: 20 76 C5  jsr FindFreeObject                             
    ; FindFreeObject\r\n0001ECA6: B0 0F     bcs +\r\n0001ECA8: A0 70     ldy #$70\r\n0001ECAA:
    20 27 EE  jsr $EE27\r\n0001ECAD: A5 05     lda $05\r\n0001ECAF: 9D C0 04  sta
    ObjectXSpeed,x\r\n0001ECB2: A5 04     lda $04\r\n0001ECB4: 9D E0 04  sta ObjectXSpeedFraction,x\r\n+\r\n0001ECB7:
    60        rts\r\n\r\n\r\n\r\n\r\nBossAI_funcECB8\r\n0001ECB8: A9 01     lda #$01\r\n0001ECBA:
    85 2F     sta RefObjectNumber\r\n0001ECBC: A5 56     lda BossBlinkState\r\n0001ECBE:
    F0 0B     beq $0001ECCB\r\n0001ECC0: C9 04     cmp #$04\r\n0001ECC2: D0 07    
    bne $0001ECCB\r\n0001ECC4: 20 4F C7  jsr PaletteSetupForBGwith3F0\r\n0001ECC7:
    A9 08     lda #$08\r\n0001ECC9: 85 37     sta PaletteUpdateDelay\r\n0001ECCB:
    A6 3E     ldx BossCurrentStrategy\r\n0001ECCD: 18        clc\r\n0001ECCE: BD
    34 ED  lda ED39_table-5+0,x\r\n0001ECD1: 85 0C     sta $0C\r\n0001ECD3: BD 36
    ED  lda ED39_table-5+2,x\r\n0001ECD6: 85 0D     sta $0D\r\n0001ECD8: BD 38 ED 
    lda ED39_table-5+4,x\r\n0001ECDB: 85 0E     sta $0E\r\n0001ECDD: A2 01     ldx
    #$01\r\n0001ECDF: 20 1F ED  jsr UpdateObjectMoveHorizontally ; Update object
    $01\r\n0001ECE2: A2 10     ldx #$10\r\n0001ECE4: A0 00     ldy #$00\r\n0001ECE6:
    20 1F ED  jsr UpdateObjectMoveHorizontally ; Update object $10\r\n0001ECE9: B9
    3F ED  lda ED3F_table,y\r\n0001ECEC: 9D 00 06  sta ObjectPosY,x\r\n0001ECEF:
    E8        inx\r\n0001ECF0: C8        iny\r\n0001ECF1: C0 06     cpy #$06\r\n0001ECF3:
    D0 F1     bne $0001ECE6\r\n0001ECF5: AD 90 04  lda $0490\r\n0001ECF8: A6 3E    
    ldx BossCurrentStrategy\r\n0001ECFA: E0 05     cpx #$05\r\n0001ECFC: D0 08    
    bne $0001ED06\r\n0001ECFE: C9 6C     cmp #$6C\r\n0001ED00: B0 0A     bcs $0001ED0C\r\n0001ED02:
    E6 3E     inc BossCurrentStrategy\r\n0001ED04: D0 06     bne $0001ED0C\r\n0001ED06:
    C9 EC     cmp #$EC\r\n0001ED08: 90 02     bcc $0001ED0C\r\n0001ED0A: C6 3E    
    dec BossCurrentStrategy\r\n\r\n0001ED0C: 38        sec\r\n0001ED0D: A9 AC    
    lda #$AC\r\n0001ED0F: ED 90 04  sbc $0490\r\n0001ED12: 85 B2     sta TempScrollPosX\r\n\r\n0001ED14:
    A5 1B     lda ScrollPosScreen\r\n0001ED16: E9 00     sbc #$00\r\n0001ED18: 85
    B3     sta TempScrollPosScreen\r\n\r\n0001ED1A: A9 01     lda #$01\r\n0001ED1C:
    85 B4     sta UseTempScrollX\r\n0001ED1E: 60        rts\r\n\r\n\r\n\r\n\r\n;
    Adds the value of $0C into ObjectPosXfraction\r\n; Adds the value of $0D into
    ObjectPosX\r\n; Adds the value of $0E into ObjectPosScreen\r\nUpdateObjectMoveHorizontally 
    ; Different from ObjectRelocateHorizontally\r\n0001ED1F: 18        clc\r\n0001ED20:
    BD A0 04  lda ObjectPosXfraction,x\r\n0001ED23: 65 0C     adc $0C\r\n0001ED25:
    9D A0 04  sta ObjectPosXfraction,x\r\n0001ED28: BD 80 04  lda ObjectPosX,x\r\n0001ED2B:
    65 0D     adc $0D\r\n0001ED2D: 9D 80 04  sta ObjectPosX,x\r\n0001ED30: BD 60
    04  lda ObjectPosScreen,x\r\n0001ED33: 65 0E     adc $0E\r\n0001ED35: 9D 60 04 
    sta ObjectPosScreen,x\r\n0001ED38: 60        rts\r\n\r\nED39_table:\r\n    .byte
    $AE,$52\r\n    .byte $FF,$00\r\n    .byte $FF,$00\r\nED3F_table:\r\n    .byte
    $46,$F8,$7B,$63,$93,$77\r\n\r\nBossAI_Boss10\r\n0001ED45: 20 B8 EC  jsr BossAI_funcECB8\r\n0001ED48:
    A9 73     lda #$73\r\n0001ED4A: 8D 11 06  sta $0611\r\n0001ED4D: C6 44     dec
    BossVariable44\r\n0001ED4F: D0 3A     bne $0001ED8B\r\n0001ED51: A9 7E     lda
    #$7E\r\n0001ED53: 85 44     sta BossVariable44\r\n0001ED55: 20 D5 ED  jsr BossSearchMegaman\r\n0001ED58:
    85 0C     sta $0C\r\n0001ED5A: A9 01     lda #$01\r\n0001ED5C: 85 2F     sta
    RefObjectNumber\r\n0001ED5E: A2 16     ldx #$16\r\n0001ED60: 20 76 C5  jsr FindFreeObject                             
    ; FindFreeObject\r\n0001ED63: B0 26     bcs $0001ED8B\r\n0001ED65: A0 77    
    ldy #$77\r\n0001ED67: 20 27 EE  jsr $EE27\r\n0001ED6A: A9 49     lda #$49\r\n0001ED6C:
    9D E0 06  sta ObjectType,x\r\n0001ED6F: 86 2F     stx RefObjectNumber\r\n0001ED71:
    A9 02     lda #$02\r\n0001ED73: 85 01     sta $01\r\n0001ED75: A9 00     lda
    #$00\r\n0001ED77: 85 00     sta $00\r\n0001ED79: 20 28 F6  jsr $F628\r\n; ?\r\n0001ED7C:
    A2 16     ldx #$16\r\n0001ED7E: 20 76 C5  jsr FindFreeObject                             
    ; FindFreeObject\r\n; ??\r\n0001ED81: A9 48     lda #$48\r\n0001ED83: 20 7B F6 
    jsr InitActor\r\n; Object $48 stores the index of object $49 in ObjectLifeMeter.\r\n0001ED86:
    A5 2F     lda RefObjectNumber\r\n0001ED88: 9D C0 06  sta ObjectLifeMeter,x\r\n\r\n0001ED8B:
    A9 06     lda #$06\r\n0001ED8D: 8D 21 04  sta ObjectFlags+1\r\n\r\n0001ED90:
    60        rts\r\n\r\n\r\n; Table of boss $0401 values. Sprite number? Or something\r\nBossInitialStatus:
    ; at ED91\r\n    .byte $1C,$20,$1E,$22,$24,$26\r\n    .byte $00,$00,$00\r\nBossInitialXcoord:
    ; at ED9A\r\n    .byte $C0,$C0,$C0,$C0,$C0,$C0\r\n    .byte $C0,$B0,$00\r\nBossInitialYcoord:\r\n   
    .byte $B4,$B4,$B4,$B4,$B4,$B0\r\n    .byte $B4,$B4,$00\r\n\r\n; Table of boss
    strategy routines?\r\nBossAI_Table: ;at EDAC\r\n    .word BossAI_Cutman\r\n   
    .word BossAI_Iceman\r\n    .word BossAI_Bombman\r\n    .word BossAI_Fireman\r\n   
    .word BossAI_Elecman\r\n    .word BossAI_Gutsman\r\n    .word BossAI_Boss6\r\n   
    .word BossAI_Boss7\r\n    .word BossAI_Boss8\r\n    .word BossAI_Boss9\r\n   
    .word BossAI_Boss10\r\n\r\nBossFuncEDC2:\r\n0001EDC2: A5 43     lda BossVariable43\r\n0001EDC4:
    29 BF     and #$BF\r\n0001EDC6: 85 43     sta BossVariable43\r\n0001EDC8: 20
    D5 ED  jsr BossSearchMegaman\r\n0001EDCB: AD 21 04  lda ObjectFlags+1\r\n0001EDCE:
    29 40     and #$40\r\n0001EDD0: 05 43     ora BossVariable43\r\n0001EDD2: 85
    43     sta BossVariable43\r\n0001EDD4: 60        rts\r\n\r\n\r\nBossSearchMegaman:\r\n0001EDD5:
    38        sec\r\n0001EDD6: AD 80 04  lda ObjectPosX+0\r\n0001EDD9: ED 81 04 
    sbc ObjectPosX+1\r\n0001EDDC: 90 0B     bcc +\r\n0001EDDE: 48        pha\r\n0001EDDF:
    AD 21 04  lda ObjectFlags+1\r\n0001EDE2: 09 40     ora #$40\r\n0001EDE4: 8D 21
    04  sta ObjectFlags+1\r\n0001EDE7: 68        pla\r\n0001EDE8: 60        rts\r\n+\r\n0001EDE9:
    49 FF     eor #$FF\r\n0001EDEB: 69 01     adc #$01\r\n0001EDED: 48        pha\r\n0001EDEE:
    AD 21 04  lda ObjectFlags+1\r\n0001EDF1: 29 BF     and #$BF\r\n0001EDF3: 8D 21
    04  sta ObjectFlags+1\r\n0001EDF6: 68        pla\r\n0001EDF7: 60        rts\r\n\r\nBossFuncWalkTowardsMegaman:\r\n0001EDF8:
    20 D5 ED  jsr BossSearchMegaman\r\n0001EDFB: A2 01     ldx #$01\r\n0001EDFD:
    86 2F     stx RefObjectNumber\r\n0001EDFF: A5 43     lda BossVariable43\r\n0001EE01:
    29 40     and #$40\r\n0001EE03: F0 06     beq +\r\n0001EE05: 20 F1 9D  jsr ObjectMoveToTheRight\r\n0001EE08:
    4C 0E EE  jmp ++\r\n+\r\n0001EE0B: 20 6F 9E  jsr ObjectMoveToTheLeft\r\n++\r\n0001EE0E:
    20 D8 98  jsr ObjectRelocateHorizontally\r\n0001EE11: 20 C4 9B  jsr ObjectDoCollisionChecksAndAvoidWalls\r\n0001EE14:
    A5 2B     lda $2B\r\n0001EE16: 60        rts\r\n\r\n\r\nBoss_FindAmmoSlot\r\n0001EE17:
    85 0D     sta $0D\r\n0001EE19: 0A        asl a\r\n0001EE1A: 0A        asl a\r\n0001EE1B:
    0A        asl a\r\n0001EE1C: 38        sec\r\n0001EE1D: E5 0D     sbc $0D\r\n0001EE1F:
    A8        tay\r\n0001EE20: A2 10     ldx #$10\r\n0001EE22: 20 76 C5  jsr FindFreeObject                             
    ; FindFreeObject\r\n0001EE25: B0 70     bcs $0001EE97\r\n; Reset object (param:
    Y - values: 1C, 70 or 77)\r\n0001EE27: A9 00     lda #$00\r\n0001EE29: 9D A0
    06  sta ObjectLifeCycleCounter,x\r\n0001EE2C: 9D 20 06  sta ObjectPosYfraction,x\r\n0001EE2F:
    9D A0 04  sta ObjectPosXfraction,x\r\n0001EE32: 9D 40 06  sta ObjectFireDelay,x\r\n0001EE35:
    B9 98 EE  lda EE98_table+0,y\r\n0001EE38: 9D 00 04  sta ObjectSpriteNum,x\r\n0001EE3B:
    AD 21 04  lda ObjectFlags+1\r\n0001EE3E: 29 40     and #$40\r\n0001EE40: 08       
    php\r\n0001EE41: 19 99 EE   ora EE98_table+1,y\r\n0001EE44: 9D 20 04   sta ObjectFlags,x\r\n0001EE47:
    B9 9A EE   lda EE98_table+2,y\r\n0001EE4A: 9D 40 04   sta ObjectUnknown440,x\r\n0001EE4D:
    B9 9B EE   lda EE98_table+3,y\r\n0001EE50: 9D 60 06   sta ObjectYSpeedFraction,x\r\n0001EE53:
    B9 9C EE   lda EE98_table+4,y\r\n0001EE56: 9D 80 06   sta ObjectYSpeed,x\r\n0001EE59:
    18         clc\r\n0001EE5A: AD 01 06   lda ObjectPosY+1\r\n0001EE5D: 79 9D EE  
    adc EE98_table+5,y\r\n0001EE60: 9D 00 06   sta ObjectPosY,x\r\n0001EE63: AD 81
    04   lda ObjectPosX+1\r\n0001EE66: 28        plp\r\n0001EE67: F0 0F     beq +\r\n0001EE69:
    18        clc\r\n0001EE6A: 79 9E EE  adc $EE9E,y\r\n0001EE6D: 9D 80 04  sta ObjectPosX,x\r\n0001EE70:
    AD 61 04  lda ObjectPosScreen+1\r\n0001EE73: 69 00     adc #$00\r\n0001EE75:
    4C 84 EE  jmp ++\r\n+\r\n0001EE78: 38        sec\r\n0001EE79: F9 9E EE  sbc $EE9E,y\r\n0001EE7C:
    9D 80 04  sta ObjectPosX,x\r\n0001EE7F: AD 61 04  lda ObjectPosScreen+1\r\n0001EE82:
    E9 00     sbc #$00\r\n++\r\n0001EE84: 9D 60 04  sta ObjectPosScreen,x\r\n0001EE87:
    20 3D C5  jsr C53D_routine\r\n0001EE8A: A5 0D     lda $0D\r\n0001EE8C: C9 03    
    cmp #$03\r\n0001EE8E: D0 06     bne $0001EE96\r\n0001EE90: AD 61 04  lda ObjectPosScreen+1\r\n0001EE93:
    9D 60 04  sta ObjectPosScreen,x\r\n0001EE96: 18        clc\r\n0001EE97: 60       
    rts\r\n\r\nEE98_table:\r\n    ; Values for\r\n    ;   SpriteNum\r\n    ;   Flags\r\n   
    ;   Unknown440\r\n    ;   YSpeedFraction\r\n    ;   YSpeed\r\n    ;   YPos increment\r\n   
    .byte $27,$13,$01,$B0,$05,$F5\r\n    .byte $08,$36,$0A,$01,$00,$00\r\n0001EEA4:
    F8        sed\r\n0001EEA5: 08        php\r\n0001EEA6: 32        .db $32     ;
    <invalid opcode>\r\n0001EEA7: 03        .db $03     ; <invalid opcode>\r\n0001EEA8:
    00        brk\r\n0001EEA9: 00        brk\r\n0001EEAA: 00        brk\r\n0001EEAB:
    E8        inx\r\n0001EEAC: 10 32     bpl $0001EEE0\r\n0001EEAE: 18        clc\r\n0001EEAF:
    14        .db $14     ; <invalid opcode>\r\n0001EEB0: 40        rti\r\n0001EEB1:
    FF        .db $FF     ; <invalid opcode>\r\n0001EEB2: 00        brk\r\n0001EEB3:
    F6 38     inc $38,x\r\n0001EEB5: 0A        asl a\r\n0001EEB6: 01 00     ora ($00,x)\r\n0001EEB8:
    00        brk\r\n0001EEB9: 04        .db $04     ; <invalid opcode>\r\n0001EEBA:
    00        brk\r\n0001EEBB: 3A        .db $3A     ; <invalid opcode>\r\n0001EEBC:
    02        .db $02     ; <invalid opcode>\r\n0001EEBD: 00        brk\r\n0001EEBE:
    00        brk\r\n0001EEBF: 00        brk\r\n0001EEC0: FE 08 45  inc $4508,x\r\n0001EEC3:
    02        .db $02     ; <invalid opcode>\r\n0001EEC4: 00        brk\r\n0001EEC5:
    00        brk\r\n0001EEC6: 00        brk\r\n0001EEC7: F6 08     inc $08,x\r\n0001EEC9:
    4C 0A 40  jmp $400A\r\n0001EECC: 00        brk\r\n0001EECD: 00        brk\r\n0001EECE:
    FC        .db $FC     ; <invalid opcode>\r\n0001EECF: 14        .db $14     ;
    <invalid opcode>\r\n0001EED0: 4D 0A 30  eor $300A\r\n0001EED3: 00        brk\r\n0001EED4:
    00        brk\r\n0001EED5: 08        php\r\n0001EED6: 18        clc\r\n0001EED7:
    4E 0A 20  lsr $200A\r\n0001EEDA: 00        brk\r\n0001EEDB: 00        brk\r\n0001EEDC:
    FC        .db $FC     ; <invalid opcode>\r\n0001EEDD: 1C        .db $1C     ;
    <invalid opcode>\r\n0001EEDE: 4F        .db $4F     ; <invalid opcode>\r\n0001EEDF:
    0A        asl a\r\n0001EEE0: 10 00     bpl $0001EEE2\r\n0001EEE2: 00        brk\r\n0001EEE3:
    EC 24 50  cpx $5024\r\n0001EEE6: 0A        asl a\r\n0001EEE7: 01 00     ora ($00,x)\r\n0001EEE9:
    00        brk\r\n0001EEEA: EC 2C 27  cpx $272C\r\n0001EEED: 18        clc\r\n0001EEEE:
    01 30     ora ($30,x)\r\n0001EEF0: 03        .db $03     ; <invalid opcode>\r\n0001EEF1:
    EC 06 1A  cpx $1A06\r\n0001EEF4: 02        .db $02     ; <invalid opcode>\r\n0001EEF5:
    00        brk\r\n0001EEF6: 00        brk\r\n0001EEF7: 00        brk\r\n0001EEF8:
    00        brk\r\n0001EEF9: 10 77     bpl $0001EF72\r\n0001EEFB: 02        .db
    $02     ; <invalid opcode>\r\n0001EEFC: 00        brk\r\n0001EEFD: 00       
    brk\r\n0001EEFE: 06 F0     asl $F0\r\n0001EF00: 10 78     bpl $0001EF7A\r\n0001EF02:
    02        .db $02     ; <invalid opcode>\r\n0001EF03: 00        brk\r\n0001EF04:
    00        brk\r\n0001EF05: FA        .db $FA     ; <invalid opcode>\r\n0001EF06:
    10 10     bpl $0001EF18\r\n0001EF08: 86 12     stx $12\r\n0001EF0A: 00       
    brk\r\n0001EF0B: E3        .db $E3     ; <invalid opcode>\r\n0001EF0C: 04       
    .db $04     ; <invalid opcode>\r\n0001EF0D: F8        sed\r\n0001EF0E: 08       
    php\r\n0001EF0F: FF        .db $FF     ; <invalid opcode>\r\n0001EF10: 20 00
    00  jsr $0000\r\n0001EF13: 00        brk\r\n0001EF14: 04        .db $04     ;
    <invalid opcode>\r\n0001EF15: 08        php\r\n\r\nBossFuncEF16\r\n0001EF16:
    CD 01 04  cmp ObjectSpriteNum+1\r\n0001EF19: F0 17     beq +++\r\n0001EF1B: 8D
    01 04  sta ObjectSpriteNum+1\r\n0001EF1E: 20 36 EF  jsr ++++\r\n0001EF21: A5
    AC     lda FightingBossNum\r\n0001EF23: F0 09     beq +\r\n0001EF25: A9 00    
    lda #$00\r\n0001EF27: 8D 41 06  sta ObjectFireDelay+1\r\n0001EF2A: A9 05    
    lda #$05\r\n0001EF2C: D0 02     bne ++\r\n+\r\n0001EF2E: A9 0E     lda #$0E\r\n++\r\n0001EF30:
    85 3E     sta BossCurrentStrategy\r\n+++\r\n0001EF32: 20 F8 ED  jsr BossFuncWalkTowardsMegaman\r\n0001EF35:
    60        rts\r\n++++\r\n0001EF36: 20 C2 ED  jsr BossFuncEDC2\r\n0001EF39: A5
    43     lda BossVariable43\r\n0001EF3B: 49 40     eor #$40\r\n0001EF3D: 85 43    
    sta BossVariable43\r\n0001EF3F: A9 40     lda #$40\r\n0001EF41: 8D 61 06  sta
    ObjectYSpeedFraction+1\r\n0001EF44: A9 01     lda #$01\r\n0001EF46: 8D 81 06 
    sta ObjectYSpeed+1\r\n0001EF49: 8D C1 04  sta ObjectXSpeed+1\r\n0001EF4C: A9
    20     lda #$20\r\n0001EF4E: 8D E1 04  sta ObjectXSpeedFraction+1\r\n0001EF51:
    A9 00     lda #$00\r\n0001EF53: 8D 41 04  sta ObjectUnknown440+1\r\n0001EF56:
    60        rts\r\n\r\n\r\n\r\n\r\n\r\n\r\nBoss7Init:\r\n; Boss 7 init.\r\n;  
    Wait until Megaman is standing.\r\n;   Then flash the palette until palette delay
    is over.\r\n;   Then move him to the right until his X position equals #$50.\r\n\r\n0001EF57:
    AD 00 04  lda ObjectSpriteNum+0                                ; ObjectSpriteNum+0\r\n0001EF5A:
    F0 01     beq +                                           ; $EF5D\r\n; No delay
    if Megaman isn't standing\r\n0001EF5C: 60        rts\r\n+\r\n; Pause gameplay
    (not sound!) until PaletteUpdateDelay = 0\r\n-\r\n0001EF5D: A5 37     lda PaletteUpdateDelay\r\n0001EF5F:
    F0 06     beq +                                           ; $EF67\r\n0001EF61:
    20 1B C0  jsr NextFrame                                   ; $C01B\r\n0001EF64:
    4C 5D EF  jmp -                                           ; $EF5D\r\n+\r\n; Make
    Megaman turn right\r\n-\r\n0001EF67: A9 40     lda #$40\r\n0001EF69: 8D 20 04 
    sta ObjectFlags+0\r\n\r\n0001EF6C: 18        clc\r\n0001EF6D: AD 80 04  lda ObjectPosX+0 
    ;Move Megaman to the right\r\n0001EF70: 69 01     adc #$01\r\n0001EF72: 8D 80
    04  sta ObjectPosX+0\r\n0001EF75: C9 50     cmp #$50         ;Until Xpos = #$50\r\n0001EF77:
    F0 0B     beq +                                           ; $0001EF84\r\n0001EF79:
    20 31 D1  jsr UpdateGraphics                              ; $D131\r\n0001EF7C:
    20 1B C0  jsr NextFrame                                   ; $C01B\r\n0001EF7F:
    4C 67 EF  jmp -                                           ; $EF67\r\n\r\nEF82_table:
    .byte $50, $B0\r\n+\r\n0001EF84: A9 80     lda #$80\r\n0001EF86: 20 09 D1  jsr
    TimeDelayWithSpriteUpdates                  ; $D109\r\n\r\n0001EF89: A2 00    
    ldx #$00\r\n0001EF8B: 86 2F     stx RefObjectNumber\r\n0001EF8D: E8        inx\r\n0001EF8E:
    86 0C     stx $0C\r\n\r\n0001EF90: A2 10     ldx #$10\r\n-\r\n0001EF92: A9 00    
    lda #$00\r\n0001EF94: 20 7B F6  jsr InitActor\r\n0001EF97: A0 08     ldy #$08\r\n0001EF99:
    20 33 F5  jsr InitObjectDefaultSpeed\r\n\r\n0001EF9C: A9 00     lda #$00\r\n0001EF9E:
    9D 20 04  sta ObjectFlags,x\r\n0001EFA1: A4 0C     ldy $0C\r\n0001EFA3: B9 82
    EF  lda EF82_table,y\r\n0001EFA6: 9D 80 04  sta ObjectPosX,x\r\n0001EFA9: A9
    79     lda #$79\r\n0001EFAB: 9D 00 04  sta ObjectSpriteNum,x\r\n\r\n0001EFAE:
    A9 08     lda #$08\r\n0001EFB0: 9D 00 06  sta ObjectPosY,x\r\n0001EFB3: E8       
    inx\r\n0001EFB4: C6 0C     dec $0C\r\n0001EFB6: 10 DA     bpl -                                          
    ; $EF92\r\n\r\n; Move objects 16 and 17 down until y coordinate of 16 = #$98\r\n--\r\n0001EFB8:
    A2 10     ldx #$10\r\n-\r\n0001EFBA: 18        clc\r\n0001EFBB: BD 00 06  lda
    ObjectPosY,x\r\n0001EFBE: 69 01     adc #$01\r\n0001EFC0: 9D 00 06  sta ObjectPosY,x\r\n0001EFC3:
    E8        inx\r\n0001EFC4: E0 12     cpx #$12\r\n0001EFC6: D0 F2     bne -                                          
    ; $EFBA\r\n\r\n0001EFC8: 20 31 D1  jsr UpdateGraphics                             
    ; $D131\r\n0001EFCB: 20 1B C0  jsr NextFrame                                  
    ; $C01B\r\n\r\n0001EFCE: AD 10 06  lda $0610\r\n0001EFD1: C9 98     cmp #$98\r\n0001EFD3:
    D0 E3     bne --                                          ; $EFB8\r\n\r\n\r\n\r\n0001EFD5:
    A9 30     lda #$30\r\n0001EFD7: 20 09 D1  jsr TimeDelayWithSpriteUpdates                 
    ; $D109\r\n\r\n0001EFDA: A9 00     lda #$00\r\n0001EFDC: 85 2F     sta RefObjectNumber\r\n0001EFDE:
    A9 01     lda #$01\r\n0001EFE0: 85 0C     sta $0C\r\n0001EFE2: A2 12     ldx
    #$12\r\n0001EFE4: A9 00     lda #$00\r\n0001EFE6: 20 7B F6  jsr InitActor\r\n0001EFE9:
    A9 77     lda #$77\r\n0001EFEB: 9D 00 04  sta ObjectSpriteNum,x\r\n0001EFEE:
    A4 0C     ldy $0C\r\n0001EFF0: B9 82 EF  lda EF82_table,y\r\n0001EFF3: 9D 80
    04  sta ObjectPosX,x\r\n0001EFF6: A9 B0     lda #$B0\r\n0001EFF8: 9D 00 06  sta
    ObjectPosY,x\r\n0001EFFB: A0 08     ldy #$08\r\n0001EFFD: 20 33 F5  jsr InitObjectDefaultSpeed\r\n0001F000:
    E8        inx\r\n0001F001: C6 0C     dec $0C\r\n0001F003: 10 DF     bpl $0001EFE4\r\n0001F005:
    A9 00     lda #$00\r\n0001F007: 8D 54 06  sta $0654\r\n0001F00A: A9 80     lda
    #$80\r\n0001F00C: 20 6C F0  jsr TimeDelay_WithPaletteRotation\r\n0001F00F: 20
    C4 DB  jsr $DBC4\r\n0001F012: A9 80     lda #$80\r\n0001F014: 20 6C F0  jsr TimeDelay_WithPaletteRotation\r\n0001F017:
    A9 F8     lda #$F8\r\n0001F019: 8D 12 06  sta $0612\r\n0001F01C: 8D 13 06  sta
    $0613\r\n0001F01F: 20 80 F0  jsr MaximizeObjectLifeMeter+1                      
    ; $F080\r\n\r\n--\r\n0001F022: A2 10     ldx #$10\r\n-\r\n0001F024: 38       
    sec\r\n0001F025: BD 00 06  lda ObjectPosY,x\r\n0001F028: E9 01     sbc #$01\r\n0001F02A:
    9D 00 06  sta ObjectPosY,x\r\n0001F02D: E8        inx\r\n0001F02E: E0 12    
    cpx #$12\r\n0001F030: D0 F2     bne -                                          
    ; $F024\r\n\r\n0001F032: 20 31 D1  jsr UpdateGraphics                             
    ; $D131\r\n0001F035: 20 1B C0  jsr NextFrame                                  
    ; $C01B\r\n0001F038: AD 10 06  lda $0610\r\n0001F03B: C9 08     cmp #$08\r\n0001F03D:
    D0 E3     bne --                                          ; $F022\r\n\r\n\r\n0001F03F:
    A2 02     ldx #$02\r\n\r\n0001F041: A9 F8     lda #$F8\r\n0001F043: 9D 00 06 
    sta ObjectPosY,x\r\n0001F046: E8        inx\r\n0001F047: E0 20     cpx #$20\r\n0001F049:
    D0 F6     bne $0001F041\r\n0001F04B: A2 02     ldx #$02\r\n0001F04D: BD 69 F0 
    lda F069_table,x\r\n0001F050: 9D ED 03  sta SpritePalettes + $D,x\r\n0001F053:
    CA        dex\r\n0001F054: 10 F7     bpl $0001F04D\r\n0001F056: 20 2A C7  jsr
    PaletteSetupForSprites\r\n0001F059: A9 10     lda #$10\r\n0001F05B: 20 09 D1 
    jsr TimeDelayWithSpriteUpdates                  ; $D109\r\n\r\n\r\n0001F05E:
    A9 00     lda #$00        ; Reset joypad data\r\n0001F060: 85 14     sta JoyPad0\r\n0001F062:
    85 16     sta JoyPad0old\r\n0001F064: A9 05     lda #$05\r\n0001F066: 85 3E    
    sta BossCurrentStrategy\r\n0001F068: 60        rts\r\n\r\n\r\nF069_table: ; colours
    of some purpose\r\n    .byte $30,$00,$0F\r\n\r\n\r\nTimeDelay_WithPaletteRotation\r\n0001F06C:
    85 3C     sta MiscCounter1\r\n-\r\n0001F06E: A2 14     ldx #$14\r\n0001F070:
    86 2F     stx RefObjectNumber\r\n0001F072: 20 BD F3  jsr AI_Object32\r\n0001F075:
    20 31 D1  jsr UpdateGraphics                              ; $D131\r\n0001F078:
    20 1B C0  jsr NextFrame                                   ; $C01B\r\n0001F07B:
    C6 3C     dec MiscCounter1\r\n0001F07D: D0 EF     bne -                                          
    ; $F06E\r\n0001F07F: 60        rts\r\n\r\n; Grow boss's life meter to max\r\nMaximizeObjectLifeMeter+1\r\n-\r\n0001F080:
    AD C1 06  lda ObjectLifeMeter+1\r\n0001F083: C9 1C     cmp #$1C\r\n0001F085:
    F0 0C     beq +                                           ; $F093\r\n0001F087:
    20 9B F3  jsr IncObjectLifeMeter                            ; $F39B\r\n0001F08A:
    20 31 D1  jsr UpdateGraphics                              ; $D131\r\n0001F08D:
    20 1B C0  jsr NextFrame                                   ; $C01B\r\n0001F090:
    4C 80 F0  jmp -                                           ; $F080\r\n+\r\n0001F093:
    60        rts\r\n\r\n\r\nBoss6Init:\r\n; Pause until PaletteUpdateDelay = 0\r\n-\r\n0001F094:
    A5 37     lda PaletteUpdateDelay\r\n0001F096: F0 06     beq +                                          
    ; $F09E\r\n0001F098: 20 1B C0  jsr NextFrame                                  
    ; $C01B\r\n0001F09B: 4C 94 F0  jmp -                                          
    ; $F094\r\n+\r\n0001F09E: A9 03     lda #$03\r\n0001F0A0: 85 5C     sta $5C\r\n\r\n0001F0A2:
    A9 B0     lda #$B0\r\n0001F0A4: A2 18     ldx #$18\r\n0001F0A6: A0 40     ldy
    #$40\r\n0001F0A8: 20 BE F0  jsr DoPPUtransferRoutineF0BE\r\n0001F0AB: 20 80 F0 
    jsr MaximizeObjectLifeMeter+1                       ; $F080\r\n\r\n0001F0AE:
    A9 05     lda #$05\r\n0001F0B0: 85 3E     sta BossCurrentStrategy\r\n0001F0B2:
    A9 40     lda #$40\r\n0001F0B4: 8D 21 04  sta ObjectFlags+1\r\n0001F0B7: 85 3F    
    sta BossVariable3F\r\n\r\n0001F0B9: A9 00     lda #$00\r\n0001F0BB: 85 14    
    sta JoyPad0\r\n0001F0BD: 60        rts\r\n\r\n\r\n\r\nDoPPUtransferRoutineF0BE\r\n;
    Input:\r\n;   A = hi byte of ROM address (B7 = B700)\r\n;   X = lo byte of VRAM
    address\r\n;   Y = number of tiles\r\n;\r\n0001F0BE: 84 5B     sty $5B\r\n0001F0C0:
    85 5A     sta $5A\r\n0001F0C2: 8E 80 03  stx RawPPUtransferAddress+0\r\n0001F0C5:
    A2 00     ldx #$00\r\n--\r\n0001F0C7: 86 59     stx $59\r\n0001F0C9: 8E 81 03 
    stx RawPPUtransferAddress+1\r\n0001F0CC: A6 5C     ldx $5C\r\n0001F0CE: 8A       
    txa\r\n0001F0CF: 85 42     sta CurrentBank\r\n0001F0D1: 9D 00 C0  sta $C000,x\r\n\r\n0001F0D4:
    A0 20     ldy #$20\r\n0001F0D6: 84 5E     sty RawPPUtransferSize\r\n\r\n-\r\n0001F0D8:
    B1 59     lda ($59),y\r\n0001F0DA: 99 82 03  sta RawPPUtransferBuf,y\r\n0001F0DD:
    88        dey\r\n0001F0DE: 10 F8     bpl -                                          
    ; $F0D8\r\n\r\n0001F0E0: A9 05     lda #$05\r\n0001F0E2: 85 42     sta CurrentBank\r\n0001F0E4:
    8D 05 C0  sta $C005\r\n0001F0E7: 20 1B C0  jsr NextFrame                                  
    ; $C01B\r\n\r\n0001F0EA: 18        clc\r\n0001F0EB: A5 59     lda $59\r\n0001F0ED:
    69 20     adc #$20\r\n0001F0EF: AA        tax\r\n0001F0F0: 08        php\r\n0001F0F1:
    A5 5A      lda $5A\r\n0001F0F3: 69 00      adc #$00\r\n0001F0F5: 85 5A      sta
    $5A\r\n0001F0F7: 28        plp\r\n0001F0F8: AD 80 03  lda RawPPUtransferAddress+0\r\n0001F0FB:
    69 00     adc #$00\r\n0001F0FD: 8D 80 03  sta RawPPUtransferAddress+0\r\n0001F100:
    C6 5B     dec $5B\r\n0001F102: D0 C3     bne --                                         
    ; $F0C7\r\n0001F104: 60        rts\r\n\r\n\r\n\r\n\r\nBoss8and9init:\r\n-\r\n0001F105:
    A5 37     lda PaletteUpdateDelay\r\n0001F107: F0 09     beq +                                          
    ; $F112\r\n0001F109: 20 31 D1  jsr UpdateGraphics                             
    ; $D131\r\n0001F10C: 20 1B C0  jsr NextFrame                                  
    ; $C01B\r\n0001F10F: 4C 05 F1  jmp -                                          
    ; $F105\r\n+\r\n0001F112: A5 31     lda CurrentStage\r\n0001F114: C9 09     cmp
    #$09\r\n0001F116: F0 10     beq +                                           ;
    $F128\r\n0001F118: 20 80 F0  jsr MaximizeObjectLifeMeter+1                      
    ; $F080\r\n0001F11B: A9 3F     lda #$3F\r\n0001F11D: 85 44     sta BossVariable44\r\n0001F11F:
    A9 05     lda #$05\r\n0001F121: 85 3E     sta BossCurrentStrategy\r\n\r\n0001F123:
    A9 00     lda #$00\r\n0001F125: 85 14     sta JoyPad0\r\n0001F127: 60       
    rts\r\n+\r\n0001F128: A9 03     lda #$03\r\n0001F12A: 85 5C     sta $5C\r\n0001F12C:
    A9 B8     lda #$B8\r\n0001F12E: A2 19     ldx #$19\r\n0001F130: A0 38     ldy
    #$38\r\n0001F132: 20 BE F0  jsr DoPPUtransferRoutineF0BE\r\n0001F135: C6 5C    
    dec $5C\r\n0001F137: A9 BB     lda #$BB\r\n0001F139: A2 12     ldx #$12\r\n0001F13B:
    A0 10     ldy #$10\r\n0001F13D: 20 BE F0  jsr DoPPUtransferRoutineF0BE\r\n0001F140:
    A9 05     lda #$05\r\n0001F142: 8D 05 C0  sta $C005\r\n0001F145: 85 42     sta
    CurrentBank\r\n0001F147: A2 07     ldx #$07\r\n0001F149: A9 0F     lda #$0F\r\n0001F14B:
    9D D4 03  sta BGPalettes + $4,x\r\n0001F14E: CA        dex\r\n0001F14F: 10 FA    
    bpl $0001F14B\r\n0001F151: 20 3F C7  jsr PaletteSetupForBG\r\n0001F154: A9 0C    
    lda #$0C\r\n0001F156: 85 59     sta $59\r\n0001F158: A2 00     ldx #$00\r\n0001F15A:
    BC A1 8E  ldy RoomActives2+1,x\r\n0001F15D: 84 5E     sty RawPPUtransferSize\r\n0001F15F:
    C8        iny\r\n0001F160: C8        iny\r\n0001F161: 84 0C     sty $0C\r\n0001F163:
    E8        inx\r\n0001F164: A0 00     ldy #$00\r\n0001F166: BD A1 8E  lda RoomActives2+1,x\r\n0001F169:
    99 80 03  sta RawPPUtransferAddress+0,y\r\n0001F16C: E8        inx\r\n0001F16D:
    C8        iny\r\n0001F16E: C4 0C     cpy $0C\r\n0001F170: D0 F4     bne $0001F166\r\n0001F172:
    86 5A     stx $5A\r\n0001F174: 20 31 D1  jsr UpdateGraphics                             
    ; $D131\r\n0001F177: 20 1B C0  jsr NextFrame                                  
    ; $C01B\r\n0001F17A: A6 5A     ldx $5A\r\n0001F17C: C6 59     dec $59\r\n0001F17E:
    D0 DA     bne $0001F15A\r\n0001F180: A9 00     lda #$00\r\n0001F182: 85 2F    
    sta RefObjectNumber\r\n0001F184: A2 10     ldx #$10\r\n0001F186: 20 7B F6  jsr
    InitActor\r\n0001F189: 8A        txa\r\n0001F18A: 29 0F     and #$0F\r\n0001F18C:
    A8        tay\r\n0001F18D: B9 5E F2  lda F25E_table,y\r\n0001F190: 9D 00 04 
    sta ObjectSpriteNum,x\r\n0001F193: A9 08     lda #$08\r\n0001F195: 9D 80 04 
    sta ObjectPosX,x\r\n0001F198: B9 60 F2  lda F260_table,y\r\n0001F19B: 9D 00 06 
    sta ObjectPosY,x\r\n0001F19E: A0 94     ldy #$94\r\n0001F1A0: 20 33 F5  jsr InitObjectDefaultSpeed\r\n0001F1A3:
    E8        inx\r\n0001F1A4: E0 12     cpx #$12\r\n0001F1A6: D0 DE     bne $0001F186\r\n\r\n-\r\n0001F1A8:
    20 EA 98  jsr RunEnemyAI                                   ; $98EA\r\n0001F1AB:
    AD 90 04  lda $0490\r\n0001F1AE: C9 AB     cmp #$AB\r\n0001F1B0: B0 09     bcs
    +                                           ; $F1BB\r\n0001F1B2: 20 31 D1  jsr
    UpdateGraphics                              ; $D131\r\n0001F1B5: 20 1B C0  jsr
    NextFrame                                   ; $C01B\r\n0001F1B8: 4C A8 F1  jmp
    -                                           ; $F1A8\r\n+\r\n0001F1BB: A2 10    
    ldx #$10\r\n0001F1BD: A9 AC     lda #$AC\r\n0001F1BF: 9D 80 04  sta ObjectPosX,x\r\n0001F1C2:
    A9 02     lda #$02\r\n0001F1C4: 9D 20 04  sta ObjectFlags,x\r\n0001F1C7: A0 08    
    ldy #$08\r\n0001F1C9: 20 33 F5  jsr InitObjectDefaultSpeed\r\n0001F1CC: E8       
    inx\r\n0001F1CD: E0 12     cpx #$12\r\n0001F1CF: D0 EC     bne $0001F1BD\r\n0001F1D1:
    A0 00     ldy #$00\r\n0001F1D3: 85 2F     sta RefObjectNumber\r\n0001F1D5: A2
    12     ldx #$12\r\n0001F1D7: 84 0C     sty $0C\r\n0001F1D9: 20 7B F6  jsr InitActor\r\n0001F1DC:
    A0 08     ldy #$08\r\n0001F1DE: 20 33 F5  jsr InitObjectDefaultSpeed\r\n0001F1E1:
    A4 0C     ldy $0C\r\n0001F1E3: B9 82 F2  lda F282_table,y\r\n0001F1E6: 9D 00
    04  sta ObjectSpriteNum,x\r\n0001F1E9: B9 86 F2  lda F286_table,y\r\n0001F1EC:
    9D 80 04  sta ObjectPosX,x\r\n0001F1EF: B9 8A F2  lda F28A_table,y\r\n0001F1F2:
    9D 00 06  sta ObjectPosY,x\r\n0001F1F5: A9 02     lda #$02\r\n0001F1F7: 9D 20
    04  sta ObjectFlags,x\r\n0001F1FA: C8        iny\r\n0001F1FB: E8        inx\r\n0001F1FC:
    E0 16     cpx #$16\r\n0001F1FE: D0 D7     bne $0001F1D7\r\n0001F200: EE B1 06 
    inc $06B1\r\n\r\n0001F203: A9 7F     lda #$7F\r\n0001F205: 85 3C     sta MiscCounter1\r\n--\r\n0001F207:
    A5 3C     lda MiscCounter1\r\n0001F209: 29 1F     and #$1F\r\n0001F20B: D0 3F    
    bne +                                           ; $F24C\r\n0001F20D: A5 3C    
    lda MiscCounter1\r\n0001F20F: 4A        lsr a\r\n0001F210: 4A        lsr a\r\n0001F211:
    AA        tax\r\n0001F212: A0 00     ldy #$00\r\n-\r\n0001F214: BD 62 F2  lda
    F262_table,x\r\n0001F217: 99 D4 03  sta BGPalettes + $4,y\r\n0001F21A: C8       
    iny\r\n0001F21B: E8        inx\r\n0001F21C: C0 08     cpy #$08\r\n0001F21E: D0
    F4     bne -                                           ; $F214\r\n0001F220: 20
    3F C7  jsr PaletteSetupForBG\r\n0001F223: A5 3C     lda MiscCounter1\r\n\r\n0001F225:
    C9 60     cmp #$60\r\n0001F227: D0 23     bne +                                          
    ; $F24C\r\n0001F229: A2 01     ldx #$01\r\n0001F22B: 20 7B F6  jsr InitActor\r\n0001F22E:
    A9 7E     lda #$7E\r\n0001F230: 8D 01 04  sta ObjectSpriteNum+1\r\n0001F233:
    A9 00     lda #$00\r\n0001F235: 8D C1 06  sta ObjectLifeMeter+1\r\n0001F238:
    A9 06     lda #$06\r\n0001F23A: 8D 21 04  sta ObjectFlags+1\r\n0001F23D: A9 84    
    lda #$84\r\n0001F23F: 8D 81 04  sta ObjectPosX+1\r\n0001F242: A9 87     lda #$87\r\n0001F244:
    8D 01 06  sta ObjectPosY+1\r\n0001F247: A0 08     ldy #$08\r\n0001F249: 20 33
    F5  jsr InitObjectDefaultSpeed\r\n+\r\n0001F24C: 20 31 D1  jsr UpdateGraphics                             
    ; $D131\r\n0001F24F: 20 1B C0  jsr NextFrame                                  
    ; $C01B\r\n0001F252: C6 3C     dec MiscCounter1\r\n0001F254: 10 B1     bpl --                                         
    ; $F207\r\n\r\n0001F256: A9 F8     lda #$F8\r\n0001F258: 8D 11 06  sta $0611\r\n0001F25B:
    4C 18 F1  jmp $F118\r\n\r\nF25E_table:\r\n    .byte $74,$75 ;ObjectSpriteNum\r\nF260_table:\r\n   
    .byte $46,$55 ;ObjectPosY\r\nF262_table:       ; Colours of some kind.\r\n   
    .byte $0F,$16,$0F,$0F,$07,$37,$17,$0F\r\n    .byte $06,$16,$0F,$0F,$07,$27,$07,$0F\r\n   
    .byte $0F,$06,$0F,$0F,$0F,$17,$0F,$0F\r\n    .byte $0F,$0F,$0F,$0F,$0F,$07,$0F\r\n   
    \r\nF282_table:\r\n    .byte $80,$81,$82,$7F ;states\r\nF286_table:\r\n    .byte
    $AC,$B4,$C4,$D8 ;Xpositions\r\nF28A_table:\r\n    .byte $7B,$63,$93,$77 ;Ypositions\r\n\r\n0001F28E:
    20 80 F0  jsr MaximizeObjectLifeMeter+1                       ; $F080\r\n0001F291:
    A9 07     lda #$07\r\n0001F293: 85 59     sta $59\r\n0001F295: A2 00     ldx
    #$00\r\n\r\n--\r\n0001F297: BC 48 F3  ldy $F348,x\r\n0001F29A: 84 5E     sty
    RawPPUtransferSize\r\n0001F29C: C8        iny\r\n0001F29D: C8        iny\r\n0001F29E:
    84 0C     sty $0C\r\n0001F2A0: E8        inx\r\n0001F2A1: A0 00     ldy #$00\r\n-\r\n0001F2A3:
    BD 48 F3  lda $F348,x\r\n0001F2A6: 99 80 03  sta RawPPUtransferAddress+0,y\r\n0001F2A9:
    E8        inx\r\n0001F2AA: C8        iny\r\n0001F2AB: C6 0C     dec $0C\r\n0001F2AD:
    D0 F4     bne -                                           ; $F2A3\r\n\r\n\r\n\r\n0001F2AF:
    86 5A     stx $5A\r\n\r\n\r\n0001F2B1: A2 16     ldx #$16\r\n0001F2B3: 20 76
    C5  jsr FindFreeObject                              ; FindFreeObject\r\n0001F2B6:
    B0 2E     bcs +                                           ; $F2E6\r\n\r\n0001F2B8:
    A9 01     lda #$01\r\n0001F2BA: 85 2F     sta RefObjectNumber\r\n0001F2BC: 20
    7B F6  jsr InitActor\r\n0001F2BF: A9 84     lda #$84\r\n0001F2C1: 9D 00 04  sta
    ObjectSpriteNum,x\r\n0001F2C4: A4 59     ldy $59\r\n0001F2C6: 18        clc\r\n0001F2C7:
    BD 80 04  lda ObjectPosX,x\r\n0001F2CA: 79 83 F3  adc F383_table,y\r\n0001F2CD:
    9D 80 04  sta ObjectPosX,x\r\n0001F2D0: 38        sec\r\n0001F2D1: BD 00 06 
    lda ObjectPosY,x\r\n0001F2D4: F9 8A F3  sbc F38A_table,y\r\n0001F2D7: 9D 00 06 
    sta ObjectPosY,x\r\n0001F2DA: B9 91 F3  lda F391_table,y\r\n0001F2DD: A8       
    tay\r\n0001F2DE: 20 33 F5  jsr InitObjectDefaultSpeed\r\n0001F2E1: A9 50    
    lda #$50\r\n0001F2E3: 9D 20 04  sta ObjectFlags,x\r\n+\r\n0001F2E6: 20 EA 98 
    jsr RunEnemyAI                                   ; $98EA\r\n0001F2E9: 20 31 D1 
    jsr UpdateGraphics                              ; $D131\r\n0001F2EC: 20 1B C0 
    jsr NextFrame                                   ; $C01B\r\n\r\n0001F2EF: A6 5A    
    ldx $5A\r\n0001F2F1: C6 59     dec $59\r\n0001F2F3: D0 A2     bne --                                         
    ; $F297\r\n\r\n0001F2F5: A2 02     ldx #$02\r\n-\r\n0001F2F7: BD 98 F3  lda F398_table,x\r\n0001F2FA:
    9D D5 03  sta BGPalettes + $5,x\r\n0001F2FD: CA        dex\r\n0001F2FE: 10 F7    
    bpl -                                           ; $F2F7\r\n\r\n\r\n0001F300:
    20 3F C7  jsr PaletteSetupForBG\r\n0001F303: E6 AC     inc FightingBossNum\r\n0001F305:
    18        clc\r\n0001F306: AD 81 04  lda ObjectPosX+1\r\n0001F309: 69 04    
    adc #$04\r\n0001F30B: 8D 81 04  sta ObjectPosX+1\r\n0001F30E: 69 1C     adc #$1C\r\n0001F310:
    8D 91 04  sta $0491\r\n0001F313: 38        sec\r\n0001F314: AD 01 06  lda ObjectPosY+1\r\n0001F317:
    E9 10     sbc #$10\r\n0001F319: 8D 01 06  sta ObjectPosY+1\r\n0001F31C: E9 04    
    sbc #$04\r\n0001F31E: 8D 11 06  sta $0611\r\n0001F321: A9 85     lda #$85\r\n0001F323:
    8D 01 04  sta ObjectSpriteNum+1\r\n0001F326: A9 00     lda #$00\r\n0001F328:
    8D 31 04  sta $0431\r\n0001F32B: 8D 51 04  sta $0451\r\n0001F32E: A9 83     lda
    #$83\r\n0001F330: 8D 11 04  sta $0411\r\n0001F333: A2 11     ldx #$11\r\n0001F335:
    A0 08     ldy #$08\r\n0001F337: 20 33 F5  jsr InitObjectDefaultSpeed\r\n0001F33A:
    A9 80     lda #$80\r\n0001F33C: 85 44     sta BossVariable44\r\n0001F33E: A9
    05     lda #$05\r\n0001F340: 85 3E     sta BossCurrentStrategy\r\n0001F342: A2
    FF     ldx #$FF\r\n0001F344: 9A        txs\r\n0001F345: 4C 5E 91  jmp $915E\r\n\r\n\r\nF348_table:\r\n   
    ; first byte: number of tiles\r\n    ; second byte: probably X coordinate\r\n   
    ; consequent bytes: data\r\n    .byte $05,$25,  $71, $00, $00, $E0, $E1, $E2\r\n   
    .byte $06,$25,  $90, $00, $00, $00, $E3, $00, $E4\r\n    .byte $07,$25,  $AF,
    $00, $00, $E5, $E6, $00, $00, $00\r\n    .byte $07,$25,  $CF, $00, $E7, $E8,
    $E9, $00, $00, $00\r\n    .byte $07,$25,  $EF, $EA, $EB, $EC, $ED, $EE, $EF,
    $DA\r\n    .byte $03,$26,            $0F, $DB, $DC, $DD\r\n    .byte $03,$26,           
    $2F, $DE, $DF, $F6\r\n\r\nF383_table: ; alters PosX\r\n    .byte $00, $20, $10,
    $00, $20, $14, $08\r\nF38A_table: ;alters PosY\r\n    .byte $00, $14, $14, $14,
    $24, $24, $24\r\nF391_table:\r\n    .byte $D4, $78, $D8, $D4, $28, $D4, $34 ;params
    for InitObjectDefaultSpeed\r\nF398_table: ; colours for some purpose\r\n    .byte
    $07, $37, $17\r\n\r\n\r\nIncObjectLifeMeter\r\n0001F39B: A5 23     lda FrameCounter   
    ; Only inc meter every second frame\r\n0001F39D: 29 01     and #$01\r\n0001F39F:
    D0 15     bne +                                           ; $F3B6\r\n\r\n0001F3A1:
    AD C1 06  lda ObjectLifeMeter+1\r\n0001F3A4: C9 1C     cmp #$1C\r\n0001F3A6:
    F0 0F     beq ++                                          ; $F3B7\r\n0001F3A8:
    EE C1 06  inc ObjectLifeMeter+1\r\n\r\n0001F3AB: A5 23     lda FrameCounter   
    ; Only play sound every 8th frame\r\n0001F3AD: 29 07     and #$07        \r\n0001F3AF:
    D0 05     bne +                                           ; $F3B6\r\n\r\n0001F3B1:
    A9 18     lda #$18        ; Weapons/Energy bar?\r\n0001F3B3: 20 77 C4  jsr IssueSound                                 
    ; $C477\r\n+\r\n0001F3B6: 60        rts\r\n\r\n++\r\n0001F3B7: A9 FE     lda
    #$FE\r\n0001F3B9: 20 77 C4  jsr IssueSound                                  ;
    $C477\r\n0001F3BC: 60        rts\r\n\r\n\r\n\r\nAI_Object32\r\n0001F3BD: A5 23    
    lda FrameCounter\r\n0001F3BF: 29 07     and #$07\r\n0001F3C1: D0 2E     bne +++                                        
    ; $F3F1\r\n0001F3C3: DE 40 06  dec ObjectFireDelay,x\r\n0001F3C6: BD 40 06  lda
    ObjectFireDelay,x\r\n0001F3C9: C9 03     cmp #$03\r\n0001F3CB: 90 02     bcc
    +                                           ; $F3CF\r\n0001F3CD: A9 02     lda
    #$02\r\n+\r\n0001F3CF: 9D 40 06  sta ObjectFireDelay,x\r\n0001F3D2: A8       
    tay\r\n\r\n; if we're not at Fireman's stage, then Y += 5\r\n0001F3D3: A5 31    
    lda CurrentStage\r\n0001F3D5: C9 03     cmp #$03\r\n0001F3D7: F0 05     beq +                                          
    ; $F3DE\r\n0001F3D9: 18        clc\r\n0001F3DA: 98        tya\r\n0001F3DB: 69
    05     adc #$05\r\n0001F3DD: A8        tay\r\n+\r\n0001F3DE: A2 00     ldx #$00\r\n-\r\n0001F3E0:
    B9 F2 F3  lda Object32_paletteTable,y\r\n0001F3E3: 9D DD 03  sta BGPalettes +
    $D,x\r\n0001F3E6: C8        iny\r\n0001F3E7: E8        inx\r\n0001F3E8: E0 03    
    cpx #$03\r\n0001F3EA: D0 F4     bne -                                          
    ; $F3E0\r\n\r\n0001F3EC: A6 2F     ldx RefObjectNumber\r\n0001F3EE: 20 3F C7 
    jsr PaletteSetupForBG\r\n+++\r\n0001F3F1: 60        rts\r\n\r\nObject32_paletteTable:
    ;colours for some purpose\r\n    .byte $26, $16, $06, $26, $16 ;tones of Red\r\n   
    .byte $21, $25, $2A, $21, $25 ;blue, red, green\r\n\r\nAI_Object3A\r\n0001F3FC:
    BD 40 04  lda ObjectUnknown440,x\r\n0001F3FF: 29 F0     and #$F0\r\n0001F401:
    C9 30     cmp #$30\r\n0001F403: D0 03     bne $0001F408\r\n0001F405: 9D 40 04 
    sta ObjectUnknown440,x\r\n0001F408: BD A0 06  lda ObjectLifeCycleCounter,x\r\n0001F40B:
    D0 3E     bne $0001F44B\r\n0001F40D: DE 40 06  dec ObjectFireDelay,x\r\n0001F410:
    BD 40 06  lda ObjectFireDelay,x\r\n0001F413: C9 60     cmp #$60\r\n0001F415:
    B0 34     bcs $0001F44B\r\n0001F417: 29 1F     and #$1F\r\n0001F419: D0 30    
    bne $0001F44B\r\n0001F41B: BD 20 04  lda ObjectFlags,x\r\n0001F41E: 48       
    pha\r\n0001F41F: 20 3B F6  jsr EnemySearchMegaman\r\n0001F422: 85 0C     sta
    $0C\r\n0001F424: A9 00     lda #$00\r\n0001F426: 20 63 F6  jsr CreateEnemy                                  
    ; $F663\r\n0001F429: B0 10     bcs $0001F43B\r\n0001F42B: A9 7C     lda #$7C\r\n0001F42D:
    9D 00 04  sta ObjectSpriteNum,x\r\n0001F430: A9 02     lda #$02\r\n0001F432:
    85 01     sta $01\r\n0001F434: A9 00     lda #$00\r\n0001F436: 85 00     sta
    $00\r\n0001F438: 20 28 F6  jsr $F628\r\n0001F43B: A6 2F     ldx RefObjectNumber\r\n0001F43D:
    68        pla\r\n0001F43E: 9D 20 04  sta ObjectFlags,x\r\n0001F441: BD 40 06 
    lda ObjectFireDelay,x\r\n0001F444: D0 05     bne $0001F44B\r\n0001F446: A9 DE    
    lda #$DE\r\n0001F448: 9D 40 06  sta ObjectFireDelay,x\r\n0001F44B: 20 49 BE 
    jsr EnemyAI_MovementsAndDamageCheck\r\n0001F44E: BD E0 06  lda ObjectType,x\r\n0001F451:
    C9 1B     cmp #$1B\r\n0001F453: D0 03     bne $0001F458\r\n                   
    ;Go and decrease the bubblebot energy meter.\r\n0001F455: 4C D8 F4  jmp $F4D8\r\n0001F458:
    BD 80 06  lda ObjectYSpeed,x\r\n0001F45B: F0 24     beq $0001F481\r\n0001F45D:
    30 0B     bmi $0001F46A\r\n0001F45F: BD 00 06  lda ObjectPosY,x\r\n0001F462:
    C9 40     cmp #$40\r\n0001F464: B0 1A     bcs $0001F480\r\n0001F466: A9 46    
    lda #$46\r\n0001F468: D0 09     bne $0001F473\r\n0001F46A: BD 00 06  lda ObjectPosY,x\r\n0001F46D:
    C9 A0     cmp #$A0\r\n0001F46F: 90 0F     bcc $0001F480\r\n0001F471: A9 06    
    lda #$06\r\n0001F473: 9D 20 04  sta ObjectFlags,x\r\n0001F476: A4 44     ldy
    BossVariable44\r\n0001F478: B9 F5 F4  lda F4F5_table,y\r\n0001F47B: A8       
    tay\r\n0001F47C: 20 33 F5  jsr InitObjectDefaultSpeed\r\n0001F47F: 18       
    clc\r\n0001F480: 60        rts\r\n0001F481: BD 20 04  lda ObjectFlags,x\r\n0001F484:
    29 40     and #$40\r\n0001F486: D0 0F     bne $0001F497\r\n0001F488: BD 80 04 
    lda ObjectPosX,x\r\n0001F48B: C9 30     cmp #$30\r\n0001F48D: B0 F1     bcs $0001F480\r\n0001F48F:
    A4 44     ldy BossVariable44\r\n0001F491: B9 FC F4  lda F4FC_table,y\r\n0001F494:
    A8        tay\r\n0001F495: D0 E5     bne $0001F47C\r\n0001F497: BD 80 04  lda
    ObjectPosX,x\r\n0001F49A: C9 D0     cmp #$D0\r\n0001F49C: 90 E2     bcc $0001F480\r\n0001F49E:
    A4 44     ldy BossVariable44\r\n0001F4A0: B9 03 F5  lda F503_table,y\r\n0001F4A3:
    A8        tay\r\n0001F4A4: D0 D6     bne $0001F47C\r\n; Create a bubblebot in
    random of positions\r\n0001F4A6: A9 03     lda #$03\r\n0001F4A8: 20 A0 C5  jsr
    RandomFunc\r\n0001F4AB: 85 0C     sta $0C\r\n0001F4AD: A9 3A     lda #$3A\r\n0001F4AF:
    20 63 F6  jsr CreateEnemy                                   ; $F663\r\n0001F4B2:
    B0 22     bcs $0001F4D6\r\n0001F4B4: A9 06     lda #$06\r\n0001F4B6: 9D 20 04 
    sta ObjectFlags,x\r\n0001F4B9: A4 0C     ldy $0C\r\n0001F4BB: B9 0A F5  lda BubbleBotXTable,y\r\n0001F4BE:
    9D 80 04  sta ObjectPosX,x\r\n0001F4C1: B9 0D F5  lda BubbleBotYTable,y\r\n0001F4C4:
    9D 00 06  sta ObjectPosY,x\r\n0001F4C7: A9 DE     lda #$DE\r\n0001F4C9: 9D 40
    06  sta ObjectFireDelay,x\r\n0001F4CC: A5 0C     lda $0C\r\n0001F4CE: F0 CE    
    beq $0001F49E\r\n0001F4D0: C9 01     cmp #$01\r\n0001F4D2: F0 92     beq $0001F466\r\n0001F4D4:
    D0 9B     bne $0001F471\r\n0001F4D6: 38        sec\r\n0001F4D7: 60        rts\r\n;When
    a bubblebot was killed\r\n0001F4D8: E6 44     inc BossVariable44\r\n0001F4DA:
    E6 3E     inc BossCurrentStrategy\r\n0001F4DC: A4 44     ldy BossVariable44\r\n0001F4DE:
    B9 0F F5  lda BubbleBotColourTable-1,y\r\n0001F4E1: 8D EA 03  sta SpritePalettes
    + $A\r\n0001F4E4: A9 7E     lda #$7E\r\n0001F4E6: 85 3F     sta BossVariable3F\r\n0001F4E8:
    38        sec\r\n0001F4E9: AD C1 06  lda ObjectLifeMeter+1\r\n0001F4EC: E9 04    
    sbc #$04\r\n0001F4EE: 8D C1 06  sta ObjectLifeMeter+1\r\n0001F4F1: 20 2A C7 
    jsr PaletteSetupForSprites\r\n0001F4F4: 60        rts\r\n\r\n\r\n\r\nF4F5_table:\r\n   
    .byte $88, $88, $94, $94, $A0, $AC, $24\r\nF4FC_table:\r\n    .byte $80, $80,
    $8C, $8C, $98, $A4, $1C\r\nF503_table:\r\n    .byte $84, $84, $90, $90, $9C,
    $A8, $2C\r\nBubbleBotXTable:\r\n    .byte $80,$10,$F0\r\nBubbleBotYTable:\r\n   
    .byte $10,$70,$70\r\n\r\nBubbleBotColourTable:\r\n    .byte $22, $2A, $24, $26,
    $17, $15\r\n\r\n\r\nFindObjectOfSelectedType\r\n; Input: $0C = object type to
    find\r\n;          X = first object to search\r\n; Output:\r\n;    carry clear:
    X = object index\r\n;    carry set: not found\r\n0001F516: BD 00 04  lda ObjectSpriteNum,x\r\n0001F519:
    C9 FF     cmp #$FF\r\n0001F51B: D0 07     bne +\r\n0001F51D: A5 0C     lda $0C\r\n0001F51F:
    DD E0 06  cmp ObjectType,x\r\n0001F522: F0 06     beq ++\r\n-\r\n+\r\n0001F524:
    E8        inx\r\n0001F525: E0 20     cpx #$20\r\n0001F527: 90 ED     bcc FindObjectOfSelectedType\r\n0001F529:
    60        rts\r\n++\r\n0001F52A: BD 00 06  lda ObjectPosY,x\r\n0001F52D: C9 F8    
    cmp #$F8  ;Skip the object if its Y == #$F8\r\n0001F52F: F0 F3     beq -\r\n0001F531:
    18        clc\r\n0001F532: 60        rts\r\n\r\n\r\n; Function F533 is called
    with:\r\n;   X = object number\r\n;   Y = parameter\r\n;         values seen
    are:\r\n;          #$08\r\n;          #$C4\r\n;          DefaultObjectSpeedCtrl[$02]\r\n;         
    #$24\r\n;          #$78\r\n;          #$94\r\n;          $F391[$59]\r\n;         
    $F4F5[BossVariable44]\r\n;          #$4C + ( $0C << 2)\r\n;          #$0C + (
    rnd(1) << 2)\r\n;          #$40\r\n;          #$1C..#$38\r\n;\r\n; Y might be
    enemy number, but then again, it might not be.\r\n\r\nInitObjectDefaultSpeed\r\n0001F533:
    B9 4C F5  lda F54C_table+0,y\r\n0001F536: 9D 60 06  sta ObjectYSpeedFraction,x\r\n0001F539:
    B9 4D F5  lda F54C_table+1,y\r\n0001F53C: 9D 80 06  sta ObjectYSpeed,x\r\n0001F53F:
    B9 4E F5  lda F54C_table+2,y\r\n0001F542: 9D E0 04  sta ObjectXSpeedFraction,x\r\n0001F545:
    B9 4F F5  lda F54C_table+3,y\r\n0001F548: 9D C0 04  sta ObjectXSpeed,x\r\n0001F54B:
    60        rts\r\n\r\n\r\nF54C_table:\r\n    ; YSpeedFraction, YSpeed, XSpeedFraction
    and XSpeed\r\n    .byte $E0,$04,$30,$01 ;00 Flea act 0\r\n    .byte $00,$04,$00,$03
    ;01 Flea act 1\r\n    .byte $00,$00,$00,$00 ;02 atomic explosion and many other
    things\r\n    .byte $2C,$02,$2C,$02 ;03 Beak shot 0\r\n    .byte $68,$00,$0F,$03
    ;04 Beak shot 1\r\n    .byte $98,$FF,$0F,$03 ;05 Beak shot 2\r\n    .byte $D4,$FD,$2C,$02
    ;06 Beak shot 3\r\n    .byte $00,$04,$00,$00 ;07 Unknown, used at $05AE61, also
    TackleFire, also bonus drop\r\n    .byte $D0,$02,$D0,$02 ;08\r\n    .byte $00,$00,$00,$04
    ;09 Boss6 piece1 (dir: right), also Boss7 I/F-weapon, also [6] from F4F5_table,
    also Sniper Joe, also Object1E\r\n    .byte $30,$FD,$D0,$02 ;0A [4] from F391_table\r\n   
    .byte $00,$FC,$00,$00 ;0B used by ZigZagFire, default setting for enemy 0E\r\n   
    .byte $30,$FD,$D0,$02 ;0C\r\n    .byte $00,$00,$00,$04 ;0D [6] from F391_table\r\n   
    .byte $D0,$02,$D0,$02\r\n    .byte $A0,$FF,$80,$00\r\n    .byte $00,$FE,$20,$01
    ;10 Sinewave flier\r\n    .byte $80,$03,$C0,$01 ;11 Bombomb act 0\r\n    .byte
    $40,$03,$00,$01 ;12 Bombomb act 1\r\n    .byte $00,$00,$47,$01 ;13 Metto shot
    0 , Bombomb act 2?\r\n    .byte $BB,$00,$0C,$01 ;14 Metto shot 1 , Bombomb act
    3?\r\n    .byte $45,$FF,$0C,$01 ;15 Metto shot 2 , Bombomb act 4?\r\n    .byte
    $00,$03,$00,$00 ;16 Bombomb act 5? Also [4] from B391_table\r\n    .byte $2C,$02,$2C,$02
    ;17 Bombomb act 6? Also [2,6] from B391_table\r\n    .byte $00,$00,$00,$03 ;18
    Bombomb act 7? Also [0-1,8-9] from B391_table\r\n    .byte $D4,$FD,$2C,$02 ;19
    [3,7] from B391_table\r\n    .byte $00,$FD,$00,$00 ;1A [5] from B391_table, also
    used by ZigZagFire\r\n    .byte $51,$03,$34,$01 ;1B BigEye act 0\r\n    .byte
    $E6,$04,$D1,$00 ;1C BigEye act 1, also Picketman, also Object1C\r\n    .byte
    $10,$FF,$57,$00 ;1D Unknown, used at $05BBC1\r\n    .byte $00,$02,$00,$02 ;1E
    Boss7 C-weapon and [1] from F391_table\r\n    .byte $00,$03,$80,$01 ;1F Boss7
    B-weapon\r\n    .byte $47,$01,$00,$00 ;20\r\n    .byte $B9,$FE,$00,$00\r\n   
    .byte $00,$00,$47,$01 ;22 [0,1] from F4F5_table\r\n    .byte $99,$01,$00,$00\r\n   
    .byte $67,$FE,$00,$00 ;24\r\n    .byte $00,$00,$99,$01 ;25 used in Boss8and9Init,
    also [2,3] from F4F5_table\r\n    .byte $9A,$FD,$00,$00\r\n    .byte $00,$00,$66,$02
    ;28 [4] from F4F5_table\r\n    .byte $33,$03,$00,$00\r\n    .byte $CD,$FC,$00,$00\r\n   
    .byte $00,$00,$33,$03 ;2B [5] from F4F5_table\r\n    .byte $00,$00,$20,$01 ;2C
    Enemy 00,0A,14: bunby heri, hamburger, feet-losing robots\r\n    .byte $C0,$FF,$60,$00
    ;2D Enemy 03: landmine\r\n    .byte $00,$02,$00,$00 ;2E Enemy 04: vertical eyecube\r\n   
    .byte $A0,$00,$00,$00 ;2F Enemy 06: Unknown (watchers?)\r\n    .byte $00,$FE,$20,$01
    ;30 Enemy 07,08: Sinewave fliers\r\n    .byte $C0,$FF,$00,$00 ;31 level-end item,
    enemy 09: jumping telephone post\r\n    .byte $C0,$FF,$90,$01 ;32 Enemy 12: green
    guardian, axe-throwing robot, ROCKMAN?\r\n    .byte $00,$00,$80,$00 ;33 Object3B;
    Enemy 13: Foot holder\r\n    .byte $00,$00,$00,$02 ;34 Foot holder\r\n    .byte
    $00,$02,$00,$05 ;35 [0,3,5] from F391_table\r\n    .byte $00,$03,$00,$04 ;36
    [2] from F391_table\r\n\r\n; In: $00, $01 are something\r\n;      \r\n0001F628:
    A5 0C     lda $0C\r\n0001F62A: 85 02     sta $02\r\n0001F62C: A4 2F     ldy RefObjectNumber\r\n0001F62E:
    38        sec\r\n0001F62F: B9 00 06  lda ObjectPosY,y\r\n0001F632: ED 00 06 
    sbc ObjectPosY+0                                 ; ObjectPosY+0\r\n0001F635:
    85 03     sta $03\r\n0001F637: 20 C6 F8  jsr F8C6_routine\r\n0001F63A: 60       
    rts\r\n\r\n\r\n\r\n\r\nEnemySearchMegaman\r\n; Makes the object face towards
    Megaman, and calculates the (horizontal) distance too\r\n;\r\n; Sets object facing.\r\n;
    Return value; signed integer: distance to Megaman in pixels\r\n;\r\n0001F63B:
    BD 20 04  lda ObjectFlags,x \r\n0001F63E: 29 BF     and #$BF\r\n0001F640: 9D
    20 04  sta ObjectFlags,x ;Makes the object face left\r\n0001F643: 38        sec\r\n0001F644:
    AD 80 04  lda ObjectPosX+0\r\n0001F647: FD 80 04  sbc ObjectPosX,x\r\n0001F64A:
    A8        tay\r\n0001F64B: AD 60 04  lda ObjectPosScreen+0                        
    ; $0460\r\n0001F64E: FD 60 04  sbc ObjectPosScreen,x\r\n0001F651: 90 0A     bcc
    +                                           ; $F65D\r\n\r\n0001F653: BD 20 04 
    lda ObjectFlags,x\r\n0001F656: 09 40     ora #$40\r\n0001F658: 9D 20 04  sta
    ObjectFlags,x ;Makes the object face right\r\n0001F65B: 98        tya\r\n0001F65C:
    60        rts\r\n+\r\n0001F65D: 98        tya\r\n0001F65E: 49 FF     eor #$FF\r\n0001F660:
    69 01     adc #$01\r\n0001F662: 60        rts\r\n\r\n\r\n\r\n; Issue bullet sound
    if object type is #$1A or #$2D\r\nCreateEnemy\r\n0001F663: 48        pha\r\n0001F664:
    C9 1A     cmp #$1A\r\n0001F666: F0 04     beq +                                          
    ; $F66C\r\n0001F668: C9 2D     cmp #$2D\r\n0001F66A: D0 05     bne ++                                         
    ; $F671\r\n+\r\n0001F66C: A9 15     lda #$15        ; Enemy bullet\r\n0001F66E:
    20 77 C4  jsr IssueSound                                  ; $C477\r\n++\r\n0001F671:
    68        pla\r\n\r\n0001F672: 48        pha\r\n0001F673: A2 10     ldx #$10\r\n0001F675:
    20 76 C5  jsr FindFreeObject                              ; FindFreeObject\r\n0001F678:
    B0 40     bcs ++                                          ; $F6BA\r\n0001F67A:
    68        pla\r\n\r\nInitActor\r\n; A               = enemy type\r\n; X              
    = target enemy (from FindFreeObject, hopefully)\r\n; RefObjectNumber = source
    enemy\r\n0001F67B: 9D E0 06  sta ObjectType,x\r\n0001F67E: A9 FF     lda #$FF\r\n0001F680:
    9D 00 04  sta ObjectSpriteNum,x\r\n0001F683: A4 2F     ldy RefObjectNumber\r\n\r\n0001F685:
    B9 00 06  lda ObjectPosY,y\r\n0001F688: 9D 00 06  sta ObjectPosY,x\r\n\r\n0001F68B:
    B9 80 04  lda ObjectPosX,y\r\n0001F68E: 9D 80 04  sta ObjectPosX,x\r\n\r\n0001F691:
    B9 60 04  lda ObjectPosScreen,y\r\n0001F694: 9D 60 04  sta ObjectPosScreen,x\r\n\r\n;
    Make bullet move in the direction the enemy\r\n; is facing and set collision
    detection ON\r\n0001F697: B9 20 04  lda ObjectFlags,y\r\n0001F69A: 29 40    
    and #$40\r\n0001F69C: 09 02     ora #$02\r\n0001F69E: 9D 20 04  sta ObjectFlags,x\r\n\r\n;
    Give the bullet #20 life units... =)\r\n0001F6A1: A9 14     lda #$14\r\n0001F6A3:
    9D C0 06  sta ObjectLifeMeter,x\r\n\r\n0001F6A6: A9 00     lda #$00\r\n0001F6A8:
    9D 40 04  sta ObjectUnknown440,x\r\n0001F6AB: 9D 40 06  sta ObjectFireDelay,x\r\n0001F6AE:
    9D A0 06  sta ObjectLifeCycleCounter,x\r\n\r\n0001F6B1: E0 10     cpx #$10\r\n0001F6B3:
    90 03     bcc +                                           ; $F6B8\r\n0001F6B5:
    9D 80 05  sta  IssuedSoundsList,x\r\n+\r\n0001F6B8: 18        clc\r\n0001F6B9:
    60        rts\r\n\r\n++\r\n0001F6BA: 68        pla\r\n0001F6BB: 60        rts\r\n\r\nCheckMagnetBeamCollisionWithBG\r\n0001F6BC:
    BD A0 05  lda MagnetBeamLength,x\r\n0001F6BF: 29 7C     and #$7C\r\n0001F6C1:
    0A        asl a\r\n0001F6C2: 69 08     adc #$08\r\n0001F6C4: 09 02     ora #$02\r\n0001F6C6:
    85 0C     sta $0C\r\n0001F6C8: BD 20 04  lda ObjectFlags,x\r\n0001F6CB: 29 40    
    and #$40\r\n0001F6CD: F0 10     beq +\r\n; Points to RIGHT?\r\n0001F6CF: 18       
    clc\r\n0001F6D0: BD C0 05  lda MagnetBeamPosX,x\r\n0001F6D3: 65 0C     adc $0C\r\n0001F6D5:
    85 0D     sta $0D\r\n0001F6D7: BD D0 05  lda MagnetBeamPosScreen,x\r\n0001F6DA:
    69 00     adc #$00\r\n0001F6DC: 4C EC F6  jmp ++\r\n+ ;Points to LEFT?\r\n0001F6DF:
    38        sec\r\n0001F6E0: BD C0 05  lda MagnetBeamPosX,x\r\n0001F6E3: E5 0C    
    sbc $0C\r\n0001F6E5: 85 0D     sta $0D\r\n0001F6E7: BD D0 05  lda MagnetBeamPosScreen,x\r\n0001F6EA:
    E9 00     sbc #$00\r\n++\r\n0001F6EC: 85 0C     sta $0C\r\n0001F6EE: BD F0 05 
    lda MagnetBeamPosY,x\r\n0001F6F1: 85 0E     sta $0E\r\n0001F6F3: 20 9C C3  jsr
    SwitchBankStage                             ; $C39C\r\n0001F6F6: 20 B7 CC  jsr
    ReadCurrentStageMap\r\n0001F6F9: A8        tay\r\n0001F6FA: 4C B3 C3  jmp SwitchBank05                               
    ; $C3B3\r\n\r\n\r\nRoutineF6FD_GutsmanWeapon\r\n0001F6FD: A5 60     lda WeaponFiring\r\n0001F6FF:
    D0 37     bne $0001F738\r\n0001F701: AD 20 04  lda ObjectFlags+0\r\n0001F704:
    A2 00     ldx #$00\r\n0001F706: 29 40     and #$40\r\n0001F708: F0 02     beq
    +                                           ; $F70C\r\n0001F70A: A2 02     ldx
    #$02\r\n+\r\n0001F70C: 18        clc\r\n0001F70D: AD 80 04  lda ObjectPosX+0\r\n0001F710:
    7D 8B F7  adc F78B_table+0,x\r\n0001F713: 85 0D     sta $0D\r\n0001F715: AD 60
    04  lda ObjectPosScreen+0                         ; $0460\r\n0001F718: 7D 8C
    F7  adc F78B_table+1,x\r\n0001F71B: 85 0C     sta $0C\r\n0001F71D: AD 00 06 
    lda ObjectPosY+0                                 ; ObjectPosY+0\r\n0001F720:
    85 0E     sta $0E\r\n0001F722: A4 8E     ldy ActivesLowerIndex\r\n0001F724: 20
    8A CD  jsr CheckCollisionAgainstActives\r\n0001F727: C9 82     cmp #$82\r\n0001F729:
    F0 0E     beq ++\r\n0001F72B: A0 FF     ldy #$FF\r\n0001F72D: C4 52     cpy GutsmanWeaponTargetActive\r\n0001F72F:
    F0 07     beq +\r\n0001F731: 84 52     sty GutsmanWeaponTargetActive\r\n0001F733:
    A9 F8     lda #$F8\r\n0001F735: 8D 05 06  sta ObjectPosY+5\r\n+\r\n0001F738:
    60        rts\r\n++\r\n0001F739: 84 52     sty GutsmanWeaponTargetActive\r\n0001F73B:
    A5 23     lda FrameCounter\r\n0001F73D: 29 04     and #$04\r\n0001F73F: D0 F2    
    bne $0001F733\r\n0001F741: A2 05     ldx #$05\r\n; Launch debris\r\n0001F743:
    A9 02     lda #$02\r\n0001F745: 20 13 A9  jsr LaunchMegamanWeaponShot\r\n0001F748:
    A4 52     ldy GutsmanWeaponTargetActive\r\n0001F74A: 18        clc\r\n0001F74B:
    B9 23 07  lda RoomActiveTable+3,y ;the x1 of the gutsblock\r\n0001F74E: 69 10    
    adc #$10\r\n0001F750: 9D 80 04  sta ObjectPosX,x\r\n0001F753: B9 24 07  lda RoomActiveTable+4,y
    ;the y1 of the gutsblock\r\n0001F756: 18        clc\r\n0001F757: 69 0F     adc
    #$0F\r\n0001F759: 9D 00 06  sta ObjectPosY,x\r\n0001F75C: A9 6C     lda #$6C\r\n0001F75E:
    9D 00 04  sta ObjectSpriteNum,x\r\n0001F761: BD 20 04  lda ObjectFlags,x\r\n0001F764:
    29 BE     and #$BE\r\n0001F766: 9D 20 04  sta ObjectFlags,x\r\n0001F769: 60       
    rts\r\n\r\n\r\nLoadGutsblockPosition\r\n0001F76A: A5 1C     lda TSAPPUtransferSize\r\n0001F76C:
    0A        asl a\r\n0001F76D: 0A        asl a\r\n0001F76E: 85 0D     sta $0D\r\n0001F770:
    0A        asl a\r\n0001F771: 0A        asl a\r\n0001F772: 18        clc\r\n0001F773:
    65 1C     adc TSAPPUtransferSize\r\n0001F775: 18        clc\r\n0001F776: 65 0D    
    adc $0D\r\n0001F778: 85 0D     sta $0D\r\n0001F77A: B9 24 07  lda RoomActiveTable+4,y
    ;the y1 of the gutsblock\r\n0001F77D: 4A        lsr a\r\n0001F77E: 4A       
    lsr a\r\n0001F77F: 4A        lsr a\r\n0001F780: 19 23 07  ora RoomActiveTable+3,y
    ;the x1 of the gutsblock\r\n0001F783: 85 04     sta $04\r\n0001F785: B9 22 07 
    lda RoomActiveTable+2,y ;the screen# of the gutsblock\r\n0001F788: 85 05    
    sta $05\r\n0001F78A: 60        rts\r\n\r\nF78B_table:\r\n    .byte $F7,$FF\r\n       
    .byte $08,$00\r\n\r\nGutsblockHitByElecBeam:\r\n0001F78F: A9 FF     lda #$FF\r\n0001F791:
    85 61     sta NumberOfFramesSinceShooting\r\n0001F793: A9 04     lda #$04\r\n0001F795:
    99 21 07  sta RoomActiveTable+1,y ;set the gutsblock as disintegrated\r\n0001F798:
    A9 00     lda #$00\r\n0001F79A: 85 2F     sta RefObjectNumber\r\n0001F79C: 98       
    tya\r\n0001F79D: 48        pha\r\n0001F79E: 20 6A F7  jsr LoadGutsblockPosition\r\n0001F7A1:
    20 E8 CD  jsr DrawBlockFromActiveLevelMap\r\n0001F7A4: 68        pla\r\n0001F7A5:
    A8        tay\r\n0001F7A6: B9 24 07  lda RoomActiveTable+4,y ;load y1\r\n0001F7A9:
    85 03     sta $03\r\n0001F7AB: B9 23 07  lda RoomActiveTable+3,y ;load x1\r\n0001F7AE:
    85 00     sta $00\r\n0001F7B0: B9 22 07  lda RoomActiveTable+2,y ;load screen#\r\n0001F7B3:
    85 01     sta $01\r\n0001F7B5: AD 25 04  lda ObjectFlags+5\r\n0001F7B8: 29 40    
    and #$40\r\n0001F7BA: 09 04     ora #$04\r\n0001F7BC: 85 02     sta $02\r\n0001F7BE:
    A2 05     ldx #$05\r\n0001F7C0: A0 00     ldy #$00\r\n-\r\n0001F7C2: 84 0C    
    sty $0C\r\n0001F7C4: 20 E2 F7  jsr CreateGutsblockPieces\r\n0001F7C7: E6 0C    
    inc $0C\r\n0001F7C9: A4 0C     ldy $0C\r\n0001F7CB: E8        inx\r\n0001F7CC:
    E0 09     cpx #$09\r\n0001F7CE: D0 F2     bne -\r\n0001F7D0: A2 09     ldx #$09\r\n0001F7D2:
    A9 F8     lda #$F8\r\n-\r\n0001F7D4: 9D 00 06  sta ObjectPosY,x\r\n0001F7D7:
    E8        inx\r\n0001F7D8: E0 10     cpx #$10\r\n0001F7DA: D0 F8     bne -\r\n\r\n0001F7DC:
    A9 17     lda #$17        ; Throw boulder sound\r\n0001F7DE: 20 77 C4  jsr IssueSound                                 
    ; $C477\r\n0001F7E1: 60        rts\r\n\r\n\r\nCreateGutsblockPieces\r\n; In:
    X=object number\r\n;     Y=0-3 (index of the piece)\r\n0001F7E2: 18        clc\r\n0001F7E3:
    A5 00     lda $00\r\n0001F7E5: 79 26 F8  adc F826_table,y\r\n0001F7E8: 9D 80
    04  sta ObjectPosX,x\r\n0001F7EB: A5 01     lda $01\r\n0001F7ED: 69 00     adc
    #$00\r\n0001F7EF: 9D 60 04  sta ObjectPosScreen,x\r\n0001F7F2: 18        clc\r\n0001F7F3:
    A5 03     lda $03\r\n0001F7F5: 79 2A F8  adc F82A_table,y\r\n0001F7F8: 9D 00
    06  sta ObjectPosY,x\r\n0001F7FB: B9 2E F8  lda F82E_table,y\r\n0001F7FE: 9D
    C0 04  sta ObjectXSpeed,x\r\n0001F801: B9 32 F8  lda F832_table,y\r\n0001F804:
    9D 80 06  sta ObjectYSpeed,x\r\n0001F807: A5 02     lda $02\r\n0001F809: 9D 20
    04  sta ObjectFlags,x\r\n0001F80C: A4 31     ldy CurrentStage\r\n0001F80E: B9
    36 F8  lda F836_table,y\r\n0001F811: 9D 00 04  sta ObjectSpriteNum,x\r\n0001F814:
    A9 00     lda #$00\r\n0001F816: 9D E0 04  sta ObjectXSpeedFraction,x\r\n0001F819:
    9D 60 06  sta ObjectYSpeedFraction,x\r\n0001F81C: 9D 40 04  sta ObjectUnknown440,x\r\n0001F81F:
    9D 40 06  sta ObjectFireDelay,x\r\n0001F822: 9D A0 06  sta ObjectLifeCycleCounter,x\r\n0001F825:
    60        rts\r\n\r\nF826_table: .byte $08,$18,$08,$18 ;PosX modifier\r\nF82A_table:
    .byte $08,$08,$18,$18 ;PosY modifier\r\nF82E_table: .byte $04,$04,$03,$03 ;XSpeed
    for gutsblock\r\nF832_table: .byte $02,$00,$02,$00 ;YSpeed for gutsblock\r\nF836_table:
    .byte $6D,$6D,$6D,$6D,$6D,$6D\r\n            .byte $56,$6D,$6D,$6D,$56,$6D ;SpriteNum\r\n\r\nCreateExplosionObject\r\n0001F841:
    B9 00 06  lda ObjectPosY,y\r\n0001F844: 9D 00 06  sta ObjectPosY,x\r\n0001F847:
    B9 80 04  lda ObjectPosX,y\r\n0001F84A: 9D 80 04  sta ObjectPosX,x\r\n0001F84D:
    B9 60 04  lda ObjectPosScreen,y\r\n0001F850: 9D 60 04  sta ObjectPosScreen,x\r\n0001F853:
    A5 0D     lda $0D\r\n0001F855: 9D 00 04  sta ObjectSpriteNum,x\r\n0001F858: A4
    0C     ldy $0C\r\n0001F85A: B9 8A F8  lda F88A_table,y\r\n0001F85D: 9D E0 04 
    sta ObjectXSpeedFraction,x\r\n0001F860: B9 96 F8  lda F896_table,y\r\n0001F863:
    9D C0 04  sta ObjectXSpeed,x\r\n0001F866: B9 A2 F8  lda F8A2_table,y\r\n0001F869:
    9D 60 06  sta ObjectYSpeedFraction,x\r\n0001F86C: B9 AE F8  lda F8AE_table,y\r\n0001F86F:
    9D 80 06  sta ObjectYSpeed,x\r\n0001F872: B9 BA F8  lda F8BA_table,y\r\n0001F875:
    05 0E     ora $0E\r\n0001F877: 9D 20 04  sta ObjectFlags,x\r\n0001F87A: A9 10    
    lda #$10\r\n0001F87C: 9D 40 04  sta ObjectUnknown440,x\r\n0001F87F: A9 00    
    lda #$00\r\n0001F881: 9D A0 06  sta ObjectLifeCycleCounter,x\r\n0001F884: 9D
    40 06  sta ObjectFireDelay,x\r\n0001F887: C6 0C     dec $0C\r\n0001F889: 60       
    rts\r\n\r\nF88A_table: .byte $00,$00,$00,$00,$60,$60 ;ObjectXSpeedFraction for
    explosion\r\n            .byte $60,$60,$00,$C0,$00,$E0\r\nF896_table: .byte $00,$02,$00,$02,$01,$01
    ;ObjectXSpeed for explosion\r\n            .byte $01,$01,$00,$00,$00,$00\r\nF8A2_table:
    .byte $00,$00,$00,$00,$60,$A0 ;ObjectYSpeedFraction for explosion\r\n           
    .byte $A0,$60,$C0,$00,$40,$00\r\nF8AE_table: .byte 2,0,-2,0,1,-2           ;ObjectYSpeed
    for explosion\r\n            .byte -2,1,0,0,-1,0\r\nF8BA_table: .byte $00,$40,$00,$00,$40,$40
    ;ObjectFlags for explosion\r\n            .byte $00,$00,$00,$40,$00,$00\r\n\r\nF8C6_routine:\r\n0001F8C6:
    08        php\r\n0001F8C7: B0 06     bcs +\r\n0001F8C9: A5 03     lda $03\r\n0001F8CB:
    49 FF     eor #$FF\r\n0001F8CD: 85 03     sta $03\r\n+\r\n0001F8CF: A5 02    
    lda $02\r\n0001F8D1: 86 0C     stx $0C\r\n0001F8D3: C5 03     cmp $03\r\n0001F8D5:
    90 2F     bcc +  ; $0001F906\r\n0001F8D7: A5 01     lda $01\r\n0001F8D9: 9D C0
    04  sta ObjectXSpeed,x\r\n0001F8DC: 85 07     sta CurrentRoomPointer+1\r\n0001F8DE:
    A5 00     lda $00\r\n0001F8E0: 9D E0 04  sta ObjectXSpeedFraction,x\r\n0001F8E3:
    85 06     sta CurrentRoomPointer\r\n0001F8E5: A5 02     lda $02\r\n0001F8E7:
    20 4C F9  jsr $F94C\r\n0001F8EA: A5 09     lda CurrentRoomPointer+3\r\n0001F8EC:
    85 07     sta CurrentRoomPointer+1\r\n0001F8EE: A5 08     lda CurrentRoomPointer+2\r\n0001F8F0:
    85 06     sta CurrentRoomPointer\r\n0001F8F2: A5 03     lda $03\r\n0001F8F4:
    20 4C F9  jsr $F94C\r\n0001F8F7: A6 0C     ldx $0C\r\n0001F8F9: A5 09     lda
    CurrentRoomPointer+3\r\n0001F8FB: 9D 80 06  sta ObjectYSpeed,x\r\n0001F8FE: A5
    08     lda CurrentRoomPointer+2\r\n0001F900: 9D 60 06  sta ObjectYSpeedFraction,x\r\n0001F903:
    4C 32 F9  jmp $F932\r\n+\r\n0001F906: A5 01     lda $01\r\n0001F908: 9D 80 06 
    sta ObjectYSpeed,x\r\n0001F90B: 85 07     sta CurrentRoomPointer+1\r\n0001F90D:
    A5 00     lda $00\r\n0001F90F: 9D 60 06  sta ObjectYSpeedFraction,x\r\n0001F912:
    85 06     sta CurrentRoomPointer\r\n0001F914: A5 03     lda $03\r\n0001F916:
    20 4C F9  jsr $F94C\r\n0001F919: A5 09     lda CurrentRoomPointer+3\r\n0001F91B:
    85 07     sta CurrentRoomPointer+1\r\n0001F91D: A5 08     lda CurrentRoomPointer+2\r\n0001F91F:
    85 06     sta CurrentRoomPointer\r\n0001F921: A5 02     lda $02\r\n0001F923:
    20 4C F9  jsr $F94C\r\n0001F926: A6 0C     ldx $0C\r\n0001F928: A5 09     lda
    CurrentRoomPointer+3\r\n0001F92A: 9D C0 04  sta ObjectXSpeed,x\r\n0001F92D: A5
    08     lda CurrentRoomPointer+2\r\n0001F92F: 9D E0 04  sta ObjectXSpeedFraction,x\r\n0001F932:
    28        plp\r\n0001F933: B0 16     bcs $0001F94B\r\n0001F935: BD 80 06  lda
    ObjectYSpeed,x\r\n0001F938: 49 FF     eor #$FF\r\n0001F93A: 48        pha\r\n0001F93B:
    BD 60 06  lda ObjectYSpeedFraction,x\r\n0001F93E: 49 FF     eor #$FF\r\n0001F940:
    69 01     adc #$01\r\n0001F942: 9D 60 06  sta ObjectYSpeedFraction,x\r\n0001F945:
    68        pla\r\n0001F946: 69 00     adc #$00\r\n0001F948: 9D 80 06  sta ObjectYSpeed,x\r\n0001F94B:
    60        rts\r\n\r\n0001F94C: 85 05     sta $05\r\n0001F94E: A9 00     lda #$00\r\n0001F950:
    85 04     sta $04\r\n0001F952: 20 D5 C5  jsr $C5D5\r\n0001F955: 60        rts\r\n\r\n\r\n\r\n\r\n;\r\n;
    This routine seems to use the ExtraLives variable for something else...\r\n;\r\n;
    (Title screen?...)\r\n;\r\n\r\nDrawAtReset\r\n\r\n0001F956: 20 9C C3  jsr SwitchBankStage    
    ; $C39C\r\n\r\n0001F959: A9 20     lda #$20\r\n0001F95B: 8D 06 20  sta $2006
    ;mem addr $2000\r\n0001F95E: A9 00     lda #$00\r\n0001F960: 8D 06 20  sta $2006\r\n0001F963:
    A2 0E     ldx #$0E\r\n0001F965: A9 80         lda #$80 ;decide tile $80\r\n0001F967:
    A4 A6     ldy ExtraLives\r\n0001F969: 10 02     bpl +                                          
    ; $F96D\r\n0001F96B: A9 A0     lda #$A0 ;decide tile $A0\r\n+\r\n--\r\n0001F96D:
    A0 40     ldy #$40\r\n-\r\n0001F96F: 8D 07 20  sta $2007 ;write data\r\n0001F972:
    88        dey\r\n0001F973: D0 FA     bne -                                          
    ; $F96F\r\n0001F975: CA        dex\r\n0001F976: 10 F5     bpl --                                         
    ; $F96D\r\n\r\n\r\n\r\n0001F978: A5 A6     lda ExtraLives\r\n 01F97A 10 03      
    bpl +\r\n 01F97C 4C 5C FA    jmp ++\r\n\r\n/*\r\nContents of the data for game
    over screen:\r\n(located at 0EC7 in bank 4):\r\n(Note: $0EC7 equals $EA1 + $26)\r\n\r\n0000
    attribute data (8 bytes) for 8 rows\r\n0008 7 records of this type (begins at
    ECF):\r\n  0000 First byte of VRAM address\r\n  0007 Second byte of VRAM address\r\n 
    000E Number of tiles to write to this address\r\n   (the tiles written are values
    of Y, consequent integers)\r\n001D text data in this format (begins at 0EE4):\r\n 
    0000 word nametable address (ex. 222B)\r\n  0002 byte number of bytes (ex. 0B)\r\n 
    0003 data                 (ex. \"PRESS START\")\r\n  Total number of entries
    is $04 (hardcoded at $F9D5).\r\n*/\r\n \r\n\r\n+\r\n 01F97F A2 07       ldx #$07\r\n--\r\n
    01F981 A0 08       ldy #$08\r\n-\r\n 01F983 BD C7 8E    lda $8EC7,x ;startup
    screen data\r\n 01F986 8D 07 20    sta $2007\r\n 01F989 88          dey \r\n
    01F98A D0 F7       bne -\r\n 01F98C CA          dex \r\n 01F98D 10 F2       bpl
    --\r\n 01F98F A2 06       ldx #$06\r\n--\r\n 01F991 BD CF 8E    lda $8ECF,x\r\n
    01F994 8D 06 20    sta $2006\r\n 01F997 BD D6 8E    lda $8ED6,x\r\n 01F99A 8D
    06 20    sta $2006\r\n 01F99D 86 0C       stx $0C\r\n 01F99F BD DD 8E    lda
    $8EDD,x\r\n 01F9A2 AA          tax \r\n-\r\n 01F9A3 8C 07 20    sty $2007\r\n
    01F9A6 C8          iny \r\n 01F9A7 CA          dex \r\n 01F9A8 D0 F9       bne
    -\r\n 01F9AA A6 0C       ldx $0C\r\n 01F9AC CA          dex \r\n 01F9AD 10 E2      
    bpl --\r\n 01F9AF A9 23       lda #$23  ;mem addr $23DE\r\n 01F9B1 8D 06 20   
    sta $2006\r\n 01F9B4 A9 DE       lda #$DE\r\n 01F9B6 8D 06 20    sta $2006\r\n
    01F9B9 A9 A0       lda #$A0\r\n 01F9BB 8D 07 20    sta $2007 ;write $A0\r\n 01F9BE
    A9 21       lda #$21\r\n 01F9C0 8D 06 20    sta $2006 ;mem addr $21D9\r\n 01F9C3
    A9 D9       lda #$D9\r\n 01F9C5 8D 06 20    sta $2006\r\n 01F9C8 A9 94      
    lda #$94\r\n 01F9CA 8D 07 20    sta $2007 ;write $94, $8D\r\n 01F9CD A9 8D      
    lda #$8D\r\n 01F9CF 8D 07 20    sta $2007\r\n 01F9D2 E8          inx \r\n 01F9D3
    A9 04       lda #$04\r\n 01F9D5 85 0C       sta $0C\r\n--\r\n 01F9D7 BD E4 8E   
    lda $8EE4,x\r\n 01F9DA 8D 06 20    sta $2006\r\n 01F9DD E8          inx \r\n
    01F9DE BD E4 8E    lda $8EE4,x\r\n 01F9E1 8D 06 20    sta $2006\r\n 01F9E4 E8         
    inx \r\n 01F9E5 BC E4 8E    ldy $8EE4,x\r\n 01F9E8 E8          inx \r\n-\r\n
    01F9E9 BD E4 8E    lda $8EE4,x\r\n 01F9EC 8D 07 20    sta $2007\r\n\r\n 01F9EF
    E8          inx \r\n 01F9F0 88          dey \r\n 01F9F1 D0 F6       bne -\r\n
    01F9F3 C6 0C       dec $0C\r\n 01F9F5 D0 E0       bne --\r\n\r\n ; Graphics setup
    completed. Wait for input.\r\n----\r\n 01F9F7 A0 00       ldy #$00\r\n 01F9F9
    84 BC       sty IgnoreStageSelection\r\n 01F9FB A2 40       ldx #$40\r\n 01F9FD
    20 78 D4    jsr HideSprites\r\n 01FA00 A5 FF       lda PPU2000value\r\n 01FA02
    09 80       ora #$80\r\n 01FA04 85 FF       sta PPU2000value\r\n 01FA06 8D 00
    20    sta $2000\r\n 01FA09 A5 A6       lda ExtraLives\r\n 01FA0B 30 21      
    bmi +\r\n \r\n ; Read input for logo screen.\r\n-\r\n 01FA0D 20 1B C0    jsr
    NextFrame\r\n 01FA10 A5 14       lda Joypad0\r\n 01FA12 C9 08       cmp #$08\r\n
    01FA14 D0 F7       bne -\r\n 01FA16 20 4F C7    jsr PaletteSetupForBGwith3F0\r\n
    01FA19 A9 78       lda #$78\r\n 01FA1B 85 37       sta PaletteUpdateDelay\r\n
    01FA1D A9 80       lda #$80\r\n 01FA1F 85 3C       sta MiscCounter1\r\n-\r\n
    01FA21 20 1B C0    jsr NextFrame\r\n 01FA24 C6 3C       dec $3C\r\n 01FA26 D0
    F9       bne -\r\n---\r\n 01FA28 20 95 D4    jsr DisableNMI&PPU\r\n 01FA2B 4C
    B3 C3    jmp SwitchBank05\r\n\r\n ; Read input for \"game over\" screen\r\n+\r\n
    01FA2E A2 03       ldx #$03\r\n-\r\n 01FA30 BD 58 FA    lda FA57_table+1,x\r\n
    01FA33 9D 04 02    sta CurrentSpriteData+0,x\r\n 01FA36 CA          dex \r\n
    01FA37 10 F7       bpl -\r\n 01FA39 A2 01       ldx #$01\r\n--\r\n 01FA3B 86
    BC       stx IgnoreStageSelection\r\n-\r\n 01FA3D 20 1B C0    jsr NextFrame\r\n
    01FA40 A5 18       lda JoyD0\r\n 01FA42 29 0C       and #$0C\r\n 01FA44 F0 F7      
    beq -\r\n 01FA46 29 08       and #$08\r\n 01FA48 D0 DE       bne ---\r\n 01FA4A
    A5 BC       lda IgnoreStageSelection\r\n 01FA4C 49 01       eor #$01\r\n 01FA4E
    AA          tax \r\n 01FA4F BD 57 FA    lda FA57_table,x\r\n 01FA52 8D 04 02   
    sta CurrentSpriteData\r\n 01FA55 D0 E4       bne --\r\n\r\n; Data for the arrow
    cursor.\r\n\r\nFA57_table:\r\n    .byte $90,$80 ; Y position for \"new game\"
    and \"continue\"\r\n        .byte $DA     ; Tile numer probably\r\n        .byte
    $01     ; Enabled or palette or something like that\r\n        .byte $50    
    ; X position probably\r\n\r\n++\r\n 01FA5C A9 AA       lda #$AA\r\n 01FA5E A2
    40       ldx #$40\r\n-\r\n 01FA60 8D 07 20    sta $2007\r\n 01FA63 CA         
    dex \r\n 01FA64 D0 FA       bne -\r\n 01FA66 A9 11       lda #$11\r\n 01FA68
    8D DB 03    sta $03DB\r\n 01FA6B 20 3F C7    jsr PaletteSetupForBG\r\n 01FA6E
    20 0A D6    jsr UpdatePalettes\r\n 01FA71 A2 00       ldx #$00\r\n \r\n/*\r\nContents
    of the data for game over screen:\r\n(located at 0EA1 in bank 4):\r\n\r\n0000
    word nametable address (ex. 212C)\r\n0002 byte number of bytes (ex. 09)\r\n0003
    data                 (ex. \"GAME OVER\")\r\nTotal number of bytes is $26 (hardcoded
    at $FA8F).\r\n*/\r\n \r\n--\r\n 01FA73 BD A1 8E    lda $8EA1,x\r\n 01FA76 8D
    06 20    sta $2006\r\n 01FA79 E8          inx \r\n 01FA7A BD A1 8E    lda $8EA1,x\r\n
    01FA7D 8D 06 20    sta $2006\r\n 01FA80 E8          inx \r\n 01FA81 BC A1 8E   
    ldy $8EA1,x\r\n 01FA84 E8          inx \r\n-\r\n 01FA85 BD A1 8E    lda $8EA1,x\r\n
    01FA88 8D 07 20    sta $2007\r\n 01FA8B E8          inx \r\n 01FA8C 88         
    dey \r\n 01FA8D D0 F6       bne -\r\n 01FA8F E0 26       cpx #$26\r\n 01FA91
    D0 E0       bne --\r\n 01FA93 A9 21       lda #$21\r\n 01FA95 8D 06 20    sta
    $2006\r\n 01FA98 A9 6D       lda #$6D\r\n 01FA9A 8D 06 20    sta $2006\r\n 01FA9D
    A2 06       ldx #$06\r\n-\r\n 01FA9F B5 72       lda Score,x\r\n 01FAA1 09 D0      
    ora #$D0\r\n 01FAA3 8D 07 20    sta $2007\r\n 01FAA6 CA          dex \r\n 01FAA7
    10 F6       bpl -\r\n 01FAA9 84 1A       sty $1A\r\n 01FAAB 84 1B       sty $1B\r\n
    01FAAD A9 03       lda #$03        ;game over-music\r\n 01FAAF 20 77 C4    jsr
    IssueSound\r\n 01FAB2 4C F7 F9    jmp ----\r\n\r\nTableObjectXWidthTable2 ; at
    FAB5\r\n    .byte $08, $08, $08, $08 ;00\r\n    .byte $08, $08, $08, $08\r\n   
    .byte $08, $08, $08, $08 ;08\r\n    .byte $08, $08, $08, $08\r\n    .byte $08,
    $08, $08, $08 ;10\r\n    .byte $08, $08, $08, $08\r\n    .byte $08, $00, $04,
    $08 ;18\r\n    .byte $08, $08, $08, $08\r\n    .byte $08, $08, $08, $08 ;20\r\n   
    .byte $08, $10, $10, $08\r\n    .byte $08, $08, $08, $08 ;28\r\n    .byte $08,
    $10, $10, $10\r\n    .byte $10, $10, $0E, $08 ;30\r\n    .byte $08, $08, $08,
    $08\r\n    .byte $08, $08, $04, $08 ;38\r\n    .byte $08, $08, $08, $08\r\n   
    .byte $08, $08, $08, $08 ;40\r\n    .byte $08, $08, $08, $08 ;44\r\n    .byte
    $08, $06, $08      ;48,49,4A\r\n;ETCETC STUFF IS MISSING HERE\r\nTableObjectXWidthTable1
    ;at FB00\r\n    .byte $08, $08, $08, $08 ;00\r\n    .byte $07, $08, $08, $0A
    \r\n    .byte $06, $0C, $08, $02 ;08\r\n    .byte $1E, $08, $07, $06\r\n    .byte
    $08, $08, $08, $08 ;10\r\n    .byte $08, $09, $08, $02\r\n    .byte $04, $02,
    $01, $08 ;18\r\n    .byte $02, $0C, $07, $0C\r\n    .byte $04, $07, $02, $02
    ;20\r\n    .byte $1E, $02, $04, $08\r\n    .byte $08, $08, $08, $0C ;28\r\n   
    .byte $01, $01, $06, $01\r\n    .byte $01, $06, $01, $06 ;30\r\n    .byte $06,
    $08, $07, $07\r\n    .byte $07, $03, $1E, $01 ;38\r\n    .byte $04, $06, $06,
    $04\r\n    .byte $04, $04, $04, $02 ;40\r\n    .byte $08, $08, $04, $04 ;44\r\n   
    .byte $06, $04, $09      ;48,49,4A\r\nTableObjectYHeightTable2 ;at FB4B\r\n   
    .byte $0C, $0C, $0C, $0C ;00\r\n    .byte $0C, $0C, $0C, $0C ;\r\n    .byte $0C,
    $0C, $0C, $0C ;08\r\n    .byte $0C, $0C, $0C, $0C ;\r\n    .byte $0C, $0C, $0C,
    $0C ;10\r\n    .byte $0C, $0C, $0C, $0C\r\n    .byte $0C, $00, $04, $0C ;18\r\n   
    .byte $0C, $0C, $0C, $0C\r\n    .byte $0C, $0C, $0C, $0C ;20\r\n    .byte $0C,
    $10, $10, $08\r\n    .byte $0C, $0C, $0C, $0C ;28\r\n    .byte $0C, $10, $10,
    $10\r\n    .byte $10, $10, $0E, $0C ;30\r\n    .byte $0C, $0C, $10, $10\r\n   
    .byte $08, $08, $04, $0C ;38\r\n    .byte $0C, $0C, $0C, $0C\r\n    .byte $0C,
    $0C, $0C, $0C ;40\r\n    .byte $0C, $06, $0C, $0C ;44\r\n    .byte $0C, $0C,
    $0C      ;48,49,4A\r\n;ETCETC STUFF IS MISSING HERE\r\nTableObjectYHeightTable1
    ;at FB96\r\n    .byte $08, $08, $08, $04 ;00\r\n    .byte $07, $08, $0C, $08\r\n   
    .byte $08, $14, $09, $08 ;08\r\n    .byte $06, $08, $04, $1E\r\n    .byte $08,
    $08, $0C, $08 ;10\r\n    .byte $10, $0C, $08, $08\r\n    .byte $04, $08, $02,
    $08 ;18\r\n    .byte $02, $04, $08, $07\r\n    .byte $04, $07, $08, $08 ;20\r\n   
    .byte $06, $08, $04, $08\r\n    .byte $08, $08, $18, $04 ;28\r\n    .byte $01,
    $01, $06, $01\r\n    .byte $01, $06, $01, $06 ;30\r\n    .byte $06, $08, $07,
    $07\r\n    .byte $07, $28, $1E, $01 ;38\r\n    .byte $04, $06, $06, $08\r\n   
    .byte $08, $08, $08, $10 ;40\r\n    .byte $08, $08, $04, $04 ;44\r\n    .byte
    $06, $04, $09      ;48,49,4A\r\nWeaponDamageP ;at FBE1\r\n    .byte 20,20,20,0\r\n   
    .byte 4,7,20,20\r\n    .byte 20,1,20,20\r\n    .byte 20,0,20,0\r\n    .byte 20,4,2,0\r\n   
    .byte 7,2,7,20\r\n    .byte 20,20,0,0\r\n    .byte 2,20,7,20\r\n    .byte 0,4,20,20\r\n   
    .byte 20,20,0,0\r\n    .byte 0,4,20,0\r\n    .byte 0,0,0,0\r\n    .byte 0,20,0,0\r\n   
    .byte 0,0,0,0\r\n    .byte 0,0,2\r\nWeaponDamageC ;at FC1C\r\n    .byte 20,20,20,20
    ;00\r\n    .byte 20,20,20,20\r\n    .byte 20,1,20,20  ;08\r\n    .byte 20,0,20,0\r\n   
    .byte 20,4,4,0    ;10\r\n    .byte 7,2,20,20\r\n    .byte 20,20,0,0   ;18\r\n   
    .byte 2,20,7,20\r\n    .byte 0,20,20,20  ;20\r\n    .byte 20,20,0,0\r\n    .byte
    0,4,20,0    ;28\r\n    .byte 0,0,0,0\r\n    .byte 0,20,0,0    ;30\r\n    .byte
    0,0,0,0     ;34\r\n    .byte 0,0,2       ;38,39,3A\r\nWeaponDamageI \r\n    .byte
    0,0,0,0, 0,0,0,0 ;00\r\n    .byte 0,0,0,0, 0,0,0,0 ;08\r\n    .byte 0,0,0,0,
    0,0,0,0 ;10\r\n    .byte 0,0,0,0, 0,0,0,0 ;18\r\n    .byte 0,0,0,0, 0,0,0,0 ;20\r\n   
    .byte 0,0,0,0, 0,0,0,0 ;28\r\n    .byte 0,0,0,0, 0,0,0,0 ;30\r\n    .byte 0,0,0           
    ;38,39,3A\r\nWeaponDamageB\r\n$FD36> 14:      .byte $14               \r\n$FD37>
    14:      .byte $14               \r\n$FD38> 14:      .byte $14              
    \r\n$FD39> 14:      .byte $14               \r\n$FD3A> 14:      .byte $14              
    \r\n$FD3B> 14:      .byte $14               \r\n$FD3C> 14:      .byte $14              
    \r\n$FD3D> 14:      .byte $14               \r\n$FD3E> 14:      .byte $14              
    \r\n$FD3F> 04:      .byte $04               \r\n$FD40> 14:      .byte $14              
    \r\n$FD41> 14:      .byte $14               \r\n$FD42> 14:      .byte $14              
    \r\n$FD43> 00:      BRK             \r\n$FD44> 14:      .byte $14              
    \r\n$FD45> 00:      BRK             \r\n$FD46> 14:      .byte $14              
    \r\n$FD47> 14:      .byte $14               \r\n$FD48> 14:      .byte $14              
    \r\n$FD49> 00:      BRK             \r\n$FD4A> 14:      .byte $14              
    \r\n$FD4B> 14:      .byte $14               \r\n$FD4C> 14:      .byte $14              
    \r\n$FD4D> 14:      .byte $14               \r\n$FD4E> 14:      .byte $14              
    \r\n$FD4F> 14:      .byte $14               \r\n$FD50> 00:      BRK            
    \r\n$FD51> 00:      BRK             \r\n$FD52> 14:      .byte $14              
    \r\n$FD53> 14:      .byte $14               \r\n$FD54> 14:      .byte $14              
    \r\n$FD55> 14:      .byte $14               \r\n$FD56> 00:      BRK            
    \r\n$FD57> 14:      .byte $14               \r\n$FD58> 14:      .byte $14              
    \r\n$FD59> 14:      .byte $14               \r\n$FD5A> 14:      .byte $14              
    \r\n$FD5B> 14:      .byte $14               \r\n$FD5C> 00:      BRK            
    \r\n$FD5D> 00:      BRK             \r\n$FD5E> 00:      BRK             \r\n$FD5F>
    14:      .byte $14               \r\n$FD60> 14:      .byte $14              
    \r\n$FD61> 00:      BRK             \r\n$FD62> 00:      BRK             \r\n$FD63>
    00:      BRK             \r\n$FD64> 00:      BRK             \r\n$FD65> 00:     
    BRK             \r\n$FD66> 00:      BRK             \r\n$FD67> 14:      .byte
    $14               \r\n$FD68> 00:      BRK             \r\n$FD69> 00:      BRK            
    \r\n$FD6A> 00:      BRK             \r\n$FD6B> 00:      BRK             \r\n$FD6C>
    00:      BRK             \r\n$FD6D> 00:      BRK             \r\n$FD6E> 00:     
    BRK             \r\n$FD6F> 00:      BRK             \r\n$FD70> 07:      .byte
    $07               \r\nWeaponDamageF\r\n$FD71> 14:      .byte $14              
    \r\n$FD72> 14:      .byte $14               \r\n$FD73> 14:      .byte $14              
    \r\n$FD74> 14:      .byte $14               \r\n$FD75> 14:      .byte $14              
    \r\n$FD76> 14:      .byte $14               \r\n$FD77> 14:      .byte $14              
    \r\n$FD78> 14:      .byte $14               \r\n$FD79> 14:      .byte $14              
    \r\n$FD7A> 01 14:   ORA ($14,X)             \r\n$FD7C> 14:      .byte $14              
    \r\n$FD7D> 14:      .byte $14               \r\n$FD7E> 00:      BRK            
    \r\n$FD7F> 14:      .byte $14               \r\n$FD80> 00:      BRK            
    \r\n$FD81> 14:      .byte $14               \r\n$FD82> 04:      .byte $04              
    \r\n$FD83> 04:      .byte $04               \r\n$FD84> 00:      BRK            
    \r\n$FD85> 14:      .byte $14               \r\n$FD86> 14:      .byte $14              
    \r\n$FD87> 14:      .byte $14               \r\n$FD88> 14:      .byte $14              
    \r\n$FD89> 14:      .byte $14               \r\n$FD8A> 14:      .byte $14              
    \r\n$FD8B> 00:      BRK             \r\n$FD8C> 00:      BRK             \r\n$FD8D>
    02:      .byte $02               \r\n$FD8E> 14:      .byte $14              
    \r\n$FD8F> 14:      .byte $14               \r\n$FD90> 14:      .byte $14              
    \r\n$FD91> 00:      BRK             \r\n$FD92> 14:      .byte $14              
    \r\n$FD93> 14:      .byte $14               \r\n$FD94> 14:      .byte $14              
    \r\n$FD95> 14:      .byte $14               \r\n$FD96> 14:      .byte $14              
    \r\n$FD97> 00:      BRK             \r\n$FD98> 00:      BRK             \r\n$FD99>
    00:      BRK             \r\n$FD9A> 14:      .byte $14               \r\n$FD9B>
    14:      .byte $14               \r\n$FD9C> 00:      BRK             \r\n$FD9D>
    00:      BRK             \r\n$FD9E> 00:      BRK             \r\n$FD9F> 00:     
    BRK             \r\n$FDA0> 00:      BRK             \r\n$FDA1> 00:      BRK            
    \r\n$FDA2> 14:      .byte $14               \r\n$FDA3> 00:      BRK            
    \r\n$FDA4> 00:      BRK             \r\n$FDA5> 00:      BRK             \r\n$FDA6>
    00:      BRK             \r\n$FDA7> 00:      BRK             \r\n$FDA8> 00:     
    BRK             \r\n$FDA9> 00:      BRK             \r\n$FDAA> 00:      BRK            
    \r\n$FDAB> 02:      .byte $02               \r\nWeaponDamageE\r\n$FDAC> 14:     
    .byte $14               \r\n$FDAD> 14:      .byte $14               \r\n$FDAE>
    14:      .byte $14               \r\n$FDAF> 14:      .byte $14              
    \r\n$FDB0> 14:      .byte $14               \r\n$FDB1> 14:      .byte $14              
    \r\n$FDB2> 14:      .byte $14               \r\n$FDB3> 14:      .byte $14              
    \r\n$FDB4> 14:      .byte $14               \r\n$FDB5> 04:      .byte $04              
    \r\n$FDB6> 14:      .byte $14               \r\n$FDB7> 14:      .byte $14              
    \r\n$FDB8> 14:      .byte $14               \r\n$FDB9> 00:      BRK            
    \r\n$FDBA> 14:      .byte $14               \r\n$FDBB> 00:      BRK            
    \r\n$FDBC> 14:      .byte $14               \r\nWeaponDamageG\r\n$FDBD> 02:     
    .byte $02               \r\n$FDBE> 07:      .byte $07               \r\n$FDBF>
    00:      BRK             \r\n$FDC0> 14:      .byte $14               \r\n$FDC1>
    04:      .byte $04               \r\n$FDC2> 14:      .byte $14              
    \r\n$FDC3> 14:      .byte $14               \r\n$FDC4> 14:      .byte $14              
    \r\n$FDC5> 14:      .byte $14               \r\n$FDC6> 00:      BRK            
    \r\n$FDC7> 00:      BRK             \r\n$FDC8> 01 14:   ORA ($14,X)            
    \r\n$FDCA> 14:      .byte $14               \r\n$FDCB> 14:      .byte $14              
    \r\n$FDCC> 00:      BRK             \r\n$FDCD> 14:      .byte $14              
    \r\n$FDCE> 14:      .byte $14               \r\n$FDCF> 14:      .byte $14              
    \r\n$FDD0> 14:      .byte $14               \r\n$FDD1> 14:      .byte $14              
    \r\n$FDD2> 00:      BRK             \r\n$FDD3> 00:      BRK             \r\n$FDD4>
    00:      BRK             \r\n$FDD5> 14:      .byte $14               \r\n$FDD6>
    14:      .byte $14               \r\n$FDD7> 00:      BRK             \r\n$FDD8>
    00:      BRK             \r\n$FDD9> 00:      BRK             \r\n$FDDA> 00:     
    BRK             \r\n$FDDB> 00:      BRK             \r\n$FDDC> 00:      BRK            
    \r\n$FDDD> 14:      .byte $14               \r\n$FDDE> 00:      BRK            
    \r\n$FDDF> 00:      BRK             \r\n$FDE0> 00:      BRK             \r\n$FDE1>
    00:      BRK             \r\n$FDE2> 00:      BRK             \r\n$FDE3> 00:     
    BRK             \r\n$FDE4> 00:      BRK             \r\n$FDE5> 00:      BRK            
    \r\n$FDE6> 04:      .byte $04               \r\n\r\n$FDE7> 14:      .byte $14              
    \r\n\r\n$FDE8> 14:      .byte $14               \r\n\r\n$FDE9> 14:      .byte
    $14               \r\n\r\n$FDEA> 14:      .byte $14               \r\n\r\n$FDEB>
    14:      .byte $14               \r\n\r\n$FDEC> 14:      .byte $14              
    \r\n\r\n$FDED> 14:      .byte $14               \r\n\r\n$FDEE> 14:      .byte
    $14               \r\n\r\n$FDEF> 14:      .byte $14               \r\n\r\n$FDF0>
    07:      .byte $07               \r\n\r\n$FDF1> 14:      .byte $14              
    \r\n\r\n$FDF2> 14:      .byte $14               \r\n\r\n$FDF3> 14:      .byte
    $14               \r\n\r\n$FDF4> 00:      BRK             \r\n$FDF5> 14:     
    .byte $14               \r\n\r\n$FDF6> 00:      BRK             \r\n$FDF7> 14:     
    .byte $14               \r\n\r\n$FDF8> 14:      .byte $14               \r\n\r\n$FDF9>
    14:      .byte $14               \r\n\r\n$FDFA> 00:      BRK             \r\n$FDFB>
    14:      .byte $14               \r\n\r\n$FDFC> 14:      .byte $14              
    \r\n\r\n$FDFD> 14:      .byte $14               \r\n\r\n$FDFE> 14:      .byte
    $14               \r\n\r\n$FDFF> 14:      .byte $14               \r\n\r\n$FE00>
    14:      .byte $14               \r\n\r\n$FE01> 00:      BRK             \r\n$FE02>
    00:      BRK             \r\n$FE03> 14:      .byte $14               \r\n\r\n$FE04>
    14:      .byte $14               \r\n\r\n$FE05> 14:      .byte $14              
    \r\n\r\n$FE06> 14:      .byte $14               \r\n\r\n$FE07> 00:      BRK            
    \r\n$FE08> 14:      .byte $14               \r\n\r\n$FE09> 14:      .byte $14              
    \r\n\r\n$FE0A> 14:      .byte $14               \r\n\r\n$FE0B> 14:      .byte
    $14               \r\n\r\n$FE0C> 14:      .byte $14               \r\n\r\n$FE0D>
    00:      BRK             \r\n$FE0E> 00:      BRK             \r\n$FE0F> 00:     
    BRK             \r\n$FE10> 14:      .byte $14               \r\n\r\n$FE11> 14:     
    .byte $14               \r\n\r\n$FE12> 00:      BRK             \r\n$FE13> 00:     
    BRK             \r\n$FE14> 00:      BRK             \r\n$FE15> 00:      BRK            
    \r\n$FE16> 00:      BRK             \r\n$FE17> 00:      BRK             \r\n$FE18>
    14:      .byte $14               \r\n\r\n$FE19> 00:      BRK             \r\n$FE1A>
    00:      BRK             \r\n$FE1B> 00:      BRK             \r\n$FE1C> 00:     
    BRK             \r\n$FE1D> 00:      BRK             \r\n$FE1E> 00:      BRK            
    \r\n$FE1F> 00:      BRK             \r\n$FE20> 00:      BRK             \r\n$FE21>
    14:      .byte $14               \r\n;ETCETC STUFF IS MISSING HERE\r\n\r\n\r\n;
    0 = \"P\" (just the old megablaster)\r\n; 1 = Cutman\r\n; 2 = Iceman\r\n; 3 =
    Bombman\r\n; 4 = Fireman\r\n; 5 = Elecman\r\n; 6 = Gutsman\r\n; 7 = Magnet beam\r\n\r\n\r\nWeaponDamageOnBoss                                                 
    ; $FE22\r\n    ;      P C I B F E G  M\r\n; Cutman\r\n    .byte  3,1,0,2,3,1,14,0\r\n;
    Iceman\r\n    .byte  1,2,0,4,1,10,0,0\r\n; Bombman\r\n    .byte  2,2,0,1,4,2,0,0\r\n;
    Fireman\r\n    .byte  2,2,4,1,1,1,0,0\r\n; Elecman\r\n    .byte  1,10,0,2,1,1,4,0\r\n;
    Gutsman\r\n    .byte  2,1,0,10,2,1,1,0\r\n; Stone giant\r\n    .byte  2,2,0,0,2,4,0,0\r\n;
    Wily2\r\n    .byte  1,1,0,2,2,2,0,0\r\n; Wily3\r\n    .byte  0,0,0,0,0,0,0,0\r\n;
    Wily4\r\n    .byte  1,1,1,1,4,1,1,0\r\n    .byte  1,1,0,1,1,1,1,0\r\n    .byte 
    0,0,0,0,0,0,0,0\r\n\r\nEnemyKillScoreTable: ;at $FE82\r\n    .byte 5,5,3,2       
    ;00\r\n    .byte 3,5,8,5\r\n    .byte 8,$90,8,2      ;08\r\n    .byte 3,0,3,5\r\n   
    .byte 8,$15,$50,0    ;10\r\n    .byte 5,$15,5,2\r\n    .byte 3,3,0,0        ;18\r\n   
    .byte $15,5,5,5\r\n    .byte 0,3,2,2        ;20\r\n    .byte 2,3,3,0\r\n\r\n$FEA8>
    00:      BRK             \r\n$FEA9> 08:      PHP             \r\n$FEAA> 00:     
    BRK             \r\n$FEAB> 05 04:   ORA $04         \r\n$FEAD> 00:      BRK            
    \r\n$FEAE> 00:      BRK             \r\n$FEAF> 00:      BRK             \r\n$FEB0>
    00:      BRK             \r\n$FEB1> 00:      BRK             \r\n$FEB2> 00:     
    BRK             \r\n$FEB3> 02:      .byte $02               \r\n\r\n$FEB4> 00:     
    BRK             \r\n$FEB5> 00:      BRK             \r\n$FEB6> 00:      BRK            
    \r\n$FEB7> 00:      BRK             \r\n$FEB8> 00:      BRK             \r\n$FEB9>
    00:      BRK             \r\n$FEBA> 00:      BRK             \r\n$FEBB> 00:     
    BRK             \r\n$FEBC> 00:      BRK             \r\n\r\n\r\nEnemyHitTable\r\n   
    .byte 3,1,2,3,4,1,4,4\r\n    .byte 3,10,1,1,4,1,3,3\r\n    .byte 4,4,4,3,1,3,2,1\r\n   
    .byte 3,4,2,1,4,3,3,3\r\n    .byte 3,4,1,1,4,4,1,4\r\n    .byte 3,3,3,3,0,2,2,0\r\n$FEED>
    00:      BRK             \r\n$FEEE> 02:      .byte $02               \r\n\r\n$FEEF>
    04:      .byte $04               \r\n\r\n$FEF0> 0A:      ASL A           \r\n$FEF1>
    04:      .byte $04               \r\n\r\n$FEF2> 04:      .byte $04              
    \r\n\r\n$FEF3> 0A:      ASL A           \r\n$FEF4> 04:      .byte $04              
    \r\n\r\n$FEF5> 04:      .byte $04               \r\n\r\n$FEF6> 04:      .byte
    $04               \r\n\r\n$FEF7> 04:      .byte $04               \r\n\r\n$FEF8>
    04:      .byte $04               \r\n\r\n$FEF9> 04:      .byte $04              
    \r\n\r\n$FEFA> FF:      .byte $ff               \r\n\r\n$FEFB> FF:      .byte
    $ff               \r\n\r\n$FEFC> FF:      .byte $ff               \r\n\r\n$FEFD>
    FF:      .byte $ff               \r\n\r\n$FEFE> FF:      .byte $ff              
    \r\n\r\n$FEFF> FF:      .byte $ff               \r\n\r\n$FF00> 00:      BRK            
    \r\n$FF01> 00:      BRK             \r\n$FF02> 00:      BRK             \r\n$FF03>
    00:      BRK             \r\n$FF04> 00:      BRK             \r\n$FF05> 00:     
    BRK             \r\n$FF06> 00:      BRK             \r\n$FF07> 00:      BRK            
    \r\n$FF08> 00:      BRK             \r\n$FF09> 00:      BRK             \r\n$FF0A>
    00:      BRK             \r\n$FF0B> 00:      BRK             \r\n$FF0C> 00:     
    BRK             \r\n$FF0D> 00:      BRK             \r\n$FF0E> 00:      BRK            
    \r\n$FF0F> 00:      BRK             \r\n$FF10> 00:      BRK             \r\n$FF11>
    00:      BRK             \r\n$FF12> 00:      BRK             \r\n$FF13> 00:     
    BRK             \r\n$FF14> 00:      BRK             \r\n$FF15> 00:      BRK            
    \r\n$FF16> 00:      BRK             \r\n$FF17> 00:      BRK             \r\n$FF18>
    00:      BRK             \r\n$FF19> 00:      BRK             \r\n$FF1A> 00:     
    BRK             \r\n$FF1B> 00:      BRK             \r\n$FF1C> 00:      BRK            
    \r\n$FF1D> 00:      BRK             \r\n$FF1E> 00:      BRK             \r\n$FF1F>
    00:      BRK             \r\n$FF20> 00:      BRK             \r\n$FF21> 00:     
    BRK             \r\n$FF22> 00:      BRK             \r\n$FF23> 00:      BRK            
    \r\n$FF24> 00:      BRK             \r\n$FF25> 00:      BRK             \r\n$FF26>
    00:      BRK             \r\n$FF27> 00:      BRK             \r\n$FF28> 00:     
    BRK             \r\n$FF29> 00:      BRK             \r\n$FF2A> 00:      BRK            
    \r\n$FF2B> 00:      BRK             \r\n$FF2C> 00:      BRK             \r\n$FF2D>
    00:      BRK             \r\n$FF2E> 00:      BRK             \r\n$FF2F> 00:     
    BRK             \r\n$FF30> 00:      BRK             \r\n$FF31> 00:      BRK            
    \r\n$FF32> 00:      BRK             \r\n$FF33> 00:      BRK             \r\n$FF34>
    00:      BRK             \r\n$FF35> 00:      BRK             \r\n$FF36> 00:     
    BRK             \r\n$FF37> 00:      BRK             \r\n$FF38> 00:      BRK            
    \r\n$FF39> 00:      BRK             \r\n$FF3A> 00:      BRK             \r\n$FF3B>
    00:      BRK             \r\n$FF3C> 00:      BRK             \r\n$FF3D> 00:     
    BRK             \r\n$FF3E> 00:      BRK             \r\n$FF3F> 00:      BRK            
    \r\n$FF40> 00:      BRK             \r\n$FF41> 00:      BRK             \r\n$FF42>
    00:      BRK             \r\n$FF43> 00:      BRK             \r\n$FF44> 00:     
    BRK             \r\n$FF45> 00:      BRK             \r\n$FF46> 00:      BRK            
    \r\n$FF47> 00:      BRK             \r\n$FF48> 00:      BRK             \r\n$FF49>
    00:      BRK             \r\n$FF4A> 00:      BRK             \r\n$FF4B> 00:     
    BRK             \r\n$FF4C> 00:      BRK             \r\n$FF4D> 00:      BRK            
    \r\n$FF4E> 00:      BRK             \r\n$FF4F> 00:      BRK             \r\n$FF50>
    00:      BRK             \r\n$FF51> 00:      BRK             \r\n$FF52> 00:     
    BRK             \r\n$FF53> 00:      BRK             \r\n$FF54> 00:      BRK            
    \r\n$FF55> 00:      BRK             \r\n$FF56> 00:      BRK             \r\n$FF57>
    00:      BRK             \r\n$FF58> 00:      BRK             \r\n$FF59> 00:     
    BRK             \r\n$FF5A> 00:      BRK             \r\n$FF5B> 00:      BRK            
    \r\n$FF5C> 00:      BRK             \r\n$FF5D> 00:      BRK             \r\n$FF5E>
    00:      BRK             \r\n$FF5F> 00:      BRK             \r\n$FF60> 00:     
    BRK             \r\n$FF61> 00:      BRK             \r\n$FF62> 00:      BRK            
    \r\n$FF63> 00:      BRK             \r\n$FF64> 00:      BRK             \r\n$FF65>
    00:      BRK             \r\n$FF66> 00:      BRK             \r\n$FF67> 00:     
    BRK             \r\n$FF68> 00:      BRK             \r\n$FF69> 00:      BRK            
    \r\n$FF6A> 00:      BRK             \r\n$FF6B> 00:      BRK             \r\n$FF6C>
    00:      BRK             \r\n$FF6D> 00:      BRK             \r\n$FF6E> 00:     
    BRK             \r\n$FF6F> 00:      BRK             \r\n$FF70> 00:      BRK            
    \r\n$FF71> 00:      BRK             \r\n$FF72> 00:      BRK             \r\n$FF73>
    00:      BRK             \r\n$FF74> 00:      BRK             \r\n$FF75> 00:     
    BRK             \r\n$FF76> 00:      BRK             \r\n$FF77> 00:      BRK            
    \r\n$FF78> 00:      BRK             \r\n$FF79> 00:      BRK             \r\n$FF7A>
    00:      BRK             \r\n$FF7B> 00:      BRK             \r\n$FF7C> 00:     
    BRK             \r\n$FF7D> 00:      BRK             \r\n$FF7E> 00:      BRK            
    \r\n$FF7F> 00:      BRK             \r\n$FF80> 00:      BRK             \r\n$FF81>
    00:      BRK             \r\n$FF82> 00:      BRK             \r\n$FF83> 00:     
    BRK             \r\n$FF84> 00:      BRK             \r\n$FF85> 00:      BRK            
    \r\n$FF86> 00:      BRK             \r\n$FF87> 00:      BRK             \r\n$FF88>
    00:      BRK             \r\n$FF89> 00:      BRK             \r\n$FF8A> 00:     
    BRK             \r\n$FF8B> 00:      BRK             \r\n$FF8C> 00:      BRK            
    \r\n$FF8D> 00:      BRK             \r\n$FF8E> 00:      BRK             \r\n$FF8F>
    00:      BRK             \r\n$FF90> 00:      BRK             \r\n$FF91> 00:     
    BRK             \r\n$FF92> 00:      BRK             \r\n$FF93> 00:      BRK            
    \r\n$FF94> 00:      BRK             \r\n$FF95> 00:      BRK             \r\n$FF96>
    00:      BRK             \r\n$FF97> 00:      BRK             \r\n$FF98> 00:     
    BRK             \r\n$FF99> 00:      BRK             \r\n$FF9A> 00:      BRK            
    \r\n$FF9B> 00:      BRK             \r\n$FF9C> 00:      BRK             \r\n$FF9D>
    00:      BRK             \r\n$FF9E> 00:      BRK             \r\n$FF9F> 00:     
    BRK             \r\n$FFA0> 00:      BRK             \r\n$FFA1> 00:      BRK            
    \r\n$FFA2> 00:      BRK             \r\n$FFA3> 00:      BRK             \r\n$FFA4>
    00:      BRK             \r\n$FFA5> 00:      BRK             \r\n$FFA6> 00:     
    BRK             \r\n$FFA7> 00:      BRK             \r\n$FFA8> 00:      BRK            
    \r\n$FFA9> 00:      BRK             \r\n$FFAA> 00:      BRK             \r\n$FFAB>
    00:      BRK             \r\n$FFAC> 00:      BRK             \r\n$FFAD> 00:     
    BRK             \r\n$FFAE> 00:      BRK             \r\n$FFAF> 00:      BRK            
    \r\n$FFB0> 00:      BRK             \r\n$FFB1> 00:      BRK             \r\n$FFB2>
    00:      BRK             \r\n$FFB3> 00:      BRK             \r\n$FFB4> 00:     
    BRK             \r\n$FFB5> 00:      BRK             \r\n$FFB6> 00:      BRK            
    \r\n$FFB7> 00:      BRK             \r\n$FFB8> 00:      BRK             \r\n$FFB9>
    00:      BRK             \r\n$FFBA> 00:      BRK             \r\n$FFBB> 00:     
    BRK             \r\n$FFBC> 00:      BRK             \r\n$FFBD> 00:      BRK            
    \r\n$FFBE> 00:      BRK             \r\n$FFBF> 00:      BRK             \r\n$FFC0>
    00:      BRK             \r\n$FFC1> 00:      BRK             \r\n$FFC2> 00:     
    BRK             \r\n$FFC3> 00:      BRK             \r\n$FFC4> 00:      BRK            
    \r\n$FFC5> 00:      BRK             \r\n$FFC6> 00:      BRK             \r\n$FFC7>
    00:      BRK             \r\n$FFC8> 00:      BRK             \r\n$FFC9> 00:     
    BRK             \r\n$FFCA> 00:      BRK             \r\n$FFCB> 00:      BRK            
    \r\n$FFCC> 00:      BRK             \r\n$FFCD> 00:      BRK             \r\n$FFCE>
    00:      BRK             \r\n$FFCF> 00:      BRK             \r\n$FFD0> 00:     
    BRK             \r\n$FFD1> 00:      BRK             \r\n$FFD2> 00:      BRK            
    \r\n$FFD3> 00:      BRK             \r\n$FFD4> 00:      BRK             \r\n$FFD5>
    00:      BRK             \r\n$FFD6> 00:      BRK             \r\n$FFD7> 00:     
    BRK             \r\n$FFD8> 00:      BRK             \r\n$FFD9> 00:      BRK            
    \r\n$FFDA> 00:      BRK             \r\n$FFDB> 00:      BRK             \r\n$FFDC>
    00:      BRK             \r\n$FFDD> 00:      BRK             \r\n$FFDE> 00:     
    BRK             \r\n$FFDF> 00:      BRK             \r\n$FFE0> 20 2020: JSR $2020      
    \r\n$FFE3> 20 2020: JSR $2020       \r\n$FFE6> 20 2020: JSR $2020       \r\n$FFE9>
    52:      .byte $52               \r\n\r\n$FFEA> 4F:      .byte $4f              
    \r\n\r\n$FFEB> 43:      .byte $43               \r\n\r\n$FFEC> 4B:      .byte
    $4b               \r\n\r\n$FFED> 4D 414E: EOR $4E41       \r\n$FFF0> 27:     
    .byte $27               \r\n\r\n$FFF1> B9 0000: LDA $0000,Y     \r\n$FFF4> 38:     
    SEC             \r\n$FFF5> 02:      .byte $02               \r\n\r\n$FFF6> 01
    06:   ORA ($06,X)             \r\n$FFF8> 08:      PHP             \r\n$FFF9>
    B7:      .byte $b7               \r\n\r\n$FFFA> A8:      TAY             \r\n$FFFB>
    D4:      .byte $d4               \r\n\r\n$FFFC> 08:      PHP             \r\n$FFFD>
    C0 08:   CPY #$08        \r\n\r\n;;;;;;;;;;;; BANK 7 ENDS HERE ;;;;;;;;;;;;;;;;;;\r\n\r\n;;;;;;;;;;;;
    BANK 5 BEGINS HERE ;;;;;;;;;;;;;;;;\r\n\r\nReset2\r\n$9000> A2 FF:   LDX #$ff   
    ; Reinitialize stack pointer. Clean start!\r\n$9002> 9A:      TXS            
    \r\n\r\n; Wait two frames\r\n$9003> A2 01:   LDX #$01\r\n--\r\n-\r\n$9005> AD
    0220: LDA $2002\r\n$9008> 10 FB:   BPL -                                              
    ; $9005               \r\n-\r\n$900A> AD 0220: LDA $2002\r\n$900D> 30 FB:   BMI
    -                                               ; $900A               \r\n\r\n\r\n$900F>
    CA:      DEX\r\n$9010> 10 F3:   BPL --                                             
    ; $9005               \r\n\r\n$9012> 9A:      TXS\r\n\r\n\r\n; Clear zeropage
    RAM (can be optimized down)\r\n$9013> A9 00:   LDA #$00\r\n$9015> A0 00:   LDY
    #$00        \r\n-\r\n$9017> 99 0000: STA $0000,Y\r\n$901A> C8:      INY            
    \r\n$901B> D0 FA:   BNE -                                               ; $9017              
    \r\n\r\n; Clear rest of CPU-RAM\r\n\r\n$901D> A9 01:   LDA #$01\r\n$901F> 85
    05:   STA $05         \r\n--\r\n$9021> A9 00:   LDA #$00\r\n-\r\n$9023> 91 04:  
    STA ($04),Y\r\n$9025> C8:      INY             \r\n$9026> D0 FB:   BNE -                                              
    ; $9023               \r\n$9028> E6 05:   INC $05         \r\n$902A> A5 05:  
    LDA $05         \r\n$902C> C9 08:   CMP #$08        \r\n$902E> D0 F1:   BNE --                                             
    ; $9021               \r\n\r\n\r\n$9030> A9 10:   LDA #$10    ; BG chartable
    = $1000, SPR chartable = $0000\r\n$9032> 85 FF:   STA PPU2000value         \r\n$9034>
    A9 06:   LDA #$06    ; No clipping\r\n$9036> 85 FE:   STA PPU2001value        
    \r\n\r\n; Game over\r\nGameOver\r\n$9038> A5 31:   LDA CurrentStage\r\n$903A>
    85 AC:   STA FightingBossNum         ;backup the stage number\r\n\r\n; Draw title
    screen\r\n$903C> A9 0A:   LDA #$0A\r\n$903E> 85 31:   STA CurrentStage        
    \r\n$9040> 20 5BC7: JSR WriteChr                                        ; $C75B\r\n\r\n;
    Set palette\r\n$9043> 20 83C4: JSR InitStagePaletteAndActives\r\n\r\n; This also
    handles title screen code (wait until START pressed)\r\n$9046> 20 56F9: JSR DrawAtReset                                    
    ; $F956\r\n\r\n\r\n; Clear score (and something else?...)\r\n\r\n$9049> A9 00:  
    LDA #$00\r\n$904B> A2 07:   LDX #$07        \r\n-\r\n$904D> 95 72:   STA Score,X\r\n$904F>
    CA:      DEX             \r\n$9050> 10 FB:   BPL -                                              
    ; $904D               \r\n\r\n$9052> A9 02:   LDA #$02\r\n$9054> 85 A6:   STA
    ExtraLives         \r\n\r\n\r\n$9056> A5 AC:   LDA FightingBossNum\r\n$9058>
    85 31:   STA CurrentStage         \r\n\r\n\r\n:\r\n; Set all meters to max\r\n;\r\n\r\n;
    Launch the stage selection screen\r\n$905A> A9 1C:   LDA #$1c\r\n$905C> A2 07:  
    LDX #$07        \r\n-\r\n$905E> 95 6A:   STA Meters,X\r\n$9060> CA:      DEX            
    \r\n$9061> 10 FB:   BPL -                                               ; $905E              
    \r\n\r\n$9063> A5 BC:   LDA IgnoreStageSelection\r\n$9065> D0 03:   BNE +                                              
    ; $906A               \r\n$9067> 20 46D8: JSR ExecStageSelectionScreen\r\n+\r\n\r\n$906A>
    A6 31:   LDX CurrentStage\r\n$906C> E0 06:   CPX #$06        \r\n$906E> 90 05:  
    BCC +                                               ; $9075\r\n; For Wily stages,
    the score is selected manually from this table.\r\n$9070> BD 2494: LDA WilyStageClearScoreTable-6,X     
    ;table contents (from 6+): $64,$46,$C8,$C8\r\n$9073> 85 3D:   STA LevelClearScoreInThousands        
    \r\n+\r\n$9075> A9 00:   LDA #$00\r\n$9077> 85 AE:   STA BonusPearlCount        
    \r\n$9079> 85 AB:   STA LastRestartPointType         \r\n$907B> 20 5BC7: JSR
    WriteChr                                        ; $C75B       \r\n\r\nStageBegin:\r\n$907E>
    20 83C4: JSR InitStagePaletteAndActives       \r\n\r\nStageBeginFromDeath:\r\n$9081>
    18:      CLC\r\n$9082> A5 AB:   LDA LastRestartPointType         \r\n$9084> 65
    31:   ADC CurrentStage         \r\n$9086> 48:      PHA             \r\n$9087>
    AA:       TAX             \r\n$9088> BD EBC2:  LDA FirstScreenScreenTable,X    
    \r\n$908B> 85 27:    STA CurrentBeginScreen         \r\n$908D> 48:       PHA            
    \r\n$908E> A5 AB:    LDA LastRestartPointType         \r\n$9090> F0 05:    BEQ
    +\r\n$9092> BD EE93:  LDA Label93FA-12,X     \r\n$9095> 85 27:    STA CurrentBeginScreen        
    \r\n+\r\n$9097> A5 27:    LDA CurrentBeginScreen         \r\n$9099> 18:      
    CLC             \r\n$909A> 69 01:    ADC #$01        \r\n$909C> 85 1B:    STA
    ScrollPosScreen         \r\n$909E> 20 D8A0:  JSR $A0D8       \r\n$90A1> 68:     
    PLA             \r\n$90A2> 8D 6004: STA ObjectPosScreen+0                            
    ; $0460       \r\n$90A5> 20 D8A0: JSR $A0D8       \r\n$90A8> 68:      PLA            
    \r\n$90A9> AA:      TAX             \r\n$90AA> BD C393: LDA FirstScreenEnemyPointer,X    
    \r\n$90AD> 85 8B:   STA PreviousEnemyIndex         \r\n$90AF> 18:      CLC            
    \r\n$90B0> 69 01:   ADC #$01        \r\n$90B2> 85 8C:   STA CurrentEnemyIndex        
    \r\n$90B4> BD A093: LDA FirstScreenOrderTable,X     \r\n$90B7> 85 29:   STA CurrentOrderNum        
    \r\n$90B9> A8:      TAY             \r\n$90BA> 20 13C6: JSR RoomLayoutLoadRoomNum      
    \r\n$90BD> 29 1F:   AND #$1f        \r\n$90BF> 18:      CLC             \r\n$90C0>
    65 27:   ADC CurrentBeginScreen         \r\n$90C2> 85 28:   STA CurrentEndScreen        
    \r\n$90C4> AD 6004: LDA ObjectPosScreen+0                             ; $0460      
    \r\n$90C7> 85 1B:   STA ScrollPosScreen         \r\n$90C9> A9 00:   LDA #$00       
    \r\n$90CB> 85 1A:   STA ScrollPosX         \r\n$90CD> 85 5F:   STA WeaponSelect                                   
    ; $5F         \r\n$90CF> 85 3E:   STA BossCurrentStrategy         \r\n$90D1>
    85 8F:   STA ZigZagFireStatus         \r\n$90D3> 85 98:   STA $98         \r\n$90D5>
    85 99:   STA $99         \r\n$90D7> 8D C106: STA ObjectLifeMeter+1       \r\n\r\n$90DA>
    A2 0F:   LDX #$0f\r\n-\r\n$90DC> 95 7B:   STA $7B,X\r\n$90DE> 9D A005: STA MagnetBeamLength,X    
    \r\n$90E1> 9D B005: STA MagnetBeamAge,X     \r\n$90E4> CA:      DEX            
    \r\n$90E5> 10 F5:   BPL -                                               ; $90DC              
    \r\n\r\n$90E7> A5 AB:   LDA LastRestartPointType\r\n$90E9> F0 0B:   BEQ +                                              
    ; $90F6               \r\n$90EB> 18:      CLC             \r\n$90EC> 65 31:  
    ADC CurrentStage         \r\n$90EE> AA:      TAX             \r\n$90EF> BD 0694:
    LDA Label9412-12,X     \r\n$90F2> 85 28:   STA CurrentEndScreen         \r\n$90F4>
    E0 08:   CPX #$08        \r\n+\r\n$90F6> A0 00:   LDY #$00\r\n$90F8> A2 40:  
    LDX #$40        \r\n$90FA> 20 78D4: JSR HideSprites                                    
    ; $D478       \r\n$90FD> A9 20:   LDA #$20        \r\n$90FF> 85 54:   STA TotalObjects        
    \r\n$9101> 20 05A1: JSR ForgetRoomObjects       \r\n\r\n; Start playing stage
    music?\r\n$9104> A6 31:   LDX CurrentStage\r\n$9106> BD 9493: LDA StageMusicTable,X    
    \r\n$9109> 20 77C4: JSR IssueSound                                      ; $C477      
    \r\n\r\n; Megaman's coordinate when he starts a stage!\r\n$910C> A9 80:   LDA
    #$80\r\n$910E> 8D 8004: STA ObjectPosX+0       \r\n$9111> 85 22:   STA $22        
    \r\n\r\n$9113> A9 04:   LDA #$04\r\n$9115> 8D 0006: STA  ObjectPosY+0      \r\n\r\n\r\n;
    Enable NMI and let it start playing sound...\r\n$9118> A5 FF:   LDA PPU2000value\r\n$911A>
    09 80:   ORA #$80\r\n$911C> 85 FF:   STA PPU2000value         \r\n$911E> 8D 0020:
    STA $2000       \r\n$9121> 85 1F:   STA NMI_GfxUpdateDone         \r\n\r\n$9123>
    A5 31:   LDA CurrentStage\r\n$9125> C9 0B:   CMP #$0b        \r\n$9127> D0 03:  
    BNE +                                               ; $912C               \r\n$9129>
    4C 26C4: JMP InitEndGameScene\r\n\r\n\r\n+\r\n$912C> A9 1C:   LDA #$1C       
    ; Set lifemeter to max\r\n$912E> 85 6A:   STA Meters+0         \r\n\r\n\r\n\r\n;
    \"READY\" printing routine\r\n$9130> A2 13:   LDX #$13        ; Write \"READY\"
    text to sprites 1-5\r\n-\r\n$9132> BD E693: LDA READY_TEXT,X                                   
    ; $93E6,X\r\n$9135> 9D 0402: STA CurrentSpriteData+0,X     \r\n$9138> CA:     
    DEX             \r\n$9139> 10 F7:   BPL -                                              
    ; $9132               \r\n\r\n\r\n\r\n; Show \"READY\" message for 3 seconds\r\n$913B>
    A9 C0:   LDA #$c0\r\n$913D> 85 3C:   STA MiscCounter1         \r\n-\r\n$913F>
    20 1BC0: JSR NextFrame                                      ; $C01B\r\n$9142>
    C6 3C:   DEC MiscCounter1         \r\n$9144> D0 F9:   BNE -                                              
    ; $913F               \r\n\r\n$9146> A0 00:   LDY #$00\r\n$9148> 84 55:   STY
    MegamanBlinkState         \r\n$914A> 8C 4006: STY ObjectFireDelay+0       \r\n$914D>
    A2 40:   LDX #$40        \r\n$914F> 20 78D4: JSR HideSprites                                    
    ; $D478       \r\n$9152> 20 E0C4: JSR TeleportToStage                                
    ; $C4E0       \r\n\r\n$9155> A9 01:   LDA #$01\r\n$9157> 85 8D:   STA ScreenMovedFlag        
    \r\n\r\n$9159> A9 00:   LDA #$00    ; Make Megaman stand still at start\r\n$915B>
    8D 0004: STA ObjectSpriteNum+0       \r\n\r\nMainLoop\r\n; Did we pick up a capsule
    in the last frame?\r\n; Both life and weapon energy capsules\r\n$915E> A5 AD:  
    LDA CapsuleObtained\r\n$9160> F0 03:   BEQ +                                              
    ; $9165\r\n$9162> 20 5394: JSR MeterRefill                                    
    ; $9453\r\n+\r\n\r\n$9165> A5 18:   LDA JoyD\r\n$9167> 29 0C:   AND #$0c    ;
    Has SELECT or START been pushed?\r\n$9169> F0 1C:   BEQ SelectOrStartNotPushed                         
    ; $9187\r\n\r\n\r\n\r\n$916B> 29 04:   AND #$04\r\n$916D> D0 60:   BNE SelectPushed                                   
    ; $91CF               \r\n\r\nStartPushed\r\n$916F> A5 60:   LDA WeaponFiring   
    ; We can't access the ws-dlg if shots\r\n                                   
    ; from the current weapon are on screen\r\n$9171> D0 0D:   BNE +                                              
    ; $9180               \r\n$9173> 20 BFC3: JSR InvokeWeaponSelectDialog                       
    ; $C3BF\r\n\r\n; Make Megaman transform\r\nResumeFromPause\r\n$9176> AD 2004:
    LDA ObjectFlags+0\r\n$9179> 29 F0:   AND #$f0        \r\n$917B> 09 01:   ORA
    #$01        \r\n$917D> 8D 2004: STA ObjectFlags+0       \r\n+\r\n\r\n; Make Megaman
    stand still\r\n$9180> A9 00:   LDA #$00\r\n$9182> 85 41:   STA $41         \r\n$9184>
    8D 0004: STA ObjectSpriteNum+0       \r\n\r\nSelectOrStartNotPushed\r\n$9187>
    20 72CD: JSR RecalculateActivesLowerIndex\r\n$918A> 20 A894: JSR MegamanAI\r\n$918D>
    A5 94:   LDA MegamanWalkTimer         \r\n$918F> F0 09:   BEQ +\r\n$9191> A5
    B1:   LDA $B1\r\n$9193> D0 05:   BNE +                                              
    ; $919A               \r\n$9195> A9 2B:   LDA #$2B        ; Some kind of shooting
    SFX\r\n$9197> 20 77C4: JSR IssueSound                                      ;
    $C477       \r\n+\r\n$919A> A5 94:   LDA MegamanWalkTimer\r\n$919C> 85 B1:  
    STA $B1         \r\n\r\n$919E> AD 2004: LDA ObjectFlags+0\r\n$91A1> 29 0F:  
    AND #$0f        \r\n$91A3> C9 01:   CMP #$01        \r\n$91A5> F0 15:   BEQ ++                                             
    ; $91BC               \r\n\r\n; Do this part UNLESS Megaman is transforming\r\n$91A7>
    20 5CA3: JSR CheckHoldingBkey\r\n$91AA> 20 8CDB: JSR RunBossAI       \r\n\r\n$91AD>
    A5 55:   LDA MegamanBlinkState\r\n$91AF> F0 02:   BEQ +                                              
    ; $91B3               \r\n$91B1> C6 55:   DEC MegamanBlinkState         \r\n+\r\n$91B3>
    20 8BA1: JSR RunCollisionChecks\r\n$91B6> 20 61A2: JSR RunWeaponAI\r\n$91B9>
    20 EA98: JSR RunEnemyAI                                       ; $98EA       \r\n\r\n++\r\n$91BC>
    20 96D8: JSR LoadEnemies\r\n$91BF> 20 31D1: JSR UpdateGraphics                                 
    ; $D131       \r\n$91C2> 20 6AD4: JSR LifeCycleUntick_forEveryone       \r\n\r\n$91C5>
    A5 26:   LDA CurrentStripeEndType\r\n$91C7> D0 3E:   BNE CheckStripeEnding\r\nEndCurrentFrame\r\n$91C9>
    20 1BC0: JSR NextFrame                                      ; $C01B       \r\n$91CC>
    4C 5E91: JMP MainLoop                                        ; $915E\r\n\r\n\r\nSelectPushed\r\n$91CF>
    A9 22:   LDA #$22        ; Pause jingle\r\n$91D1> 20 77C4: JSR IssueSound                                     
    ; $C477       \r\n\r\n$91D4> A9 01:   LDA #$01\r\n$91D6> 85 41:   STA $41        
    \r\n\r\n; Save GutsmanStompCounter,MegamanWalkTimer,MegamanStallTimer to stack\r\n$91D8>
    A5 47:   LDA GutsmanStompCounter\r\n$91DA> 48:      PHA             \r\n$91DB>
    A5 94:   LDA MegamanWalkTimer         \r\n$91DD> 48:      PHA             \r\n$91DE>
    A5 95:   LDA MegamanStallTimer         \r\n$91E0> 48:      PHA             \r\n\r\n;
    Clear GutsmanStompCounter,MegamanWalkTimer,MegamanStallTimer\r\n$91E1> A9 00:  
    LDA #$00\r\n$91E3> 85 47:   STA GutsmanStompCounter         \r\n$91E5> 85 94:  
    STA MegamanWalkTimer         \r\n$91E7> 85 95:   STA MegamanStallTimer        
    \r\n\r\n; Loop until SELECT or START are pushed\r\n-\r\n$91E9> 20 9894: JSR PauseFrameTick\r\n$91EC>
    A5 18:   LDA JoyD0        \r\n$91EE> 29 0C:   AND #$0c        \r\n$91F0> F0 F7:  
    BEQ -                                               ; $91E9               \r\n\r\n;
    Restore GutsmanStompCounter,MegamanWalkTimer,MegamanStallTimer from stack\r\n$91F2>
    68:      PLA\r\n$91F3> 85 95:   STA MegamanStallTimer         \r\n$91F5> 68:     
    PLA             \r\n$91F6> 85 94:   STA MegamanWalkTimer         \r\n$91F8> 68:     
    PLA             \r\n$91F9> 85 47:   STA GutsmanStompCounter         \r\n\r\n$91FB>
    A5 18:   LDA JoyD0\r\n$91FD> 29 04:   AND #$04        \r\n$91FF> F0 03:   BEQ
    +                                               ; $9204               \r\n$9201>
    4C 7691: JMP ResumeFromPause       \r\n+\r\n$9204> 4C 6F91: JMP StartPushed                                    
    ; $916F\r\n\r\n\r\nCheckStripeEnding\r\n$9207> C9 01:   CMP #$01\r\n$9209> D0
    10:   BNE $921B               \r\n; Teleport check is only done in rooms that
    scroll up.\r\n$920B> A5 B0:   LDA TeleportEnteredFlag         \r\n$920D> F0 03:  
    BEQ +                                               ; $9212               \r\n$920F>
    20 2F94: JSR EnterTeleport       \r\n+\r\n$9212> AD 2004: LDA ObjectFlags+0\r\n$9215>
    29 10:   AND #$10        \r\n$9217> F0 29:   BEQ ++                                             
    ; $9242               \r\n; In ladder\r\n$9219> A5 26:   LDA CurrentStripeEndType        
    \r\n$921B> A6 1A:   LDX ScrollPosX         \r\n$921D> D0 23:   BNE ++                                             
    ; $9242               \r\n$921F> A6 1B:   LDX ScrollPosScreen         \r\n$9221>
    E4 27:   CPX CurrentBeginScreen         \r\n$9223> D0 0D:   BNE +\r\n$9225> A4
    29:   LDY CurrentOrderNum         \r\n$9227> 88:      DEY             \r\n$9228>
    20 13C6: JSR RoomLayoutLoadRoomNum       \r\n$922B> A4 26:   LDY CurrentStripeEndType        
    \r\n$922D> 39 8B93: AND bank5_938B_table,Y     \r\n$9230> D0 29:   BNE ScrollPreviousRoom\r\n+\r\n$9232>
    E4 28:   CPX CurrentEndScreen         \r\n$9234> D0 0C:   BNE ++                                             
    ; $9242               \r\n$9236> A4 29:   LDY CurrentOrderNum         \r\n$9238>
    20 13C6: JSR RoomLayoutLoadRoomNum       \r\n$923B> A4 26:   LDY CurrentStripeEndType        
    \r\n$923D> 39 8F93: AND bank5_938F_table,Y     \r\n$9240> D0 64:   BNE ScrollNextRoom              
    \r\n++\r\n; Not in ladder, or scrolling position is not even (Xlo != 0)\r\n$9242>
    A5 26:   LDA CurrentStripeEndType\r\n$9244> C9 03:   CMP #$03        \r\n$9246>
    D0 0C:   BNE $9254               \r\n$9248> A9 00:   LDA #$00        \r\n$924A>
    85 26:   STA CurrentStripeEndType         \r\n$924C> A9 F8:   LDA #$f8       
    \r\n$924E> 8D 0006: STA  ObjectPosY+0      \r\n$9251> 4C 19C2: JMP MegaManKilled                                  
    ; $C219\r\n\r\n\r\n\r\n\r\n- ;part of ScrollPreviousRoom\r\n$9254> A9 00:   LDA
    #$00        \r\n$9256> 85 26:   STA CurrentStripeEndType         \r\n$9258> 4C
    C991: JMP EndCurrentFrame\r\n\r\n; Scrolling to previous room, I think.\r\nScrollPreviousRoom\r\n$925D>
    CA:      DEX             \r\n$925E> 86 28:   STX CurrentEndScreen         \r\n$9260>
    C6 29:   DEC CurrentOrderNum         \r\n$9262> A4 29:   LDY CurrentOrderNum        
    \r\n$9264> 20 13C6: JSR RoomLayoutLoadRoomNum       \r\n$9267> 29 1F:   AND #$1f       
    \r\n$9269> 85 27:   STA CurrentBeginScreen         \r\n$926B> 8A:      TXA            
    \r\n$926C> 38:      SEC             \r\n$926D> E5 27:   SBC CurrentBeginScreen        
    \r\n$926F> 85 27:   STA CurrentBeginScreen         \r\n$9271> 20 05A1: JSR ForgetRoomObjects      
    \r\n$9274> A5 28:   LDA CurrentEndScreen         \r\n$9276> 20 D8A0: JSR $A0D8      
    \r\n$9279> CE 6004: DEC ObjectPosScreen+0                             ; $0460      
    \r\n$927C> 20 58C6: JSR SetupEnemyGraphicsPointer       \r\n$927F> A5 26:   LDA
    CurrentStripeEndType         \r\n$9281> C9 04:   CMP #$04        \r\n$9283> 08:     
    PHP             \r\n$9284> D0 02:   BNE $9288               \r\n$9286> C6 1B:  
    DEC ScrollPosScreen         \r\n$9288> 20 DB9F: JSR DoScrolling       \r\n$928B>
    28:      PLP             \r\n$928C> F0 02:   BEQ +\r\n$928E> C6 1B:   DEC ScrollPosScreen        
    \r\n+\r\n$9290> 20 1BC0: JSR NextFrame                                      ;
    $C01B       \r\n$9293> A5 28:   LDA CurrentEndScreen         \r\n$9295> 38:     
    SEC             \r\n$9296> E9 01:   SBC #$01        \r\n$9298> 20 D8A0: JSR $A0D8      
    \r\n$929B> A9 00:   LDA #$00        \r\n$929D> 85 8F:   STA ZigZagFireStatus        
    \r\n$929F> A9 01:   LDA #$01        \r\n$92A1> 85 8D:   STA ScreenMovedFlag        
    \r\n$92A3> 4C 5492: JMP -\r\n\r\n; Scrolling to next screen, I think\r\nScrollNextRoom\r\n$92A6>
    20 05A1: JSR ForgetRoomObjects       \r\n$92A9> A6 28:   LDX CurrentEndScreen        
    \r\n$92AB> E8:      INX             \r\n$92AC> 8A:      TXA             \r\n$92AD>
    48:      PHA             \r\n$92AE> 20 D8A0: JSR $A0D8       \r\n; Test if it's
    first door\r\n$92B1> A6 31:   LDX CurrentStage         \r\n$92B3> BD 029F: LDA
    FirstDoorLocations,X     \r\n$92B6> CD 6004: CMP ObjectPosScreen+0                            
    ; $0460       \r\n$92B9> D0 22:   BNE +\r\n$92BB> 8A:      TXA             \r\n$92BC>
    0A:      ASL A           \r\n$92BD> 0A:      ASL A           \r\n$92BE> 0A:     
    ASL A           \r\n$92BF> 0A:      ASL A           \r\n$92C0> AA:      TAX            
    \r\n$92C1> A0 00:   LDY #$00\r\n; Setup AfterDoorsPalette if we just opened the
    first door\r\n-\r\n$92C3> BD 0D9F:  LDA AfterDoorsPalette,X     \r\n$92C6> 99
    D003:  STA BGPalettes,Y     \r\n$92C9> E8:       INX             \r\n$92CA> C8:      
    INY             \r\n$92CB> C0 10:    CPY #$10        \r\n$92CD> D0 F4:    BNE
    -\r\n$92CF> 20 3FC7: JSR PaletteSetupForBG       \r\n$92D2> A9 02:   LDA #$02       
    \r\n$92D4> 85 37:   STA PaletteUpdateDelay         \r\n$92D6> A9 AF:   LDA #$AF       
    \r\n$92D8> 85 A7:   STA SoundCodeParameter         \r\n$92DA> 20 66D0: JSR OpenFirstDoor      
    \r\n+ ; Test if it's secod door\r\n$92DD> A6 31:   LDX CurrentStage         \r\n$92DF>
    BD F79E: LDA SecondDoorLocations,X     \r\n$92E2> CD 6004: CMP ObjectPosScreen+0                            
    ; $0460       \r\n$92E5> D0 03:   BNE +\r\n$92E7> 20 74D0: JSR OpenSecondDoor      
    \r\n+\r\n$92EA> EE 6004: INC ObjectPosScreen+0                             ;
    $0460       \r\n$92ED> 20 58C6: JSR SetupEnemyGraphicsPointer       \r\n$92F0>
    A5 26:   LDA CurrentStripeEndType         \r\n$92F2> C9 04:   CMP #$04       
    \r\n$92F4> 08:      PHP             \r\n$92F5> D0 02:   BNE $92F9              
    \r\n$92F7> E6 1B:   INC ScrollPosScreen         \r\n$92F9> 20 DB9F: JSR DoScrolling      
    \r\n$92FC> 28:      PLP             \r\n$92FD> F0 02:   BEQ $9301              
    \r\n$92FF> E6 1B:   INC ScrollPosScreen         \r\n$9301> 20 1BC0: JSR NextFrame                                     
    ; $C01B       \r\n$9304> A5 28:   LDA CurrentEndScreen         \r\n$9306> 18:     
    CLC             \r\n$9307> 69 02:   ADC #$02        \r\n$9309> 20 D8A0: JSR $A0D8      
    \r\n$930C> E6 29:   INC CurrentOrderNum         \r\n$930E> A4 29:   LDY CurrentOrderNum        
    \r\n$9310> 20 13C6: JSR RoomLayoutLoadRoomNum       \r\n$9313> 48:      PHA            
    \r\n$9314> 29 E0:   AND #$e0        \r\n$9316> D0 2B:   BNE $9343              
    \r\n\r\n; It's the last room of this stripe.\r\n$9318> 20 4FC7: JSR PaletteSetupForBGwith3F0      
    \r\n$931B> A9 48:   LDA #$48        \r\n$931D> 85 37:   STA PaletteUpdateDelay     
    ; Flashing duration for boss room.\r\n$931F> A9 01:   LDA #$01        \r\n$9321>
    85 3E:   STA BossCurrentStrategy         \r\n$9323> A9 70:   LDA #$70       
    \r\n$9325> 85 3C:   STA MiscCounter1         \r\n$9327> A5 31:   LDA CurrentStage        
    \r\n$9329> 85 AC:   STA FightingBossNum ;Select boss music\r\n$932B> C9 06:  
    CMP #$06        \r\n$932D> B0 04:   BCS +\r\n$932F> A9 0D:   LDA #$0d       
    ; Normal boss music\r\n$9331> D0 02:   BNE ++\r\n+\r\n$9333> A9 0B:   LDA #$0b       
    ; Wily stages boss music\r\n++\r\n$9335> 20 77C4: JSR IssueSound                                     
    ; $C477       \r\n\r\n$9338> A6 31:   LDX CurrentStage\r\n$933A> BD 8093: LDA
    BossRoomArrivalKeymask,X     \r\n$933D> 85 69:   STA ForcedInputData ; Assumed
    keys \r\n$933F> A9 A6:   LDA #$A6            ; Possibly, number of frames to
    disable control\r\n$9341> 85 68:   STA ForcedInputFlag         \r\n; Also arrived
    from 9316\r\n$9343> 68:      PLA             \r\n$9344> 29 1F:    AND #$1F       
    \r\n$9346> 85 27:    STA CurrentBeginScreen         \r\n$9348> 68:      PLA            
    \r\n$9349> AA:      TAX             \r\n$934A> 18:      CLC             \r\n$934B>
    65 27:   ADC CurrentBeginScreen         \r\n$934D> 85 28:   STA CurrentEndScreen        
    \r\n$934F> 86 27:   STX CurrentBeginScreen         \r\n$9351> A9 00:   LDA #$00       
    \r\n$9353> 85 8F:   STA ZigZagFireStatus         \r\n$9355> 85 14:   STA JoyPad0       
    \r\n$9357> 85 16:   STA JoyPad0old        \r\n$9359> A9 41:   LDA #$41       
    \r\n$935B> 85 8D:   STA ScreenMovedFlag         \r\n$935D> A5 B0:   LDA TeleportEnteredFlag        
    \r\n$935F> F0 1C:   BEQ +\r\n\r\n; Megaman's coordinate when he enters a teleport!\r\n\r\n$9361>
    A9 10:   LDA #$10        \r\n$9363> 8D 8004: STA ObjectPosX+0       \r\n$9366>
    A9 B4:   LDA #$B4        \r\n$9368> 8D 0006: STA ObjectPosY+0      \r\n\r\n;
    Make Megaman transform\r\n$936B> A9 41:   LDA #$41\r\n$936D> 8D 2004: STA ObjectFlags+0      
    \r\n$9370> A9 00:   LDA #$00        \r\n$9372> 8D 0004: STA ObjectSpriteNum+0      
    \r\n\r\n$9375> 8D 4004: STA ObjectUnknown440+0\r\n$9378> 8D 4006: STA ObjectFireDelay+0      
    \r\n$937B> 85 B0:   STA TeleportEnteredFlag         \r\n+\r\n$937D> 4C 5492:
    JMP $9254       \r\n\r\n\r\nBossRoomArrivalKeymask ; at $9380\r\n    .byte $00,
    $00, $20, $00, $10, $00\r\n    .byte $00, $20, $00, $00, $00\r\n\r\nbank5_938B_table:
    ;right, up, left, down.\r\n    ; down=up, up=down\r\n    .byte $00, $40, $00,
    $80\r\nbank5_938F_table:\r\n    ; shutter=right, up=up, shutter=left, down=down\r\n   
    .byte $20, $80, $20, $40\r\n\r\n$9393> 00:      BRK             \r\n\r\nStageMusicTable:
    ; at 9394\r\n    .byte $05,$0F,$08,$07,$09,$0A\r\n    .byte $0C,$0C,$10,$10,$10,$0E\r\n\r\nFirstScreenOrderTable:
    ;at 93A0\r\n    .byte $00,$00,$00,$00,$00,$00\r\n    .byte $0E,$07,$09,$09,$16,$07\r\n   
    ; checkpoint 1\r\n    .byte $05,$01,$03,$04,$07,$01\r\n    .byte $11,$0C,$0D,$0C,$0C,$0C\r\n   
    ; checkpoint 2\r\n    .byte $0C,$05,$05,$07,$12,$05\r\n    .byte $14,$10,$0D,$10,$17\r\n\r\nFirstScreenEnemyPointer:
    ;at 93C3\r\n    .byte $FF,$FF,$FF,$03,$02,$01 ;Number of enemies on the startup
    screen minus one!\r\n    .byte $FF,$FF,$02,$00,$FF,$FF\r\n    ; checkpoint 1\r\n   
    .byte $1B,$11,$1C,$22,$13,$14\r\n    .byte $0E,$1C,$15,$0E,$0F,$0F\r\n    ; checkpoint
    2\r\n    .byte $2D,$27,$21,$33,$34,$1D\r\n    .byte $14,$2B,$15,$11,$FF\r\n\r\n\r\nREADY_TEXT
    ;at 93E6\r\n.db $60,$E6,$01,$6C\r\n.db $60,$E7,$01,$74\r\n.db $60,$E8,$01,$7C\r\n.db
    $60,$E9,$01,$84\r\n.db $60,$EA,$01,$8C\r\n\r\nLabel93FA:\r\n    .byte $0A,$0A,$0E,$08,$07,$0A\r\n   
    .byte $22,$1C,$1D,$14,$14,$14\r\n    .byte $14,$14,$14,$10,$14,$0F\r\n    .byte
    $26,$28,$1C,$21,$19,$14  ;Stored into CurrentBeginScreen\r\nLabel9412:\r\n   
    .byte $0A,$0A,$0E,$0A,$08,$0A\r\n    .byte $22,$24,$2E,$1D,$1D,$1D\r\n    .byte
    $16,$16,$14,$12,$14,$11\r\n    .byte $26,$28,$2E,$22,$20,$1E  ;Stored into CurrentEndScreen\r\nWilyStageClearScoreTable:
    ;at $9424\r\n    .byte 100,100,70,200,200    ; Level clear score for Wily stages
    *1000.\r\n\r\nEnterTeleport\r\n$942F> 20 05A1: JSR ForgetRoomObjects       \r\n\r\n;
    Make Megaman transform\r\n$9432> A9 14:   LDA #$14\r\n$9434> 8D 0004: STA ObjectSpriteNum+0      
    \r\n\r\n$9437> A9 00:   LDA #$00\r\n$9439> 8D 4004: STA ObjectUnknown440+0      
    \r\n-\r\n$943C> A9 01:   LDA #$01\r\n$943E> 20 09D1: JSR TimeDelayWithSpriteUpdates                     
    ; $D109       \r\n$9441> AD 4004: LDA ObjectUnknown440+0       \r\n$9444> D0
    F6:   BNE -                                               ; $943C              
    \r\n\r\n; Disable Megaman\r\n$9446> A9 F8:   LDA #$f8\r\n$9448> 8D 0006: STA
    ObjectPosY+0      \r\n\r\n$944B> A9 01:   LDA #$01\r\n$944D> 20 09D1: JSR TimeDelayWithSpriteUpdates                     
    ; $D109       \r\n$9450> 4C A692: JMP ScrollNextRoom       \r\n\r\n\r\n;\r\n;
    A = CapsuleObtained = tnnnnnnn\r\n;\r\n; t = type of capsule picked up (0 if
    life, 1 if weapon)\r\n;\r\n; n = value of capsule\r\n;\r\n\r\nMeterRefill\r\n$9453>
    A2 00:   LDX #$00        ; If this is a life capsule, then fill life\r\n$9455>
    29 80:   AND #$80        \r\n$9457> F0 04:   BEQ FillMeter                                      
    ; $945D\r\n\r\n; Weapon capsule\r\n$9459> A6 5F:   LDX WeaponSelect                                   
    ; If Megablaster selected then skip filling\r\n$945B> F0 34:   BEQ MeterFilled                                    
    ; $9491               \r\n\r\nFillMeter\r\n$945D> A5 AD:   LDA CapsuleObtained\r\n$945F>
    29 7F:   AND #$7f\r\n$9461> 85 3C:   STA MiscCounter1         \r\n--\r\n\r\n;
    Add 1 to meter every 4th frame and play meter fill sound every 8th frame\r\n$9463>
    A5 23:   LDA FrameCounter\r\n$9465> 29 03:   AND #$03        \r\n$9467> D0 1B:  
    BNE ++                                              ; $9484               \r\n$9469>
    A5 23:   LDA FrameCounter\r\n$946B> 29 07:   AND #$07        \r\n$946D> D0 09:  
    BNE +                                               ; $9478               \r\n\r\n\r\n$946F>
    8A:      TXA\r\n$9470> 48:      PHA\r\n$9471> A9 18:   LDA #$18        ; Meter
    fillup sound\r\n$9473> 20 77C4: JSR IssueSound                                     
    ; $C477       \r\n$9476> 68:      PLA             \r\n$9477> AA:      TAX\r\n\r\n+\r\n$9478>
    B5 6A:   LDA Meters,X\r\n$947A> C9 1C:   CMP #$1c        ; Break out of loop
    when meter is full\r\n$947C> F0 13:   BEQ MeterFilled                                    
    ; $9491               \r\n$947E> F6 6A:   INC Meters,X               \r\n$9480>
    C6 3C:   DEC MiscCounter1         \r\n$9482> F0 0A:   BEQ +                                              
    ; $948E               \r\n\r\n++\r\n$9484> 8A:      TXA\r\n$9485> 48:      PHA            
    \r\n$9486> 20 9894: JSR PauseFrameTick       \r\n$9489> 68:      PLA            
    \r\n$948A> AA:      TAX             \r\n\r\n$948B> 4C 6394: JMP --                                             
    ; $9463\r\n+\r\n$948E> 20 9894: JSR PauseFrameTick\r\n\r\nMeterFilled\r\n; Reset
    joypad data (and?...)\r\n$9491> A9 00:   LDA #$00\r\n$9493> 85 AD:   STA CapsuleObtained        
    \r\n$9495> 85 14:   STA JoyPad0        \r\n$9497> 60:      RTS             \r\n\r\n\r\nPauseFrameTick\r\n$9498>
    EE A006: INC ObjectLifeCycleCounter+0 ;inc 6A0 for Megaman\r\n$949B> 20 65C4:
    JSR LifeCycleTick_forEnemies       \r\n$949E> 20 31D1: JSR UpdateGraphics                                 
    ; $D131       \r\n$94A1> 20 6AD4: JSR LifeCycleUntick_forEveryone       \r\n$94A4>
    20 1BC0: JSR NextFrame                                       ; $C01B       \r\n$94A7>
    60:      RTS             \r\n\r\n\r\nMegamanAI:\r\n$94A8> A2 00:   LDX #$00\r\n$94AA>
    86 2F:   STX RefObjectNumber         \r\n\r\n; Make Megaman stop moving\r\n$94AC>
    AD 2004: LDA ObjectFlags+0\r\n$94AF> 29 7F:   AND #$7f        \r\n$94B1> 8D 2004:
    STA ObjectFlags+0       \r\n\r\n$94B4> 29 0F:   AND #$0f\r\n$94B6> F0 03:   BEQ
    +                                               ; $94BB               \r\n$94B8>
    4C DB96: JMP $96DB       \r\n$94BB> AD 4006: LDA ObjectFireDelay+0       \r\n+\r\n$94BE>
    29 F0:   AND #$f0\r\n$94C0> C9 20:   CMP #$20        \r\n$94C2> F0 23:   BEQ
    NotClimbing               \r\n$94C4> AD 2004: LDA ObjectFlags+0       \r\n$94C7>
    29 10:   AND #$10        \r\n$94C9> D0 19:   BNE $94E4 ;When climbing. Go to
    Ladder_Handler.               \r\n$94CB> A5 30:   LDA CurrentTileState        
    \r\n$94CD> 29 7F:   AND #$7F\r\n$94CF> F0 16:   BEQ NotClimbing ;Not climbing,
    and not a ladder.\r\n\r\n; Well well, there's a ladder somewhere! Check if up/down
    is pressed.\r\n$94D1> A5 14:   LDA JoyPad0\r\n$94D3> 29 30:   AND #$30\r\n$94D5>
    F0 10:   BEQ NotClimbing\r\n\r\n; Holding up/down key\r\n$94D7> 05 30:   ORA
    CurrentTileState\r\n$94D9> C9 11:   CMP #$11        ;up, but there's only ladder
    on bottom\r\n$94DB> F0 0A:   BEQ NotClimbing\r\n$94DD> C9 2E:   CMP #$2E       
    ;down, but there's no ladder on bottom\r\n$94DF> F0 06:   BEQ NotClimbing\r\n$94E1>
    4C BD97: JMP $97BD       \r\n\r\n; From 94C9\r\n$94E4> 4C DE97: JMP Ladder_Handler      
    \r\n\r\nNotClimbing\r\n$94E7> A5 94:   LDA MegamanWalkTimer\r\n$94E9> F0 0E:  
    BEQ +                                               ; $94F9               \r\n$94EB>
    A5 23:   LDA FrameCounter        \r\n$94ED> 29 03:   AND #$03        \r\n$94EF>
    D0 08:   BNE +                                               ; $94F9              
    \r\n$94F1> A9 01:   LDA #$01        \r\n$94F3> 85 95:   STA MegamanStallTimer        
    \r\n$94F5> EE A006: INC ObjectLifeCycleCounter+0       \r\n$94F8> 60:      RTS            
    \r\n+\r\n$94F9> A9 00:   LDA #$00\r\n$94FB> 85 95:   STA MegamanStallTimer        
    \r\n$94FD> 85 94:   STA MegamanWalkTimer         \r\n\r\n; if left/right is held
    in this frame and was not held in previous frame\r\n; then Make Megaman move
    slowly\r\n\r\n$94FF> A5 14:   LDA JoyPad0\r\n$9501> 29 C0:   AND #$c0       
    \r\n$9503> F0 1B:   BEQ ++                                              ; $9520              
    \r\n$9505> A5 16:   LDA JoyPad0old        \r\n$9507> 29 C0:   AND #$c0       
    \r\n$9509> D0 0D:   BNE +                                               ; $9518              
    \r\n$950B> A9 03:   LDA #$03\r\n$950D> 8D 0004: STA ObjectSpriteNum+0       \r\n$9510>
    A9 00:   LDA #$00\r\n$9512> 8D 4004: STA ObjectUnknown440+0       \r\n$9515>
    8D 4006: STA ObjectFireDelay+0       \r\n+\r\n$9518> 20 7B98: JSR SetMegamanFacing\r\n\r\n;
    Make Megaman move\r\n$951B> 09 80:   ORA #$80\r\n$951D> 8D 2004: STA ObjectFlags+0      
    \r\n\r\n++\r\n$9520> 20 E79C: JSR $9CE7\r\n$9523> A5 9B:   LDA LiftUnknown9B        
    \r\n$9525> 29 40:   AND #$40        \r\n$9527> F0 06:   BEQ +\r\n$9529> 20 EF9D:
    JSR ObjectUpdateMovementRight       \r\n$952C> 4C 3295: JMP ++\r\n+\r\n$952F>
    20 6D9E: JSR ObjectUpdateMovementLeft       \r\n++\r\n$9532> 20 8F98: JSR AutoCenterScreen      
    \r\n$9535> 20 DECB: JSR UpdateCurrentTileState       \r\n$9538> A5 18:   LDA
    JoyD0        \r\n$953A> 29 02:   AND #$02  ; If B pressed       \r\n$953C> F0
    05:   BEQ +\r\n$953E> 20 1EA7: JSR MegamanWeaponFire       \r\n$9541> D0 00:  
    BNE +\r\n+\r\n$9543> AD 8006: LDA ObjectYSpeed+0       \r\n$9546> 30 29:   BMI
    $9571               \r\n$9548> 20 C49B: JSR ObjectDoCollisionChecksAndAvoidWalls      
    \r\n$954B> B0 09:   BCS $9556               \r\n$954D> A5 14:   LDA JoyPad0       
    \r\n$954F> 29 01:   AND #$01        \r\n$9551> F0 06:   BEQ $9559              
    \r\n$9553> 4C 2996: JMP $9629       \r\n$9556> 4C 3396: JMP $9633       \r\n$9559>
    AD 8006: LDA ObjectYSpeed+0       \r\n$955C> 30 10:   BMI $956E              
    \r\n$955E> C9 01:   CMP #$01        \r\n$9560> 90 0C:   BCC $956E              
    \r\n$9562> F0 0A:   BEQ $956E               \r\n$9564> A9 01:   LDA #$01       
    \r\n$9566> 8D 8006: STA ObjectYSpeed+0       \r\n$9569> A9 00:   LDA #$00       
    \r\n$956B> 8D 6006: STA ObjectYSpeedFraction+0       \r\n$956E> 4C 2996: JMP
    $9629       \r\n$9571> 20 3496: JSR TestIsRiding       \r\n$9574> 48:      PHA            
    \r\n$9575> 20 C49B: JSR ObjectDoCollisionChecksAndAvoidWalls       \r\n$9578>
    B0 0B:   BCS $9585               \r\n$957A> 68:      PLA             \r\n$957B>
    F0 05:   BEQ $9582               \r\n$957D> 8D 0006: STA ObjectPosY+0      \r\n$9580>
    D0 04:   BNE $9586               \r\n$9582> 4C 2996: JMP $9629       \r\n\r\n\r\n$9585>
    68:      PLA\r\n\r\n; Make megaman jump unless he is already jumping/falling???\r\n$9586>
    AD 0004: LDA ObjectSpriteNum+0\r\n$9589> C9 09:   CMP #$09        \r\n$958B>
    F0 09:   BEQ +                                               ; $9596\r\n$958D>
    C9 6F:   CMP #$6f        \r\n$958F> D0 0A:   BNE ++                                             
    ; $959B\r\n\r\n$9591> A9 09:   LDA #$09\r\n$9593> 8D 0004: STA ObjectSpriteNum+0\r\n\r\n+\r\n$9596>
    A9 19:   LDA #$19        ; Megaman touching ground sound\r\n$9598> 20 77C4: JSR
    IssueSound                                      ; $C477\r\n++\r\n$959B> A5 2D:  
    LDA $2D\r\n$959D> CD 0006: CMP ObjectPosY+0      \r\n$95A0> B0 16:   BCS +                                              
    ; $95B8\r\n$95A2> A5 15:   LDA $15         \r\n$95A4> 29 00:   AND #$00       
    \r\n$95A6> F0 10:   BEQ +                                               ; $95B8\r\n\r\n;
    Shake Megaman\r\n$95A8> AD 2004: LDA ObjectFlags+0\r\n$95AB> 29 40:   AND #$40       
    \r\n$95AD> 09 02:   ORA #$02        \r\n$95AF> 8D 2004: STA ObjectFlags+0      
    \r\n\r\n$95B2> AD 0006: LDA ObjectPosY+0\r\n$95B5> 85 2D:   STA $2D         \r\n$95B7>
    60:      RTS             \r\n+\r\n$95B8> AD 0006: LDA ObjectPosY+0                                    
    ; ObjectPosY+0\r\n$95BB> 85 2D:   STA $2D         \r\n\r\n$95BD> A5 18:   LDA
    JoyD0\r\n$95BF> 29 01:   AND #$01        \r\n$95C1> D0 5B:   BNE ++++                                           
    ; $961E               \r\n\r\n; If button A is not pressed\r\n$95C3> AD 2004:
    LDA ObjectFlags+0\r\n$95C6> 29 80:   AND #$80        \r\n$95C8> D0 37:   BNE
    ++                                              ; $9601               \r\n\r\n;
    if moving...\r\n$95CA> A5 16:   LDA JoyPad0old\r\n$95CC> 29 C0:   AND #$c0       
    \r\n$95CE> D0 11:   BNE +                                               ; $95E1              
    \r\n\r\n; if left/right wasn't pressed the last frame\r\n$95D0> AD 0004: LDA
    ObjectSpriteNum+0\r\n$95D3> C9 09:   CMP #$09        \r\n$95D5> D0 1B:   BNE
    $95F2\r\n\r\n; if in air...\r\n$95D7> A9 00:   LDA #$00\r\n$95D9> 85 98:   STA
    $98         \r\n$95DB> 85 99:   STA $99         \r\n$95DD> A9 0F:   LDA #$0f       
    \r\n$95DF> D0 09:   BNE $95EA               \r\n+\r\n$95E1> AD 0004: LDA ObjectSpriteNum+0\r\n$95E4>
    C9 06:   CMP #$06        \r\n$95E6> D0 0F:   BNE $95F7\r\n\r\n; Make Megaman
    slow down after running\r\n$95E8> A9 0C:   LDA #$0C\r\n$95EA> 8D 0004: STA ObjectSpriteNum+0\r\n\r\n$95ED>
    A9 01:   LDA #$01\r\n$95EF> 8D 4004: STA ObjectUnknown440+0       \r\n\r\n; from
    95D5: was not in a jumping state\r\n$95F2> AD 4004: LDA ObjectUnknown440+0\r\n$95F5>
    D0 3C:   BNE $9633               \r\n\r\n\r\n; Make Megaman stand still if he
    wasn't running\r\n$95F7> A9 00:   LDA #$00\r\n$95F9> 8D 0004: STA ObjectSpriteNum+0      
    \r\n$95FC> 8D 4004: STA ObjectUnknown440+0       \r\n$95FF> F0 32:   BEQ $9633              
    \r\n++\r\n$9601> AD 0004: LDA ObjectSpriteNum+0\r\n$9604> C9 09:   CMP #$09       
    \r\n$9606> F0 0B:   BEQ $9613               \r\n$9608> C9 03:   CMP #$03       
    \r\n$960A> D0 27:   BNE $9633               \r\n$960C> AD 4004: LDA ObjectUnknown440+0      
    \r\n$960F> C9 22:   CMP #$22        \r\n$9611> D0 20:   BNE $9633              
    \r\n\r\n; Make Megaman run\r\n$9613> A9 06:   LDA #$06\r\n$9615> 8D 0004: STA
    ObjectSpriteNum+0       \r\n\r\n$9618> A9 00:   LDA #$00\r\n$961A> 8D 4004: STA
    ObjectUnknown440+0       \r\n$961D> 60:      RTS             \r\n\r\n; if button
    A pressed...\r\n++++\r\n$961E> A9 04:   LDA #$04\r\n$9620> 8D 8006: STA ObjectYSpeed+0      
    \r\n$9623> A9 DF:   LDA #$df        \r\n$9625> 8D 6006: STA ObjectYSpeedFraction+0      
    \r\n$9628> 60:      RTS             \r\n\r\n; NOTE! This is written not once,
    but repeatedly as long as Megaman\r\n; is jumping/falling\r\n\r\n$9629> A9 09:  
    LDA #$09\r\n$962B> 8D 0004: STA ObjectSpriteNum+0       \r\n\r\n$962E> A9 00:  
    LDA #$00\r\n$9630> 8D 4004: STA ObjectUnknown440+0       \r\n\r\n\r\n$9633> 60:     
    RTS\r\n\r\nTestIsRiding\r\n$9634> A5 60:   LDA WeaponFiring\r\n$9636> C9 C7:  
    CMP #$C7        \r\n$9638> D0 2A:   BNE TestLiftRiding    ; Don't test magnet
    beams if none is being used\r\nTestMagnetBeamRiding\r\n$963A> A2 00:   LDX #$00       
    \r\n-\r\n$963C> BD B005: LDA MagnetBeamAge,X     \r\n$963F> F0 1E:   BEQ +\r\n$9641>
    BD D005: LDA MagnetBeamPosScreen,X     \r\n$9644> 85 07:   STA CurrentRoomPointer+1\r\n$9646>
    BD C005: LDA MagnetBeamPosX,X     \r\n$9649> 85 06:   STA CurrentRoomPointer+0       
    \r\n$964B> BD A005: LDA MagnetBeamLength,X     \r\n$964E> 29 7C:   AND #$7C\r\n$9650>
    0A:      ASL A           \r\n$9651> 69 10:   ADC #$10        \r\n$9653> 85 09:  
    STA CurrentRoomPointer+3\r\n$9655> BD F005: LDA MagnetBeamPosY,X     \r\n$9658>
    85 08:   STA CurrentRoomPointer+2         \r\n$965A> 20 9196: JSR TestRidingWithCoordinates      
    \r\n$965D> B0 31:   BCS +++\r\n+\r\n$965F> E8:      INX             \r\n$9660>
    E0 10:   CPX #$10        \r\n$9662> D0 D8:   BNE -\r\n; Test collision with lifts\r\nTestLiftRiding\r\n$9664>
    A6 9A:   LDX LiftIndex         \r\n$9666> F0 1C:   BEQ +\r\n$9668> CA:      DEX            
    \r\n-\r\n$9669> BD 0007: LDA LiftPosScreen,X     \r\n$966C> 85 07:   STA CurrentRoomPointer+1\r\n$966E>
    BD 0807: LDA LiftPosX,X     \r\n$9671> 85 06:   STA CurrentRoomPointer+0        
    \r\n$9673> A9 14:   LDA #$14        \r\n$9675> 85 09:   STA CurrentRoomPointer+3\r\n$9677>
    BD 1007: LDA LiftPosY,X     \r\n$967A> 85 08:   STA CurrentRoomPointer+2        
    \r\n$967C> 20 9196: JSR TestRidingWithCoordinates       \r\n$967F> B0 06:   BCS
    ++\r\n$9681> CA:      DEX             \r\n$9682> 10 E5:   BPL -\r\n+\r\n$9684>
    A9 00:   LDA #$00        \r\n$9686> 60:      RTS             \r\n++\r\n$9687>
    48:      PHA             \r\n$9688> BD 1807: LDA LiftDirection,X     \r\n$968B>
    09 80:   ORA #$80        \r\n$968D> 85 9E:   STA LiftUnknown9E         \r\n$968F>
    68:      PLA             \r\n+++\r\n$9690> 60:      RTS             \r\n\r\n\r\nTestRidingWithCoordinates\r\n;\r\n;
    Input:\r\n;   CurrentRoomPointer+0 = MIDDLE Xpos\r\n;   CurrentRoomPointer+1
    = MIDDLE screen number\r\n;   CurrentRoomPointer+2 = MIDDLE Ypos\r\n;   CurrentRoomPointer+3
    = HALF OF THE width of the lift\r\n;\r\n\r\n$9691> 18:      CLC\r\n$9692> AD
    0006: LDA ObjectPosY+0      \r\n$9695> 69 0E:   ADC #$0E\r\n$9697> 85 04:   STA
    $04         \r\n$9699> C5 08:   CMP CurrentRoomPointer+2       \r\n$969B> B0
    3C:   BCS +++                    ;If Megaman is below, he's not on the lift.\r\n$969D>
    38:      SEC             \r\n$969E> AD 2006: LDA ObjectPosYfraction+0     \r\n$96A1>
    ED 6006: SBC ObjectYSpeedFraction+0       \r\n$96A4> A5 04:   LDA $04        
    \r\n$96A6> ED 8006: SBC ObjectYSpeed+0       \r\n$96A9> C5 08:   CMP CurrentRoomPointer+2  
    ;If, after moving, he's above, he's not on the lift.\r\n$96AB> 90 2C:   BCC +++\r\n$96AD>
    38:      SEC             \r\n$96AE> AD 8004: LDA ObjectPosX+0          \r\n$96B1>
    E5 06:   SBC CurrentRoomPointer         \r\n$96B3> 85 04:   STA $04         \r\n$96B5>
    AD 6004: LDA ObjectPosScreen+0\r\n$96B8> E5 07:   SBC CurrentRoomPointer+1  \r\n$96BA>
    90 04:   BCC +                      ;Previous screen?\r\n$96BC> D0 1B:   BNE
    +++                    ;If he's not in the same screen, no match. \r\n$96BE>
    F0 0C:   BEQ ++ \r\n+\r\n$96C0> 49 FF:   EOR #$ff                   ;Compensate
    fancily \r\n$96C2> D0 15:   BNE +++\r\n$96C4> A5 04:   LDA $04         \r\n$96C6>
    49 FF:   EOR #$ff        \r\n$96C8> 69 01:   ADC #$01        \r\n$96CA> 85 04:  
    STA $04                  \r\n++\r\n$96CC> A5 09:   LDA CurrentRoomPointer+3 ;Now
    compare if the width is too far\r\n$96CE> C5 04:   CMP $04         \r\n$96D0>
    90 07:   BCC +++\r\n$96D2> 38:      SEC             \r\n$96D3> A5 08:   LDA CurrentRoomPointer+2
    ;And the X position...\r\n$96D5> E9 10:   SBC #$10        \r\n$96D7> 38:     
    SEC             \r\n$96D8> 60:      RTS             \r\n+++\r\n$96D9> 18:     
    CLC             \r\n$96DA> 60:      RTS             \r\n\r\n\r\n\r\n$96DB> 0A:     
    ASL A\r\n$96DC> AA:      TAX             \r\n$96DD> BC 4097: LDY $9740,X    
    \r\n$96E0> BD 4197: LDA $9741,X     \r\n$96E3> 48:      PHA             \r\n$96E4>
    29 F0:   AND #$f0        \r\n$96E6> 85 00:   STA $00         \r\n$96E8> 68:     
    PLA             \r\n$96E9> 29 0F:   AND #$0f        \r\n$96EB> 85 01:   STA $01        
    \r\n$96ED> 20 4A97: JSR $974A       \r\n$96F0> AD 4004: LDA ObjectUnknown440+0      
    \r\n$96F3> F0 3B:   BEQ $9730               \r\n$96F5> 20 E79C: JSR $9CE7      
    \r\n$96F8> A5 9B:   LDA LiftUnknown9B         \r\n\r\n$96FA> AE 0004: LDX ObjectSpriteNum+0\r\n$96FD>
    E0 6E:   CPX #$6E ;throwing something?        \r\n$96FF> F0 0C:   BEQ +                                              
    ; $970D               \r\n$9701> E0 14:   CPX #$14 ;transforming?\r\n$9703> D0
    0A:   BNE $970F               \r\n$9705> A2 00:   LDX #$00        \r\n$9707>
    8E E004: STX ObjectXSpeedFraction+0       \r\n$970A> 8E C004: STX ObjectXSpeed+0      
    \r\n\r\n; Megaman throwing something (while standing)\r\n\r\n+\r\n$970D> 49 40:  
    EOR #$40\r\n$970F> 29 40:   AND #$40        \r\n$9711> D0 06:   BNE +                                              
    ; $9719               \r\n$9713> 20 EF9D: JSR ObjectUpdateMovementRight      
    \r\n$9716> 4C 1C97: JMP ++                                              ; $971C      
    \r\n+\r\n$9719> 20 6D9E: JSR ObjectUpdateMovementLeft\r\n++\r\n$971C> 20 8F98:
    JSR AutoCenterScreen\r\n$971F> 20 DECB: JSR UpdateCurrentTileState       \r\n$9722>
    20 3496: JSR TestIsRiding       \r\n$9725> 48:      PHA             \r\n$9726>
    20 C49B:  JSR ObjectDoCollisionChecksAndAvoidWalls       \r\n$9729> 68:     
    PLA             \r\n$972A> F0 03:   BEQ +                                              
    ; $972F               \r\n$972C> 8D 0006: STA ObjectPosY+0      \r\n+\r\n$972F>
    60:      RTS\r\n\r\n; Make Megaman stand still facing right and clear joypad
    data\r\n$9730> AD 2004: LDA ObjectFlags+0\r\n$9733> 29 40:   AND #$40       
    \r\n$9735> 8D 2004: STA ObjectFlags+0       \r\n$9738> A9 00:   LDA #$00\r\n$973A>
    8D 0004: STA ObjectSpriteNum+0       \r\n$973D> 85 16:   STA JoyPad0old       
    \r\n\r\n$973F> 4C E794: JMP $94E7\r\n\r\n$9742> 14:      .byte $14\r\n$9743>
    00:      BRK             \r\n$9744> 13:      .byte $13                \r\n$9745>
    E0 12:   CPX #$12        \r\n$9747> 41 6E:   EOR ($6E,X)             \r\n$9749>
    00:      BRK             \r\n\r\n\r\n\r\n$974A> CC 0004: CPY ObjectSpriteNum+0\r\n$974D>
    F0 47:   BEQ $9796               \r\n$974F> 8C 0004: STY ObjectSpriteNum+0      
    \r\n$9752> C0 14:   CPY #$14  ;transforming? \r\n$9754> D0 05:   BNE +                                              
    ; $975B               \r\n$9756> A9 20:   LDA #$20        ; Megaman transforming
    sound\r\n$9758> 20 77C4: JSR IssueSound                                     
    ; $C477       \r\n+\r\n$975B> C0 12:   CPY #$12    ;getting hit by enemy?\r\n$975D>
    D0 2B:   BNE $978A               \r\n$975F> A2 16:   LDX #$16        \r\n$9761>
    20 76C5: JSR FindFreeObject       \r\n$9764> B0 1F:   BCS $9785              
    \r\n$9766> A0 08:   LDY #$08        \r\n$9768> 20 33F5: JSR InitObjectDefaultSpeed      
    \r\n$976B> A9 00:   LDA #$00        \r\n$976D> 85 2F:   STA RefObjectNumber        
    \r\n$976F> 20 7BF6: JSR InitActor       \r\n$9772> A9 19:   LDA #$19        \r\n$9774>
    9D 0004: STA ObjectSpriteNum,X     \r\n$9777> FE 4004: INC ObjectUnknown440,X    
    \r\n$977A> A9 08:   LDA #$08        \r\n$977C> 9D 2004: STA ObjectFlags,X    
    \r\n$977F> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$9782> 20 3DC5: JSR C53D_routine      
    \r\n\r\n$9785> A9 16:   LDA #$16        ; Some kind of explosion\r\n$9787> 20
    77C4: JSR IssueSound                                      ; $C477       \r\n\r\n$978A>
    A9 01:   LDA #$01\r\n$978C> 8D 4004: STA ObjectUnknown440+0       \r\n$978F>
    A9 00:   LDA #$00        \r\n$9791> 8D 4006: STA ObjectFireDelay+0       \r\n$9794>
    F0 0D:   BEQ $97A3               \r\n$9796> C0 13:   CPY #$13        \r\n$9798>
    D0 1B:   BNE $97B5               \r\n$979A> AD 4004: LDA ObjectUnknown440+0      
    \r\n$979D> 29 1F:   AND #$1f        \r\n$979F> C9 01:   CMP #$01        \r\n$97A1>
    D0 12:   BNE $97B5               \r\n$97A3> C0 14:   CPY #$14        \r\n$97A5>
    F0 0E:   BEQ $97B5               \r\n$97A7> C0 6E:   CPY #$6e        \r\n$97A9>
    F0 0A:   BEQ $97B5               \r\n$97AB> A5 00:   LDA $00         \r\n$97AD>
    8D 6006: STA ObjectYSpeedFraction+0       \r\n$97B0> A5 01:   LDA $01        
    \r\n$97B2> 8D 8006: STA ObjectYSpeed+0       \r\n$97B5> C0 14:   CPY #$14       
    \r\n$97B7> D0 03:   BNE $97BC               \r\n$97B9> 20 65C4: JSR LifeCycleTick_forEnemies      
    \r\n$97BC> 60:      RTS             \r\n\r\n\r\n\r\n; Make Megaman turn and...\r\n$97BD>
    AD 2004: LDA ObjectFlags+0\r\n$97C0> 09 10:   ORA #$10        \r\n$97C2> 49 40:  
    EOR #$40        \r\n$97C4> 8D 2004: STA ObjectFlags+0       \r\n\r\n$97C7> A9
    00:   LDA #$00\r\n$97C9> 8D 4004: STA ObjectUnknown440+0       \r\n$97CC> 8D
    4006: STA ObjectFireDelay+0       \r\n$97CF> A5 2E:   LDA $2E         \r\n$97D1>
    18:      CLC             \r\n$97D2> 69 08:   ADC #$08        \r\n$97D4> 85 22:  
    STA $22         \r\n$97D6> AD 6004: LDA ObjectPosScreen+0                            
    ; $0460       \r\n$97D9> 85 20:   STA $20         \r\n$97DB> 20 8F98: JSR AutoCenterScreen      
    \r\n\r\nLadder_Handler\r\n; Make Megaman grab ladder\r\n$97DE> A9 15:   LDA #$15     
    ;on ladder\r\n$97E0> 8D 0004: STA ObjectSpriteNum+0       \r\n\r\n$97E3> A5 18:  
    LDA JoyD0\r\n$97E5> 29 02:   AND #$02        \r\n$97E7> D0 6B:   BNE Ladder_B_Pressed\r\n\r\n$97E9>
    A5 14:   LDA JoyPad0        \r\n$97EB> 29 31:   AND #$31        \r\n$97ED> F0
    76:   BEQ Ladder_HoldStill ;no up,down,A\r\n$97EF> 29 30:   AND #$30        \r\n$97F1>
    F0 7B:   BEQ Ladder_Release   ;no up,down so it must be A pressed\r\n$97F3> 29
    10:   AND #$10             ;either up or down pressed\r\n$97F5> F0 23:   BEQ
    Ladder_ClimbDown ;if up is not pressed\r\nLadder_ClimbUp                      
    ;well, up is pressed.\r\n$97F7> A0 00:   LDY #$00             ;XSpeed\r\n$97F9>
    A2 C0:   LDX #$c0             ;XSpeedFraction (speed is +0.75)\r\n$97FB> A5 30:  
    LDA CurrentTileState         \r\n$97FD> 29 0C:   AND #$0c        \r\n$97FF> D0
    0E:   BNE +\r\n; Adjust Rockman's position above the ladder so that he'll not
    fall\r\n; If he's little too high, this may place him in ceiling. -Bisqwit\r\n$9801>
    AD 0006: LDA ObjectPosY+0      \r\n$9804> 29 F0:   AND #$f0        \r\n$9806>
    38:      SEC             \r\n$9807> E9 0C:   SBC #$0c        \r\n$9809> 8D 0006:
    STA ObjectPosY+0      \r\n$980C> 4C 6E98: JMP Ladder_Release       \r\n+\r\n$980F>
    29 08:   AND #$08        \r\n$9811> D0 25:   BNE Ladder_Climb               \r\n\r\n$9813>
    A9 17:   LDA #$17  ;getting off the ladder\r\n$9815> 8D 0004: STA ObjectSpriteNum+0      
    \r\n$9818> D0 1E:   BNE Ladder_Climb ;unconditional jump.\r\n\r\nLadder_ClimbDown\r\n$981A>
    A5 30:   LDA CurrentTileState         \r\n$981C> C9 01:   CMP #$01        \r\n$981E>
    D0 09:   BNE +\r\n$9820> AD 0006: LDA ObjectPosY+0      \r\n\r\n$9823> 18:     
    CLC\r\n$9824> 69 0C:   ADC #$0c        \r\n$9826> 8D 0006: STA ObjectPosY+0     
    \r\n+\r\n$9829> A0 FF:   LDY #$ff        ;YSpeed \r\n$982B> A2 40:   LDX #$40       
    ;YSpeedFraction  (Speed is -0.75)\r\n$982D> A5 30:   LDA CurrentTileState        
    \r\n$982F> 29 0C:   AND #$0c        \r\n$9831> D0 05:   BNE Ladder_Climb              
    \r\n\r\n$9833> A9 17:   LDA #$17  ;getting off the ladder\r\n$9835> 8D 0004:
    STA ObjectSpriteNum+0       \r\n\r\nLadder_Climb\r\n$9838> AD 4006: LDA ObjectFireDelay+0      
    \r\n$983B> F0 04:   BEQ +     ;don't climb if weapon fire delay is active\r\n$983D>
    A2 00:   LDX #$00\r\n$983F> A0 00:   LDY #$00        \r\n+\r\n$9841> 8C 8006:
    STY ObjectYSpeed+0\r\n$9844> 8E 6006: STX ObjectYSpeedFraction+0       \r\n$9847>
    20 DECB: JSR UpdateCurrentTileState       \r\n$984A> A5 30:   LDA CurrentTileState        
    \r\n$984C> F0 20:   BEQ Ladder_Release               \r\n$984E> 20 C49B: JSR
    ObjectDoCollisionChecksAndAvoidWalls       \r\n$9851> B0 1B:   BCS Ladder_Release              
    \r\n$9853> 60:      RTS             \r\n\r\nLadder_B_Pressed\r\n$9854> A5 14:  
    LDA JoyPad0        \r\n$9856> 29 C0:   AND #$c0        \r\n$9858> F0 03:   BEQ
    +\r\n$985A> 20 7B98: JSR SetMegamanFacing       \r\n+\r\n$985D> A9 1F:   LDA
    #$1f        \r\n$985F> 8D 4006: STA ObjectFireDelay+0 ;; weapon fire delay in
    ladder       \r\n$9862> 20 1EA7: JSR MegamanWeaponFire       \r\nLadder_HoldStill\r\n$9865>
    AD 4004: LDA ObjectUnknown440+0       \r\n$9868> 29 F0:   AND #$f0        \r\n$986A>
    8D 4004: STA ObjectUnknown440+0       \r\n$986D> 60:      RTS             \r\n\r\nLadder_Release\r\n$986E>
    A9 40:   LDA #$40\r\n$9870> 8D 6006: STA ObjectYSpeedFraction+0       \r\n$9873>
    A9 FF:   LDA #$ff        \r\n$9875> 8D 8006: STA ObjectYSpeed+0       \r\n$9878>
    4C 3097: JMP $9730       \r\n\r\nSetMegamanFacing\r\n; Make Megaman face left\r\n$987B>
    AD 2004: LDA ObjectFlags+0\r\n$987E> 29 BF:   AND #$bf        \r\n$9880> 8D 2004:
    STA ObjectFlags+0       \r\n; Make Megaman face right if \"right\" button is
    held\r\n$9883> A5 14:   LDA JoyPad0\r\n$9885> 29 80:   AND #$80        \r\n$9887>
    4A:      LSR A           \r\n$9888> 0D 2004: ORA ObjectFlags+0       \r\n$988B>
    8D 2004: STA ObjectFlags+0       \r\n$988E> 60:      RTS             \r\n\r\n\r\nAutoCenterScreen\r\n$988F>
    38:      SEC\r\n$9890> A5 22:   LDA $22         \r\n$9892> E9 80:   SBC #$80       
    \r\n$9894> 85 1A:   STA ScrollPosX         \r\n$9896> A5 20:   LDA $20        
    \r\n$9898> E9 00:   SBC #$00        \r\n$989A> C5 27:   CMP CurrentBeginScreen        
    \r\n$989C> 30 02:   BMI +                                               ; $98A0              
    \r\n$989E> B0 07:   BCS ++                                              ; $98A7\r\n+\r\n$98A0>
    A5 27:   LDA CurrentBeginScreen\r\n$98A2> 85 1B:   STA ScrollPosScreen        
    \r\n$98A4> 4C AD98: JMP +++\r\n++\r\n$98A7> 85 1B:   STA ScrollPosScreen\r\n$98A9>
    C5 28:   CMP CurrentEndScreen         \r\n$98AB> D0 06:   BNE +                                              
    ; $98B3               \r\n+++\r\n$98AD> A9 00:   LDA #$00\r\n$98AF> 85 1A:  
    STA ScrollPosX         \r\n$98B1> F0 25:   BEQ ObjectRelocateHorizontally\r\n+\r\n$98B3>
    38:      SEC\r\n$98B4> AD 8004: LDA ObjectPosX+0       \r\n$98B7> E5 22:   SBC
    $22         \r\n$98B9> 85 0C:   STA $0C         \r\n$98BB> AD 6004: LDA ObjectPosScreen+0                            
    ; $0460       \r\n$98BE> E5 20:   SBC $20         \r\n$98C0> 10 0F:   BPL +                                              
    ; $98D1\r\n$98C2> 38:      SEC             \r\n$98C3> A9 00:   LDA #$00       
    \r\n$98C5> E5 0C:   SBC $0C         \r\n$98C7> F0 0F:   BEQ ObjectRelocateHorizontally\r\n$98C9>
    85 0C:   STA $0C         \r\n$98CB> 20 6D9F: JSR Function9F6D       \r\n$98CE>
    4C D898: JMP ObjectRelocateHorizontally\r\n+\r\n$98D1> A5 0C:   LDA $0C\r\n$98D3>
    F0 03:   BEQ ObjectRelocateHorizontally\r\n$98D5> 20 9E9F: JSR Function9F9E  
    \r\n;passthru\r\n\r\nObjectRelocateHorizontally ; different from UpdateObjectMoveHorizontally\r\n;\r\n;
    Input\r\n;   $20 = New ObjectPosScreen\r\n;   $21 = New ObjectPosXfraction\r\n;  
    $22 = New ObjectPosX\r\n;   \r\n$98D8> A6 2F:   LDX RefObjectNumber\r\n\r\n$98DA>
    A5 20:   LDA $20\r\n$98DC> 9D 6004: STA ObjectPosScreen,X     \r\n$98DF> A5 22:  
    LDA $22         \r\n$98E1> 9D 8004: STA ObjectPosX,X     \r\n\r\n$98E4> A5 21:  
    LDA $21\r\n$98E6> 9D A004: STA ObjectPosXfraction,X     \r\n$98E9> 60:      RTS            
    \r\n\r\n;\r\n; Note: does *not* perform AI for bosses (or Megaman, for that matter)\r\n;\r\n\r\nRunEnemyAI\r\n$98EA>
    A9 00:   LDA #$00\r\n$98EC> 85 9A:   STA LiftIndex         \r\n\r\n$98EE> A2
    02:   LDX #$02\r\n$98F0> 86 2F:   STX RefObjectNumber         \r\n\r\n---\r\n$98F2>
    A6 2F:   LDX RefObjectNumber\r\n$98F4> BD 0006: LDA ObjectPosY,X     \r\n$98F7>
    C9 F8:   CMP #$f8        \r\n$98F9> D0 03:   BNE +                                              
    ; $98FE               \r\n$98FB> 4C 8A99: JMP NextObject                                     
    ; NextObject       \r\n+\r\n$98FE> BD 0004: LDA ObjectSpriteNum,X\r\n$9901> C9
    FF:   CMP #$ff        \r\n$9903> D0 06:   BNE +                                              
    ; $990B               \r\n$9905> 20 29AA: JSR DoEnemyAI                                     
    ; $AA29       \r\n$9908> 4C 8A99: JMP NextObject                                     
    ; NextObject       \r\n+\r\n$990B> BD A006: LDA ObjectLifeCycleCounter,X\r\n$990E>
    D0 36:   BNE +++    ; Skip the expensive stuff if the enemy is sleeping\r\n\r\n$9910>
    BD 2004: LDA ObjectFlags,X\r\n$9913> 29 80:   AND #$80        \r\n$9915> F0 05:  
    BEQ +                                               ; $991C               \r\n;
    Object is hit by Megaman's weapon\r\n$9917> A9 05:   LDA #$05\r\n$9919> 4C 9699:
    JMP ObjectShouldBeDestroyed                              ; ObjectShouldBeDestroyed      
    \r\n+\r\n$991C> BD 2004: LDA ObjectFlags,X\r\n$991F> 29 08:   AND #$08       
    \r\n$9921> F0 0A:   BEQ +                                               ; $992D              
    \r\n$9923> BD 4004: LDA ObjectUnknown440,X     \r\n$9926> D0 05:   BNE +                                              
    ; $992D               \r\n$9928> A9 00:   LDA #$00        \r\n$992A> 4C 9699:
    JMP ObjectShouldBeDestroyed                              ; ObjectShouldBeDestroyed      
    \r\n+\r\n$992D> A9 00:   LDA #$00\r\n$992F> 85 2A:   STA $2A         \r\n$9931>
    85 2B:   STA $2B         \r\n; if object is facing right then jsr ObjectUpdateMovementRight,
    else jsr ObjectUpdateMovementLeft\r\n$9933> BD 2004: LDA ObjectFlags,X\r\n$9936>
    29 40:   AND #$40        \r\n$9938> F0 06:   BEQ +                                              
    ; $9940               \r\n$993A> 20 EF9D: JSR ObjectUpdateMovementRight      
    \r\n$993D> 4C 4399: JMP ++                                              ; $9943      
    \r\n+\r\n$9940> 20 6D9E: JSR ObjectUpdateMovementLeft\r\n++\r\n$9943> 20 D898:
    JSR ObjectRelocateHorizontally\r\n+++ ;If the enemy is sleeping, the above part
    was skipped\r\n$9946> 38:      SEC             \r\n$9947> BD 8004: LDA ObjectPosX,X\r\n$994A>
    E5 1A:   SBC ScrollPosX         \r\n$994C> BD 6004: LDA ObjectPosScreen,X    
    \r\n$994F> E5 1B:   SBC ScrollPosScreen         \r\n$9951> F0 05:   BEQ +                                              
    ; $9958               \r\n$9953> A9 01:   LDA #$01\r\n$9955> 4C 9699: JMP ObjectShouldBeDestroyed      
    \r\n+\r\n$9958> BD A006: LDA ObjectLifeCycleCounter,X\r\n$995B> D0 2D:   BNE
    NextObject               \r\n$995D> A5 2A:   LDA $2A         \r\n$995F> F0 05:  
    BEQ +                                               ; $9966               \r\n$9961>
    A9 03:   LDA #$03        \r\n$9963> 4C 9699: JMP ObjectShouldBeDestroyed      
    \r\n+\r\n$9966> BD 2004: LDA ObjectFlags,X\r\n$9969> 29 11:   AND #$11       
    \r\n$996B> D0 11:   BNE +\r\n$996D> 20 A19C: JSR ObjectCheckIfOutScreenVertically      
    \r\n$9970> B0 13:   BCS ++\r\n\r\n$9972> A5 24:   LDA $24\r\n$9974> 9D 2006:
    STA ObjectPosYfraction,X     \r\n$9977> A5 25:   LDA $25\r\n$9979> 9D 0006: STA
    ObjectPosY,X     \r\n\r\n$997C> 90 0C:   BCC NextObject\r\n+\r\n$997E> 20 C49B:
    JSR ObjectDoCollisionChecksAndAvoidWalls       \r\n$9981> A5 2B:   LDA $2B        
    \r\n$9983> F0 05:   BEQ NextObject               \r\n++\r\n$9985> A9 04:   LDA
    #$04        \r\n$9987> 4C 9699: JMP ObjectShouldBeDestroyed       \r\n\r\nNextObject\r\n$998A>
    E6 2F:   INC RefObjectNumber\r\n$998C> A5 54:   LDA TotalObjects         \r\n$998E>
    C5 2F:   CMP RefObjectNumber         \r\n$9990> F0 03:   BEQ +                                              
    ; $9995\r\n$9992> 4C F298: JMP ---                                            
    ; $98F2\r\n+\r\n$9995> 60:      RTS\r\n\r\nObjectShouldBeDestroyed\r\n; A = Hit
    type\r\n;           0 = hit because ObjectFlags had bit #8 clear and Unknown440=0\r\n;          
    1 = scrolled out from screen (at $9953)\r\n;           3 = $2A was nonzero (at
    $9961)\r\n;           4 = dropped in a pit (ObjectCheckIfOutScreenVertically
    returned carry set)\r\n;           5 = hit by weapon\r\n;\r\n$9996> 85 53:  
    STA ObjectReceivedHitType\r\n$9998> A0 2D:   LDY #$2d        \r\n$999A> A6 2F:  
    LDX RefObjectNumber         \r\n$999C> BD 0004: LDA ObjectSpriteNum,X     \r\n-\r\n$999F>
    D9 BB99: CMP ObjectHitRoutineTable+0,Y\r\n$99A2> F0 07:   BEQ +                                              
    ; $99AB               \r\n$99A4> 88:      DEY             \r\n$99A5> 88:     
    DEY             \r\n$99A6> 88:      DEY             \r\n$99A7> 10 F6:   BPL -                                              
    ; $999F\r\n\r\n$99A9> A0 00:   LDY #$00\r\n+\r\n$99AB> B9 BC99: LDA ObjectHitRoutineTable+1,Y\r\n$99AE>
    85 04:   STA $04         \r\n$99B0> B9 BD99: LDA ObjectHitRoutineTable+2,Y    
    \r\n$99B3> 85 05:   STA $05         \r\n$99B5> 6C 0400: JMP ($0004)     \r\n\r\n$99B8>
    4C 8A99: JMP NextObject                                      ; $998A\r\n\r\n\r\nObjectHitRoutineTable:\r\n   
    .byte $19 : .word Sprite19ShouldBeDestroyedAndDefault ; default\r\n    .byte
    $27 : .word Sprite27ShouldBeDestroyed\r\n    .byte $32 : .word Sprite32ShouldBeDestroyed\r\n   
    .byte $36 : .word Sprite36ShouldBeDestroyed\r\n    .byte $4C : .word Sprite4Cto53ShouldBeDestroyed\r\n   
    .byte $4D : .word Sprite4Cto53ShouldBeDestroyed\r\n    .byte $4E : .word Sprite4Cto53ShouldBeDestroyed\r\n   
    .byte $4F : .word Sprite4Cto53ShouldBeDestroyed\r\n    .byte $50 : .word Sprite4Cto53ShouldBeDestroyed\r\n   
    .byte $51 : .word Sprite4Cto53ShouldBeDestroyed\r\n    .byte $52 : .word Sprite4Cto53ShouldBeDestroyed\r\n   
    .byte $53 : .word Sprite4Cto53ShouldBeDestroyed\r\n    .byte $39 : .word Sprite39ShouldBeDestroyed\r\n   
    .byte $5A : .word Sprite5AShouldBeDestroyed\r\n    .byte $6C : .word Sprite6CShouldBeDestroyed\r\n   
    .byte $5D : .word Sprite5DShouldBeDestroyed\r\n\r\nSprite19ShouldBeDestroyedAndDefault:\r\n$99EB>
    A5 53:   LDA ObjectReceivedHitType         \r\n$99ED> C9 05:   CMP #$05        
    ;Was it a weapon hit?\r\n$99EF> D0 0B:   BNE +\r\n$99F1> BD 2004: LDA ObjectFlags,X    
    \r\n$99F4> 29 7F:   AND #$7f        \r\n$99F6> 9D 2004: STA ObjectFlags,X    
    \r\n$99F9> 4C 1C99: JMP $991C       \r\n+\r\nDeleteObjectThatWasScrolledOut\r\n$99FC>
    A6 2F:   LDX RefObjectNumber\r\n$99FE> A9 F8:   LDA #$f8        \r\n$9A00> 9D
    0006: STA ObjectPosY,X     \r\n$9A03> 4C 8A99: JMP NextObject                                     
    ; $998A       \r\n\r\nSprite32ShouldBeDestroyed:\r\n$9A06> E0 05:   CPX #$05    
    ;\r\n$9A08> D0 03:   BNE +\r\n$9A0A> 4C 1B9B: JMP $9B1B       \r\n+\r\n$9A0D>
    C6 44:   DEC BossVariable44         \r\n$9A0F> BD 2004: LDA ObjectFlags,X    
    \r\n$9A12> 29 08:   AND #$08        \r\n$9A14> D0 E6:   BNE DeleteObjectThatWasScrolledOut\r\n$9A16>
    BD 6004: LDA ObjectPosScreen,X     \r\n$9A19> 85 01:   STA $01         \r\n\r\n$9A1B>
    BD 8004: LDA ObjectPosX,X\r\n$9A1E> 85 00:   STA $00         \r\n$9A20> BD 0006:
    LDA ObjectPosY,X     \r\n$9A23> 85 03:   STA $03         \r\n$9A25> BD 2004:
    LDA ObjectFlags,X     \r\n$9A28> 29 40:   AND #$40        \r\n$9A2A> 09 02:  
    ORA #$02        \r\n$9A2C> 85 02:   STA $02         \r\n\r\n$9A2E> A9 F8:   LDA
    #$f8\r\n$9A30> 9D 0006: STA ObjectPosY,X     \r\n\r\n$9A33> A0 00:   LDY #$00\r\n-\r\n$9A35>
    84 0C:   STY $0C\r\n$9A37> A2 10:   LDX #$10\r\n$9A39> 20 76C5: JSR FindFreeObject\r\n$9A3C>
    20 E2F7: JSR CreateGutsblockPieces\r\n$9A3F> A4 0C:   LDY $0C         \r\n$9A41>
    C8:      INY             \r\n$9A42> C0 04:   CPY #$04        \r\n$9A44> D0 EF:  
    BNE -                                               ; $9A35\r\n\r\n$9A46> 4C
    8A99: JMP NextObject                                      ; $998A\r\n\r\nSprite36ShouldBeDestroyed\r\n$9A49>
    A5 53:   LDA ObjectReceivedHitType         \r\n$9A4B> C9 05:   CMP #$05       
    \r\n$9A4D> D0 03:   BNE $9A52               \r\n$9A4F> 4C F199: JMP $99F1      
    \r\n$9A52> A6 2F:   LDX RefObjectNumber         \r\n$9A54> FE 0004: INC ObjectSpriteNum,X    
    \r\n$9A57> BD 2004: LDA ObjectFlags,X     \r\n$9A5A> 29 F7:   AND #$f7       
    \r\n$9A5C> 9D 2004: STA ObjectFlags,X     \r\n$9A5F> 20 3DC5: JSR C53D_routine      
    \r\n\r\n$9A62> A9 2D:   LDA #$2d        ; Low-pitch noise (fire?...)\r\n$9A64>
    20 77C4: JSR IssueSound                                      ; $C477\r\n\r\n$9A67>
    4C 8A99: JMP NextObject                                      ; $998A\r\n\r\n\r\n;
    Decrease BossVariable44 and disable object if BossCurrentStrategy >= #5\r\nSprite27ShouldBeDestroyed\r\n$9A6A>
    C6 44:   DEC BossVariable44\r\n$9A6C> A5 3E:   LDA BossCurrentStrategy\r\n$9A6E>
    C9 05:   CMP #$05        \r\n$9A70> B0 08:   BCS +                                              
    ; $9A7A               \r\n$9A72> A9 F8:   LDA #$f8        \r\n$9A74> 9D 0006:
    STA ObjectPosY,X     \r\n$9A77> 4C 8A99: JMP NextObject                                     
    ; $998A       \r\n+\r\n$9A7A> A9 0B:   LDA #$0b\r\n$9A7C> 85 0C:   STA $0C        
    \r\n$9A7E> A9 39:   LDA #$39        \r\n$9A80> 85 0D:   STA $0D         \r\n$9A82>
    A9 0A:   LDA #$0a        \r\n$9A84> 85 0E:   STA $0E         \r\n$9A86> 20 53F8:
    JSR $F853       \r\n$9A89> A2 10:   LDX #$10        \r\n$9A8B> 20 76C5: JSR FindFreeObject      
    \r\n$9A8E> A4 2F:   LDY RefObjectNumber         \r\n$9A90> 20 41F8: JSR CreateExplosionObject      
    \r\n$9A93> 10 F4:   BPL $9A89               \r\n\r\n$9A95> A9 12:   LDA #$12       
    ; Explosion\r\n$9A97> 20 77C4: JSR IssueSound                                     
    ; $C477       \r\n\r\n$9A9A> 4C 8A99: JMP NextObject                                     
    ; $998A\r\n\r\nSprite4Cto53ShouldBeDestroyed:\r\n\r\n$9A9D> A5 53:   LDA ObjectReceivedHitType\r\n$9A9F>
    C9 05:   CMP #$05        \r\n$9AA1> D0 03:   BNE +                                              
    ; $9AA6               \r\n$9AA3> 4C F199: JMP $99F1       \r\n+\r\n$9AA6> C9
    00:   CMP #$00\r\n$9AA8> D0 40:   BNE +\r\n$9AAA> BD 0004: LDA ObjectSpriteNum,X    
    \r\n$9AAD> 38:      SEC             \r\n+\r\n$9AAE> E9 4C:   SBC #$4c       
    \r\n$9AB0> A8:      TAY             \r\n$9AB1> BD 2004: LDA ObjectFlags,X    
    \r\n$9AB4> 29 40:   AND #$40        \r\n$9AB6> F0 13:   BEQ +\r\n$9AB8> 18:     
    CLC             \r\n$9AB9> BD A004: LDA ObjectPosXfraction,X     \r\n$9ABC> 69
    50:   ADC #$50        \r\n$9ABE> 9D A004: STA ObjectPosXfraction,X     \r\n$9AC1>
    BD 8004: LDA ObjectPosX,X     \r\n$9AC4> 79 F49A: ADC Table9AF4,Y     \r\n$9AC7>
    B0 21:   BCS +++\r\n$9AC9> 90 09:   BCC ++\r\n+\r\n$9ACB> 38:      SEC            
    \r\n$9ACC> BD 8004: LDA ObjectPosX,X     \r\n$9ACF> F9 F49A: SBC Table9AF4,Y    
    \r\n$9AD2> 90 16:   BCC +++\r\n++\r\n$9AD4> 9D 8004: STA ObjectPosX,X     \r\n$9AD7>
    18:      CLC             \r\n$9AD8> BD 0006: LDA ObjectPosY,X     \r\n$9ADB>
    79 FC9A: ADC Table9AFC,Y     \r\n$9ADE> 9D 0006: STA ObjectPosY,X     \r\n$9AE1>
    B9 049B: LDA Table9B04,Y     \r\n$9AE4> 9D 0004: STA ObjectSpriteNum,X     \r\n$9AE7>
    4C 8A99: JMP NextObject                                      ; $998A       \r\n+++\r\n;
    BossVariable44--, disable Object\r\n$9AEA> C6 44:   DEC BossVariable44\r\n$9AEC>
    A9 F8:   LDA #$f8        \r\n$9AEE> 9D 0006: STA ObjectPosY,X     \r\n$9AF1>
    4C 8A99: JMP NextObject                                      ; $998A       \r\n\r\nTable9AF4:\r\n   
    .byt $1D,$21,$21,$1D,$19,$1D,$1D,$1D ;X increment/decrement\r\nTable9AFC:\r\n   
    .byt $FC,$E8,$00,$1C,$10,$F4,$FC,$FC ;Y increment\r\nTable9B04:\r\n    .byt $51,$52,$53,$4D,$4E,$4F,$50,$51
    ;new spritenum\r\n\r\nSprite39ShouldBeDestroyed\r\n$9B0C> A5 53:   LDA ObjectReceivedHitType        
    \r\n$9B0E> D0 DC:   BNE $9AEC               \r\n$9B10> A9 54:   LDA #$54       
    \r\n$9B12> 9D 0004: STA ObjectSpriteNum,X     \r\n$9B15> 4C 8A99: JMP $998A      
    \r\n\r\nSprite5AShouldBeDestroyed\r\n$9B18> 4C FC99: JMP $99FC       \r\n\r\nSprite6CShouldBeDestroyed\r\n$9B1B>
    BD 2004: LDA ObjectFlags,X     \r\n$9B1E> 29 20:   AND #$20        \r\n$9B20>
    D0 42:   BNE $9B64               \r\n$9B22> A5 53:   LDA ObjectReceivedHitType        
    \r\n$9B24> C9 04:   CMP #$04        \r\n$9B26> D0 1F:   BNE $9B47              
    \r\n$9B28> A5 2B:   LDA $2B         \r\n$9B2A> C9 FF:   CMP #$ff        \r\n$9B2C>
    D0 1D:   BNE $9B4B               \r\n$9B2E> BD 8006: LDA ObjectYSpeed,X     \r\n$9B31>
    30 2C:   BMI $9B5F               \r\n$9B33> 38:      SEC             \r\n$9B34>
    BD 6006: LDA ObjectYSpeedFraction,X     \r\n$9B37> E9 40:   SBC #$40        \r\n$9B39>
    9D 6006: STA ObjectYSpeedFraction,X     \r\n$9B3C> BD 8006: LDA ObjectYSpeed,X    
    \r\n$9B3F> E9 00:   SBC #$00        \r\n$9B41> 9D 8006: STA ObjectYSpeed,X    
    \r\n$9B44> 4C 8A99: JMP $998A       \r\n$9B47> C9 03:   CMP #$03        \r\n$9B49>
    D0 14:   BNE $9B5F               \r\n$9B4B> BD 0006: LDA ObjectPosY,X     \r\n$9B4E>
    C9 E0:   CMP #$e0        \r\n$9B50> 90 07:   BCC $9B59               \r\n$9B52>
    A9 04:   LDA #$04        \r\n$9B54> 9D 0006: STA ObjectPosY,X     \r\n$9B57>
    D0 DA:   BNE $9B33               \r\n$9B59> 20 35A3: JSR $A335       \r\n$9B5C>
    4C 8A99: JMP $998A       \r\n\r\n$9B5F> A9 F8:   LDA #$f8\r\n$9B61> 9D 0006:
    STA ObjectPosY,X     \r\n$9B64> 4C 8A99: JMP $998A       \r\n\r\nSprite5DShouldBeDestroyed\r\n$9B67>
    A5 53:   LDA ObjectReceivedHitType         \r\n$9B69> C9 04:   CMP #$04       
    \r\n$9B6B> D0 13:   BNE $9B80               \r\n$9B6D> A5 2B:   LDA $2B        
    \r\n$9B6F> C9 FF:   CMP #$ff        \r\n$9B71> D0 22:   BNE $9B95              
    \r\n$9B73> BD 8006: LDA ObjectYSpeed,X     \r\n$9B76> 30 44:   BMI $9BBC              
    \r\n$9B78> A9 04:   LDA #$04        \r\n$9B7A> 9D 0006: STA ObjectPosY,X    
    \r\n$9B7D> 4C 339B: JMP $9B33       \r\n$9B80> C9 03:   CMP #$03        \r\n$9B82>
    D0 38:   BNE $9BBC               \r\n$9B84> BD 0006: LDA ObjectPosY,X     \r\n$9B87>
    C9 F0:   CMP #$f0        \r\n$9B89> 90 07:   BCC $9B92               \r\n$9B8B>
    A9 04:   LDA #$04        \r\n$9B8D> 9D 0006: STA ObjectPosY,X     \r\n$9B90>
    D0 EB:   BNE $9B7D               \r\n$9B92> 4C 6699: JMP $9966       \r\n$9B95>
    BD 8006: LDA ObjectYSpeed,X     \r\n$9B98> 30 0D:   BMI $9BA7               \r\n$9B9A>
    A9 FF:   LDA #$ff        \r\n$9B9C> 9D 8006: STA ObjectYSpeed,X     \r\n$9B9F>
    A9 40:   LDA #$40        \r\n$9BA1> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$9BA4>
    4C 8A99: JMP $998A       \r\n$9BA7> A5 62:   LDA $62         \r\n$9BA9> F0 02:  
    BEQ $9BAD               \r\n$9BAB> C6 62:   DEC $62         \r\n$9BAD> 9D 8006:
    STA ObjectYSpeed,X     \r\n$9BB0> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$9BB3>
    5E C004: LSR ObjectXSpeed,X     \r\n$9BB6> 7E E004: ROR ObjectXSpeedFraction,X    
    \r\n$9BB9> 4C 8A99: JMP $998A       \r\n$9BBC> A9 F8:   LDA #$f8        \r\n$9BBE>
    9D 0006: STA ObjectPosY,X     \r\n$9BC1> 4C 8A99: JMP $998A       \r\n\r\n\r\nObjectDoCollisionChecksAndAvoidWalls\r\n$9BC4>
    A6 2F:   LDX RefObjectNumber         \r\n$9BC6> 20 A19C: JSR ObjectCheckIfOutScreenVertically      
    \r\n$9BC9> 90 12:   BCC ++\r\n$9BCB> A6 2F:   LDX RefObjectNumber         \r\n$9BCD>
    D0 09:   BNE + \r\n; Megaman is falling out of screen.\r\n$9BCF> AD 2004: LDA
    ObjectFlags+0        \r\n$9BD2> 29 10:   AND #$10         ;Is Megaman climbing?\r\n$9BD4>
    F0 12:   BEQ +++\r\n$9BD6> 18:      CLC              ;If climbing, he's safe.\r\n$9BD7>
    60:      RTS             \r\n+\r\n$9BD8> A9 FF:   LDA #$ff\r\n$9BDA> 85 2B:  
    STA $2B         \r\n$9BDC> 60:      RTS             \r\n++\r\n$9BDD> E0 00:  
    CPX #$00\r\n$9BDF> F0 07:   BEQ +++\r\n$9BE1> BD 2004: LDA ObjectFlags,X    
    \r\n$9BE4> 29 01:   AND #$01        \r\n$9BE6> F0 71:   BEQ ++++\r\n+++\r\n$9BE8>
    BC 0004: LDY ObjectSpriteNum,X     \r\n$9BEB> C0 FF:   CPY #$ff        \r\n$9BED>
    D0 08:   BNE +\r\n$9BEF> BC E006: LDY ObjectType,X     \r\n$9BF2> B9 3AFC: LDA
    TableObjectYHeightTable1,Y     \r\n$9BF5> D0 03:   BNE ++\r\n+\r\n$9BF7> B9 B7FB:
    LDA TableObjectYHeightTable2,Y     \r\n++\r\n$9BFA> 85 10:   STA $10        
    \r\n$9BFC> BD 8006: LDA ObjectYSpeed,X     \r\n$9BFF> 30 30:   BMI +\r\n$9C01>
    A5 10:   LDA $10         \r\n$9C03> 49 FF:   EOR #$ff        \r\n$9C05> 18:     
    CLC             \r\n$9C06> 69 01:   ADC #$01        \r\n$9C08> 20 8E9C: JSR ObjectCollisionCheckHelper      
    \r\n$9C0B> F0 4C:   BEQ ++++\r\n$9C0D> A6 2F:   LDX RefObjectNumber         \r\n$9C0F>
    C9 20:   CMP #$20        \r\n$9C11> F0 3A:   BEQ ++\r\n$9C13> A5 03:   LDA $03        
    \r\n$9C15> 29 F0:   AND #$f0        \r\n$9C17> 18:      CLC             \r\n$9C18>
    69 10:   ADC #$10        \r\n$9C1A> 18:      CLC             \r\n$9C1B> 65 10:  
    ADC $10         \r\n$9C1D> 9D 0006: STA ObjectPosY,X     \r\n$9C20> A9 00:  
    LDA #$00        \r\n$9C22> 9D 2006: STA ObjectPosYfraction,X     \r\n$9C25> A9
    FF:   LDA #$ff        \r\n$9C27> 9D 8006: STA ObjectYSpeed,X     \r\n$9C2A> A9
    40:   LDA #$40        \r\n$9C2C> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$9C2F>
    D0 1C:   BNE ++\r\n+\r\n$9C31> A5 10:   LDA $10         \r\n$9C33> 20 8E9C: JSR
    ObjectCollisionCheckHelper       \r\n$9C36> F0 21:   BEQ ++++\r\n$9C38> A6 2F:  
    LDX RefObjectNumber         \r\n$9C3A> C9 20:   CMP #$20        \r\n$9C3C> F0
    0F:   BEQ ++\r\n$9C3E> A5 03:   LDA $03         \r\n$9C40> 29 F0:   AND #$f0       
    \r\n$9C42> 38:      SEC             \r\n$9C43> E5 10:   SBC $10         \r\n$9C45>
    9D 0006: STA ObjectPosY,X     \r\n$9C48> A9 00:   LDA #$00        \r\n$9C4A>
    9D 2006: STA ObjectPosYfraction,X     \r\n++\r\n$9C4D> A9 FF:   LDA #$ff       
    \r\n$9C4F> 9D 8006: STA ObjectYSpeed,X     \r\n$9C52> A9 40:   LDA #$40       
    \r\n$9C54> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$9C57> 38:      SEC            
    \r\n$9C58> 60:      RTS             \r\n++++\r\n$9C59> 38:      SEC            
    \r\n$9C5A> A6 2F:   LDX RefObjectNumber         \r\n$9C5C> F0 07:   BEQ +\r\n$9C5E>
    BD 2004: LDA ObjectFlags,X     \r\n$9C61> 29 10:   AND #$10        \r\n$9C63>
    F0 1D:   BEQ ++\r\n+\r\n$9C65> BD 6006: LDA ObjectYSpeedFraction,X     \r\n$9C68>
    E9 40:   SBC #$40        \r\n$9C6A> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$9C6D>
    BD 8006: LDA ObjectYSpeed,X     \r\n$9C70> E9 00:   SBC #$00        \r\n$9C72>
    10 0B:   BPL +\r\n$9C74> C9 F4:   CMP #$f4        \r\n$9C76> B0 07:   BCS +\r\n$9C78>
    A9 00:   LDA #$00        \r\n$9C7A> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$9C7D>
    A9 F4:   LDA #$f4        \r\n+\r\n$9C7F> 9D 8006: STA ObjectYSpeed,X     \r\n++\r\n$9C82>
    A5 25:   LDA $25         \r\n$9C84> 9D 0006: STA ObjectPosY,X     \r\n$9C87>
    A5 24:   LDA $24         \r\n$9C89> 9D 2006: STA ObjectPosYfraction,X     \r\n$9C8C>
    18:      CLC             \r\n$9C8D> 60:      RTS             \r\n\r\nObjectCollisionCheckHelper\r\n$9C8E>
    18:      CLC\r\n$9C8F> 65 25:   ADC $25         \r\n$9C91> 85 03:   STA $03        
    \r\n$9C93> BD 6004: LDA ObjectPosScreen,X     \r\n$9C96> 85 01:   STA $01        
    \r\n$9C98> BD 8004: LDA ObjectPosX,X     \r\n$9C9B> 85 00:   STA $00        
    \r\n$9C9D> 20 2DCC: JSR DoCollisionCheckFor       \r\n$9CA0> 60:      RTS            
    \r\n\r\nObjectCheckIfOutScreenVertically\r\n$9CA1> 38:      SEC             \r\n$9CA2>
    BD 2006: LDA ObjectPosYfraction,X     \r\n$9CA5> FD 6006: SBC ObjectYSpeedFraction,X    
    \r\n$9CA8> 85 24:   STA $24         \r\n$9CAA> BD 0006: LDA ObjectPosY,X    
    \r\n$9CAD> FD 8006: SBC ObjectYSpeed,X     \r\n$9CB0> 85 25:   STA $25        
    \r\n$9CB2> C9 E8:   CMP #$E8        \r\n$9CB4> 90 08:   BCC +       \r\n; Y >=
    #$E8\r\n$9CB6> C9 F8:   CMP #$F8        \r\n$9CB8> B0 0A:   BCS ++\r\n; Y >=
    #$E8 but <= #$F8\r\n$9CBA> A9 03:   LDA #$03        \r\n$9CBC> D0 1F:   BNE +++\r\n;
    Y < #$E8\r\n+\r\n$9CBE> C9 04:   CMP #$04        \r\n$9CC0> 90 19:   BCC +                                              
    ; $9CDB               \r\n; Y >= #$04 and < #$E8\r\n$9CC2> B0 21:   BCS ++++\r\n++\r\n;
    Y >= #$F8\r\n$9CC4> C9 FC:   CMP #$FC        \r\n$9CC6> B0 1D:   BCS ++++\r\n;
    Y >= #$F8 but < #$FC\r\n$9CC8> E0 00:   CPX #$00        \r\n$9CCA> D0 0F:   BNE
    +                                               ; $9CDB               \r\n; but
    it's Megaman\r\n$9CCC> AD 8006: LDA ObjectYSpeed+0\r\n$9CCF> 30 0A:   BMI +                                              
    ; $9CDB               \r\n$9CD1> AD 2006: LDA ObjectPosYfraction+0       \r\n$9CD4>
    85 24:   STA $24         \r\n$9CD6> AD 0006: LDA ObjectPosY+0      \r\n$9CD9>
    85 25:   STA $25         \r\n$9CDB> A9 01:   LDA #$01\r\n+++\r\n$9CDD> E0 00:  
    CPX #$00        \r\n$9CDF> D0 02:   BNE +                                              
    ; $9CE3\r\n$9CE1> 85 26:   STA CurrentStripeEndType         \r\n+\r\n$9CE3> 38:     
    SEC\r\n$9CE4> 60:      RTS             \r\n++++\r\n$9CE5> 18:      CLC\r\n$9CE6>
    60:      RTS             \r\n\r\n\r\n$9CE7> A0 00:   LDY #$00 \r\n$9CE9> AD 0004:
    LDA ObjectSpriteNum+0       \r\n$9CEC> A2 08:   LDX #$08        \r\n-\r\n$9CEE>
    DD DD9D: CMP Table9DDD,X\r\n$9CF1> F0 0D:   BEQ +                                              
    ; $9D00\r\n$9CF3> CA:      DEX             \r\n$9CF4> 10 F8:   BPL -                                              
    ; $9CEE               \r\n$9CF6> A5 14:   LDA JoyPad0        \r\n$9CF8> 29 C0:  
    AND #$c0        \r\n$9CFA> F0 07:   BEQ ++                                             
    ; $9D03               \r\n$9CFC> A0 07:   LDY #$07        \r\n$9CFE> D0 03:  
    BNE ++                                              ; $9D03               \r\n+\r\n$9D00>
    BC E69D: LDY Table9DE6,X\r\n++\r\n$9D03> A2 00:   LDX #$00\r\n$9D05> 20 5DC5:
    JSR $C55D       \r\n$9D08> A5 96:   LDA $96         \r\n$9D0A> D0 08:   BNE $9D14              
    \r\n$9D0C> A5 98:   LDA $98         \r\n$9D0E> 05 99:   ORA $99         \r\n$9D10>
    F0 60:   BEQ $9D72               \r\n$9D12> D0 14:   BNE $9D28              
    \r\n$9D14> A5 14:   LDA JoyPad0        \r\n$9D16> 29 C0:   AND #$c0        \r\n$9D18>
    F0 0E:   BEQ $9D28               \r\n$9D1A> 29 80:   AND #$80        \r\n$9D1C>
    F0 06:   BEQ $9D24               \r\n$9D1E> A5 97:   LDA $97         \r\n$9D20>
    D0 39:   BNE $9D5B               \r\n$9D22> F0 04:   BEQ $9D28              
    \r\n$9D24> A5 97:   LDA $97         \r\n$9D26> F0 33:   BEQ $9D5B              
    \r\n\r\n\r\n\r\n$9D28> A2 00:   LDX #$00\r\n$9D2A> AD 0004: LDA ObjectSpriteNum+0      
    \r\n$9D2D> C9 09:   CMP #$09        \r\n$9D2F> D0 02:   BNE $9D33              
    \r\n$9D31> A2 02:   LDX #$02        \r\n$9D33> 38:      SEC             \r\n$9D34>
    A5 98:   LDA $98         \r\n$9D36> FD D99D: SBC Table9DD9+0,X     \r\n$9D39>
    85 98:   STA $98         \r\n$9D3B> A5 99:   LDA $99         \r\n$9D3D> FD DA9D:
    SBC Table9DD9+1,X     \r\n$9D40> 85 99:   STA $99         \r\n$9D42> A2 00:  
    LDX #$00        \r\n$9D44> B0 08:   BCS $9D4E               \r\n$9D46> A9 00:  
    LDA #$00        \r\n$9D48> 85 98:   STA $98         \r\n$9D4A> 85 99:   STA $99        
    \r\n$9D4C> F0 24:   BEQ $9D72               \r\n\r\n\r\n$9D4E> A5 99:   LDA $99\r\n$9D50>
    8D C004: STA ObjectXSpeed+0       \r\n$9D53> A5 98:   LDA $98         \r\n$9D55>
    8D E004: STA ObjectXSpeedFraction+0       \r\n$9D58> 4C 799D: JMP $9D79      
    \r\n\r\n\r\n\r\n$9D5B> 38:      SEC\r\n$9D5C> AD E004: LDA ObjectXSpeedFraction+0      
    \r\n$9D5F> E5 98:   SBC $98         \r\n$9D61> AD C004: LDA ObjectXSpeed+0      
    \r\n$9D64> E5 99:   SBC $99         \r\n$9D66> 90 C0:   BCC $9D28              
    \r\n$9D68> AD C004: LDA ObjectXSpeed+0       \r\n$9D6B> 85 99:   STA $99        
    \r\n$9D6D> AD E004: LDA ObjectXSpeedFraction+0       \r\n$9D70> 85 98:   STA
    $98         \r\n\r\n$9D72> AD 2004: LDA ObjectFlags+0\r\n$9D75> 29 40:   AND
    #$40        \r\n$9D77> 85 97:   STA $97         \r\n\r\n\r\n\r\n$9D79> A5 9E:  
    LDA LiftUnknown9E\r\n$9D7B> 10 57:   BPL $9DD4               \r\n$9D7D> 29 7F:  
    AND #$7f        \r\n$9D7F> 85 9B:   STA LiftUnknown9B         \r\n\r\n$9D81>
    AD 2004: LDA ObjectFlags+0\r\n$9D84> 29 40:   AND #$40        \r\n$9D86> C5 9B:  
    CMP LiftUnknown9B         \r\n$9D88> F0 34:   BEQ $9DBE               \r\n$9D8A>
    38:      SEC             \r\n$9D8B> AD E004: LDA ObjectXSpeedFraction+0      
    \r\n$9D8E> E5 9C:   SBC LiftXSpeedFraction         \r\n$9D90> 8D E004: STA ObjectXSpeedFraction+0      
    \r\n$9D93> AD C004: LDA ObjectXSpeed+0       \r\n$9D96> E5 9D:   SBC LiftXSpeed        
    \r\n$9D98> 8D C004: STA ObjectXSpeed+0       \r\n$9D9B> B0 17:   BCS $9DB4              
    \r\n$9D9D> AD E004: LDA ObjectXSpeedFraction+0       \r\n$9DA0> 49 FF:   EOR
    #$ff        \r\n$9DA2> 69 01:   ADC #$01        \r\n$9DA4> 8D E004: STA ObjectXSpeedFraction+0      
    \r\n$9DA7> AD C004: LDA ObjectXSpeed+0       \r\n$9DAA> 49 FF:   EOR #$ff       
    \r\n$9DAC> 69 00:   ADC #$00        \r\n$9DAE> 8D C004: STA ObjectXSpeed+0      
    \r\n$9DB1> 4C CF9D: JMP $9DCF       \r\n$9DB4> BD 2004: LDA ObjectFlags,X    
    \r\n$9DB7> 29 40:   AND #$40        \r\n$9DB9> 85 9B:   STA LiftUnknown9B        
    \r\n$9DBB> 4C CF9D: JMP $9DCF       \r\n\r\n\r\n$9DBE> 18:      CLC\r\n$9DBF>
    AD E004: LDA ObjectXSpeedFraction+0       \r\n$9DC2> 65 9C:   ADC LiftXSpeedFraction        
    \r\n$9DC4> 8D E004: STA ObjectXSpeedFraction+0       \r\n$9DC7> AD C004: LDA
    ObjectXSpeed+0       \r\n$9DCA> 65 9D:   ADC LiftXSpeed         \r\n$9DCC> 8D
    C004: STA ObjectXSpeed+0       \r\n\r\n\r\n$9DCF> A9 00:   LDA #$00\r\n$9DD1>
    85 9E:   STA LiftUnknown9E         \r\n$9DD3> 60:      RTS             \r\n\r\n$9DD4>
    A5 97:   LDA $97\r\n$9DD6> 85 9B:   STA LiftUnknown9B         \r\n$9DD8> 60:     
    RTS             \r\n\r\nTable9DD9:\r\n    .byte $04,$00\r\n    .byte $80,$00\r\n\r\nTable9DDD:\r\n   
    .byte $00,$03,$06,$0C,$0F,$12,$13,$14,$6E\r\nTable9DE6:\r\n    .byte $00,$01,$08,$03,$00,$09,$01,$00,$00\r\n\r\nObjectUpdateMovementRight\r\n;\r\n;
    Output (these variables will go to AutoCenterScreen):\r\n;   $20 = New ObjectPosScreen\r\n;  
    $21 = New ObjectPosXfraction\r\n;   $22 = New ObjectPosX\r\n;   \r\n$9DEF> A6
    2F:   LDX RefObjectNumber\r\n\r\nObjectMoveToTheRight\r\n$9DF1> 18:      CLC            
    \r\n$9DF2> BD A004: LDA ObjectPosXfraction,X     \r\n$9DF5> 7D E004: ADC ObjectXSpeedFraction,X    
    \r\n$9DF8> 85 21:   STA $21         \r\n\r\n$9DFA> BD 8004: LDA ObjectPosX,X\r\n$9DFD>
    7D C004: ADC ObjectXSpeed,X     \r\n$9E00> A8:      TAY             \r\n\r\n$9E01>
    BD 6004: LDA ObjectPosScreen,X\r\n$9E04> 69 00:   ADC #$00        \r\n\r\n$9E06>
    A6 2F:   LDX RefObjectNumber ;Is it Megaman?\r\n$9E08> F0 0C:   BEQ ++  \r\n$9E0A>
    85 20:   STA $20         \r\n$9E0C> 84 22:   STY $22         \r\n$9E0E> BD 2004:
    LDA ObjectFlags,X     \r\n$9E11> 29 01:   AND #$01         ; Collides with background?\r\n$9E13>
    D0 1B:   BNE ++++\r\n$9E15> 60:      RTS             \r\n; If it's Megaman\r\n++\r\n$9E16>
    C5 28:   CMP CurrentEndScreen\r\n$9E18> F0 04:   BEQ +                                              
    ; $9E1E               \r\n$9E1A> B0 06:   BCS ++                                             
    ; $9E22               \r\n$9E1C> D0 0E:   BNE +++                                            
    ; $9E2C               \r\n+\r\n$9E1E> C0 EF:   CPY #$EF\r\n$9E20> 90 0A:   BCC
    +++                                             ; $9E2C               \r\n++\r\n$9E22>
    A5 28:   LDA CurrentEndScreen\r\n$9E24> A0 EF:   LDY #$EF        \r\n$9E26> A2
    02:   LDX #$02        \r\n$9E28> 86 26:   STX CurrentStripeEndType         \r\n$9E2A>
    A2 00:   LDX #$00        \r\n+++\r\n$9E2C> 85 20:   STA $20\r\n$9E2E> 84 22:  
    STY $22         \r\n++++\r\n; Do background collision checks\r\n$9E30> BC 0004:
    LDY ObjectSpriteNum,X\r\n$9E33> C0 FF:   CPY #$FF        \r\n$9E35> D0 08:  
    BNE +\r\n$9E37> BC E006: LDY ObjectType,X     \r\n$9E3A> B9 6CFB: LDA TableObjectXWidthTable1,Y    
    \r\n$9E3D> D0 03:   BNE ++\r\n+\r\n$9E3F> B9 E9FA: LDA TableObjectXWidthTable2,Y    
    \r\n++\r\n$9E42> 85 10:   STA $10         \r\n$9E44> 18:      CLC            
    \r\n$9E45> A5 22:   LDA $22         \r\n$9E47> 65 10:   ADC $10         \r\n$9E49>
    85 00:   STA $00         \r\n$9E4B> A5 20:   LDA $20         \r\n$9E4D> 69 00:  
    ADC #$00        \r\n$9E4F> 85 01:   STA $01         \r\n$9E51> BD 0006: LDA ObjectPosY,X    
    \r\n$9E54> 85 03:   STA $03         \r\n$9E56> 20 6FCB: JSR ObjectVerifyBackgroundCollision      
    \r\n$9E59> F0 11:   BEQ +\r\n$9E5B> A5 00:    LDA $00         \r\n$9E5D> 29 F0:   
    AND #$f0        \r\n$9E5F> A6 2F:    LDX RefObjectNumber         \r\n$9E61> 38:      
    SEC             \r\n$9E62> E5 10:    SBC $10         \r\n$9E64> 85 22:    STA
    $22         \r\n$9E66> A5 01:    LDA $01         \r\n$9E68> E9 00:    SBC #$00       
    \r\n$9E6A> 85 20:    STA $20         \r\n+\r\n$9E6C> 60:      RTS            
    \r\n\r\n\r\n\r\nObjectUpdateMovementLeft\r\n;\r\n; Output (these variables will
    go to ObjectRelocateHorizontally (and possibly to AutoCenterScreen)):\r\n;  
    $20 = New ObjectPosScreen\r\n;   $21 = New ObjectPosXfraction\r\n;   $22 = New
    ObjectPosX\r\n;   \r\n$9E6D> A6 2F:   LDX RefObjectNumber\r\n\r\nObjectMoveToTheLeft\r\n$9E6F>
    38:      SEC\r\n$9E70> BD A004: LDA ObjectPosXfraction,X     \r\n$9E73> FD E004:
    SBC ObjectXSpeedFraction,X     \r\n$9E76> 85 21:   STA $21         \r\n\r\n$9E78>
    BD 8004: LDA ObjectPosX,X\r\n$9E7B> FD C004: SBC ObjectXSpeed,X     \r\n$9E7E>
    A8:      TAY             \r\n$9E7F> BD 6004: LDA ObjectPosScreen,X     \r\n$9E82>
    E9 00:   SBC #$00        \r\n\r\n$9E84> A6 2F:   LDX RefObjectNumber ;Is it Megaman?\r\n$9E86>
    F0 0C:   BEQ +\r\n$9E88> 85 20:   STA $20         \r\n$9E8A> 84 22:   STY $22        
    \r\n$9E8C> BD 2004: LDA ObjectFlags,X     \r\n$9E8F> 29 01:   AND #$01           
    ;Does it collide with background?\r\n$9E91> D0 1D:   BNE ++++\r\n$9E93> 60:     
    RTS             \r\n+ ;was Megaman\r\n$9E94> C5 27:   CMP CurrentBeginScreen\r\n$9E96>
    30 0A:   BMI ++\r\n$9E98> F0 04:   BEQ +\r\n$9E9A> 90 06:   BCC ++\r\n$9E9C>
    D0 0E:   BNE +++\r\n+\r\n$9E9E> C0 10:   CPY #$10        \r\n$9EA0> B0 0A:  
    BCS +++\r\n++\r\n$9EA2> A5 27:   LDA CurrentBeginScreen         \r\n$9EA4> A0
    10:   LDY #$10        \r\n$9EA6> A2 04:   LDX #$04        \r\n$9EA8> 86 26:  
    STX CurrentStripeEndType         \r\n$9EAA> A2 00:   LDX #$00        \r\n+++\r\n$9EAC>
    85 20:   STA $20         \r\n$9EAE> 84 22:   STY $22         \r\n++++;Do background
    collisions\r\n$9EB0> BC 0004: LDY ObjectSpriteNum,X     \r\n$9EB3> C0 FF:   CPY
    #$ff        \r\n$9EB5> D0 08:   BNE +\r\n$9EB7> BC E006: LDY ObjectType,X    
    \r\n$9EBA> B9 6CFB: LDA TableObjectXWidthTable1,Y     \r\n$9EBD> D0 03:   BNE
    ++\r\n+\r\n$9EBF> B9 E9FA: LDA TableObjectXWidthTable2,Y     \r\n++\r\n$9EC2>
    85 10:   STA $10         \r\n$9EC4> 38:      SEC             \r\n$9EC5> A5 22:  
    LDA $22         \r\n$9EC7> E5 10:   SBC $10         \r\n$9EC9> 85 00:   STA $00        
    \r\n$9ECB> A5 20:   LDA $20         \r\n$9ECD> E9 00:   SBC #$00        \r\n$9ECF>
    85 01:   STA $01         \r\n$9ED1> BD 0006: LDA ObjectPosY,X     \r\n$9ED4>
    85 03:   STA $03         \r\n$9ED6> 20 6FCB: JSR ObjectVerifyBackgroundCollision      
    \r\n$9ED9> F0 1B:   BEQ +\r\n$9EDB> 18:       CLC             \r\n$9EDC> A6 2F:   
    LDX RefObjectNumber         \r\n$9EDE> BC 0004:  LDY ObjectSpriteNum,X     \r\n$9EE1>
    A5 10:    LDA $10         \r\n$9EE3> 69 10:    ADC #$10        \r\n$9EE5> 85
    0F:    STA $0F         \r\n$9EE7> A5 00:    LDA $00         \r\n$9EE9> 29 F0:   
    AND #$f0        \r\n$9EEB> 18:       CLC             \r\n$9EEC> 65 0F:    ADC
    $0F         \r\n$9EEE> 85 22:    STA $22         \r\n$9EF0> A5 01:    LDA $01        
    \r\n$9EF2> 69 00:    ADC #$00        \r\n$9EF4> 85 20:    STA $20         \r\n+\r\n$9EF6>
    60:      RTS             \r\n\r\n\r\nSecondDoorLocations ;at 9EF7\r\n    .byte
    $16,$16,$FF,$12,$FF,$11\r\n    .byte $FF,$FF,$FF,$22,$20\r\nFirstDoorLocations
    ;at 9F02\r\n    .byte $13,$13,$13,$0F,$13,$0E\r\n    .byte $FF,$FF,$FF,$FF,$FF\r\n\r\nAfterDoorsPalette:
    ; At 9F0D\r\n    ;Stage 0\r\n    .byte $0F,$30,$2B,$06,$0F,$30,$2B,$2C\r\n   
    .byte $0F,$20,$10,$00,$0F,$20,$10,$2C\r\n    ;Stage 1\r\n    .byte $0F,$20,$21,$11,$0F,$20,$3C,$2C\r\n   
    .byte $0F,$20,$21,$2C,$0F,$20,$09,$1C\r\n    ;Stage 2\r\n    .byte $0F,$20,$10,$11,$0F,$20,$10,$21\r\n   
    .byte $0F,$29,$19,$07,$0F,$27,$06,$21\r\n    ;Stage 3\r\n    .byte $0F,$30,$10,$06,$0F,$1B,$0B,$00\r\n   
    .byte $0F,$27,$16,$06,$0F,$26,$16,$06\r\n    ;Stage 4\r\n    .byte $0F,$20,$27,$17,$0F,$20,$27,$21\r\n   
    .byte $0F,$0F,$0F,$0C,$0F,$28,$29,$18\r\n    ;Stage 5\r\n    .byte $0F,$26,$17,$07,$0F,$30,$10,$02\r\n   
    .byte $0F,$26,$17,$02,$0F,$37,$27,$17\r\n\r\nFunction9F6D ;called only from 98CB\r\n$9F6D>
    A9 41:   LDA #$41\r\n$9F6F> 85 8D:   STA ScreenMovedFlag         \r\n\r\n; Render
    nothing to nametable\r\n$9F71> A2 00:   LDX #$00\r\n$9F73> 86 1C:   STX TSAPPUtransferSize        
    \r\n$9F75> 86 0D:   STX $0D\r\n\r\n$9F77> AE 6004: LDX ObjectPosScreen+0                            
    ; $0460\r\n$9F7A> E8:      INX             \r\n$9F7B> 86 05:   STX $05        
    \r\n$9F7D> AD 8004: LDA ObjectPosX+0       \r\n$9F80> 85 04:   STA $04        
    \r\n-\r\n$9F82> A5 05:   LDA $05\r\n$9F84> C5 28:   CMP CurrentEndScreen        
    \r\n$9F86> F0 02:   BEQ +                                               ; $9F8A              
    \r\n$9F88> B0 13:   BCS ++                                              ; $9F9D\r\n+\r\n$9F8A>
    A5 04:   LDA $04\r\n$9F8C> 29 03:   AND #$03        \r\n$9F8E> D0 03:   BNE +                                              
    ; $9F93               \r\n$9F90> 20 E8CD: JSR DrawBlockFromActiveLevelMap      
    \r\n+\r\n$9F93> E6 04:   INC $04\r\n$9F95> D0 02:   BNE +                                              
    ; $9F99               \r\n$9F97> E6 05:   INC $05         \r\n+\r\n$9F99> C6
    0C:   DEC $0C\r\n$9F9B> D0 E5:   BNE -                                              
    ; $9F82               \r\n++\r\n$9F9D> 60:      RTS\r\n\r\n\r\nFunction9F9E ;only
    called from 98D5\r\n$9F9E> A9 01:   LDA #$01\r\n$9FA0> 85 8D:   STA ScreenMovedFlag        
    \r\n\r\n; Render nothing to nametable\r\n$9FA2> A9 00:   LDA #$00\r\n$9FA4> 85
    1C:   STA TSAPPUtransferSize         \r\n$9FA6> 85 0D:   STA $0D         \r\n\r\n$9FA8>
    AE 6004: LDX ObjectPosScreen+0                             ; $0460\r\n$9FAB>
    CA:      DEX             \r\n$9FAC> 86 05:   STX $05         \r\n$9FAE> AD 8004:
    LDA ObjectPosX+0       \r\n$9FB1> 85 04:   STA $04         \r\n\r\nFunction9FB3
    ;only called from A0EC\r\n$9FB3> A5 05:   LDA $05\r\n$9FB5> 30 E6:   BMI +++       
    ;Actually 9F9D, but still an RTS\r\n$9FB7> C5 27:   CMP CurrentBeginScreen        
    \r\n$9FB9> 90 1F:   BCC +++\r\n$9FBB> A5 04:   LDA $04         \r\n$9FBD> 29
    03:   AND #$03        \r\n$9FBF> D0 0D:   BNE ++                                             
    ; $9FCE               \r\n$9FC1> A5 04:   LDA $04         \r\n$9FC3> 29 10:  
    AND #$10        \r\n$9FC5> F0 04:   BEQ +                                              
    ; $9FCB               \r\n$9FC7> A5 BF:   LDA $BF         \r\n$9FC9> D0 03:  
    BNE ++                                              ; $9FCE               \r\n+\r\n$9FCB>
    20 E8CD: JSR DrawBlockFromActiveLevelMap\r\n++\r\n$9FCE> A5 04:   LDA $04\r\n$9FD0>
    D0 02:   BNE +\r\n$9FD2> C6 05:   DEC $05         \r\n+\r\n$9FD4> C6 04:   DEC
    $04         \r\n$9FD6> C6 0C:   DEC $0C         \r\n$9FD8> D0 D9:   BNE Function9FB3\r\n+++\r\n$9FDA>
    60:      RTS             \r\n\r\n; Input:\r\n;   CurrentStripeEndType &3:\r\n;       
    0: horiz: right\r\n;        1: vert:  up\r\n;        2: horiz: left\r\n;       
    3: vert:  down\r\nDoScrolling:\r\n$9FDB> A9 00:   LDA #$00        \r\n$9FDD>
    85 59:   STA $59         \r\n$9FDF> A5 26:   LDA CurrentStripeEndType        
    \r\n$9FE1> 29 01:   AND #$01        \r\n$9FE3> F0 03:   BEQ HorizontalScrollPoint\r\n$9FE5>
    4C 72A0: JMP VerticalScrollPoint       \r\n\r\nHorizontalScrollPoint\r\n$9FE8>
    AD 0004: LDA ObjectSpriteNum+0\r\n$9FEB> C9 09:   CMP #$09        ;jumping/falling?\r\n$9FED>
    F0 0A:   BEQ +\r\n$9FEF> AD 4004: LDA ObjectUnknown440+0       \r\n$9FF2> 29
    30:   AND #$30        \r\n$9FF4> 8D 4004: STA ObjectUnknown440+0       \r\n;
    Make Megaman run\r\n$9FF7> A9 06:   LDA #$06\r\n+\r\n$9FF9> 8D 0004: STA ObjectSpriteNum+0      
    \r\n\r\n$9FFC> A5 26:   LDA CurrentStripeEndType\r\n$9FFE> 38:      SEC            
    \r\n$9FFF> E9 01:   SBC #$01        \r\n$A001> 4A:      LSR A           \r\n$A002>
    AA:      TAX             \r\n$A003> BD 6AA0: LDA A06A_table,X ;Screen scrolls
    backward     \r\n$A006> 85 5A:   STA $5A          ;This is added to PosXfraction
    each frame..\r\n$A008> BD 6CA0: LDA A06C_table,X     \r\n$A00B> 85 5B:   STA
    $5B          ;The increment Megaman moves in (X)\r\n$A00D> AD 8004: LDA ObjectPosX+0      
    \r\n$A010> C9 E0:   CMP #$E0\r\n$A012> 90 0A:   BCC +\r\n$A014> BD 6EA0: LDA
    A06E_table,X ;Screen scrolls forward\r\n$A017> 85 5A:   STA $5A         \r\n$A019>
    BD 70A0: LDA A070_table,X     \r\n$A01C> 85 5B:   STA $5B          ;The increment
    Megaman moves in (X)\r\n+\r\n$A01E> A9 00:   LDA #$00        \r\n$A020> 85 1A:  
    STA ScrollPosX         \r\n$A022> 85 1E:   STA ScrollPosY         \r\n$A024>
    BC 66A0: LDY HorizNumberOfFramesToScroll,X     \r\n- ;more scrolling to do\r\n$A027>
    18:      CLC  \r\n$A028> AD A004: LDA ObjectPosXfraction+0       \r\n$A02B> 65
    5A:   ADC $5A         \r\n$A02D> 8D A004: STA ObjectPosXfraction+0       \r\n$A030>
    AD 8004: LDA ObjectPosX+0       \r\n$A033> 65 5B:   ADC $5B         \r\n$A035>
    8D 8004: STA ObjectPosX+0       \r\n$A038> 18:      CLC             \r\n$A039>
    A5 1A:   LDA ScrollPosX         \r\n$A03B> 7D 68A0: ADC HorizScrollIncrement,X    
    \r\n$A03E> 85 1A:   STA ScrollPosX         \r\n$A040> 98:      TYA            
    \r\n$A041> 48:      PHA  ;phy            \r\n$A042> 8A:       TXA            
    \r\n$A043> 48:       PHA  ;phx       \r\n$A044> 20 31D1:   JSR UpdateGraphics                                 
    ; $D131       \r\n$A047> 20 C4C6:   JSR LoadEnemyGraphics       \r\n$A04A> 20
    1BC0:   JSR NextFrame                                       ; $C01B       \r\n$A04D>
    68:       PLA             \r\n$A04E> AA:       TAX  ;plx        \r\n$A04F> 68:     
    PLA             \r\n$A050> A8:      TAY  ;ply        \r\n$A051> 88:      DEY            
    \r\n$A052> D0 D3:   BNE -\r\n; done scrolling\r\n$A054> A9 18:   LDA #$18       
    \r\n$A056> 8D 8004: STA ObjectPosX+0 ;This fixes Megaman's position after horizontal
    scrolling\r\n$A059> A9 00:   LDA #$00        \r\n$A05B> 85 1E:   STA ScrollPosY        
    \r\n$A05D> 85 1A:   STA ScrollPosX         \r\n$A05F> 8D 0004: STA ObjectSpriteNum+0
    ;megaman standing idle\r\n$A062> 8D 4004: STA ObjectUnknown440+0       \r\n$A065>
    60:      RTS             \r\n\r\n\r\nHorizNumberOfFramesToScroll: .byte $3F,
    $40 ;at A066\r\nHorizScrollIncrement:   .byte +4, -4  ;at A068\r\nA06A_table:
    .byte $00, $00 ;backward scrolling, $5A value, increments ObjectPosXfraction\r\nA06C_table:
    .byte $01, $FF ;backward scrolling, megaman X increment\r\nA06E_table: .byte
    $B0, $50 ;forward scrolling, $5A value, increments ObjectPosXfraction\r\nA070_table:
    .byte $00, $FF ;forward scrolling, megaman X increment\r\n\r\nVerticalScrollPoint\r\n$A072>
    A5 26:   LDA CurrentStripeEndType         \r\n$A074> 4A:      LSR A          
    \r\n$A075> AA:      TAX             \r\n$A076> BD CCA0: LDA A0CC_table,X    
    \r\n$A079> 85 33:   STA $33         \r\n$A07B> BD D6A0: LDA VertScrollBeginValue,X    
    \r\n$A07E> 85 1E:   STA ScrollPosY         \r\n-\r\n$A080> 8A:      TXA\r\n$A081>
    48:      PHA  ; phx\r\n$A082> 20 31D1:  JSR UpdateGraphics                                 
    ; $D131       \r\n$A085> 20 23CF:  JSR $CF23       \r\n$A088> 20 C4C6:  JSR LoadEnemyGraphics      
    \r\n$A08B> 20 1BC0:  JSR NextFrame                                       ; $C01B      
    \r\n$A08E> 68:      PLA             \r\n$A08F> AA:      TAX             \r\n$A090>
    A5 B0:   LDA TeleportEnteredFlag         \r\n$A092> D0 13:   BNE +                                              
    ; $A0A7               \r\n$A094> 18:      CLC             \r\n$A095> AD 2006:
    LDA ObjectPosYfraction+0       \r\n$A098> 7D D0A0: ADC A0D0_table,X      ;-65
    or +65\r\n$A09B> 8D 2006: STA ObjectPosYfraction+0       \r\n$A09E> AD 0006:
    LDA ObjectPosY+0      \r\n$A0A1> 7D D2A0: ADC A0D2_table,X      ;+3 or -4 (!)\r\n$A0A4>
    8D 0006: STA ObjectPosY+0      \r\n+\r\n$A0A7> 18:      CLC\r\n$A0A8> A5 1E:  
    LDA ScrollPosY         \r\n$A0AA> 7D D4A0: ADC VertScrollIncrement,X      ;-4
    or +4\r\n$A0AD> 85 1E:   STA ScrollPosY         \r\n$A0AF> 18:      CLC            
    \r\n$A0B0> A5 33:   LDA $33         \r\n$A0B2> 7D CEA0: ADC A0CE_table,X     
    ;-1 or +1\r\n$A0B5> 85 33:   STA $33         \r\n$A0B7> 30 06:   BMI +                                              
    ; $A0BF               \r\n$A0B9> C9 3C:   CMP #$3c        \r\n$A0BB> F0 02:  
    BEQ +                                               ; $A0BF               \r\n$A0BD>
    D0 C1:   BNE -                                               ; $A080              
    \r\n+\r\n$A0BF> A9 00:   LDA #$00\r\n$A0C1> 85 1D:   STA $1D         \r\n$A0C3>
    85 1E:   STA ScrollPosY         \r\n$A0C5> 8D 2006: STA ObjectPosYfraction+0      
    \r\n$A0C8> 20 31D1: JSR UpdateGraphics                                  ; $D131      
    \r\n$A0CB> 60:      RTS             \r\n\r\n\r\nA0CC_table: .byte $3B, $00 ;
    Starting value for $33\r\nA0CE_table: .byte $FF, $01 ; Increment for $33\r\nA0D0_table:
    .byte $BF, $41 ; Increment of ObjectPosYfraction+0\r\nA0D2_table: .byte $03,
    $FC ; Increment of ObjectPosY+0\r\nVertScrollIncrement:  .byte  -4, 4\r\nVertScrollBeginValue:
    .byte -17, 0\r\n\r\n\r\n\r\n$A0D8> 85 05:   STA $05\r\n$A0DA> A2 FF:   LDX #$ff       
    \r\n$A0DC> 86 04:   STX $04         \r\n$A0DE> A9 00:   LDA #$00        \r\n$A0E0>
    85 2F:   STA RefObjectNumber         \r\n\r\n; Render nothing to nametable\r\n-\r\n$A0E2>
    A9 00:   LDA #$00\r\n$A0E4> 85 0D:   STA $0D         \r\n$A0E6> 85 1C:   STA
    TSAPPUtransferSize         \r\n\r\n$A0E8> A9 08:   LDA #$08\r\n$A0EA> 85 0C:  
    STA $0C         \r\n$A0EC> 20 B39F: JSR Function9FB3       \r\n\r\n$A0EF> A5
    FF:   LDA PPU2000value       ; Branch if NMI off\r\n$A0F1> 29 80:   AND #$80       
    \r\n$A0F3> F0 06:   BEQ +                                               ; $A0FB              
    \r\n$A0F5> 20 1BC0: JSR NextFrame                                       ; $C01B      
    \r\n$A0F8> 4C FEA0: JMP ++                                              ; $A0FE      
    \r\n+\r\n$A0FB> 20 73D6: JSR DoTSAPPUtransfer                         ; $D673\r\n++\r\n$A0FE>
    A5 04:   LDA $04\r\n$A100> C9 FF:   CMP #$ff        \r\n$A102> D0 DE:   BNE -                                              
    ; $A0E2               \r\n$A104> 60:      RTS             \r\n\r\n\r\nForgetRoomObjects\r\n$A105>
    A2 1F:   LDX #$1f\r\n$A107> A9 F8:   LDA #$f8        \r\n-\r\n$A109> 9D 0106:
    STA ObjectPosY+1,X     \r\n$A10C> CA:      DEX             \r\n$A10D> 10 FA:  
    BPL -\r\n$A10F> A2 0F:   LDX #$0f        \r\n$A111> A9 FF:   LDA #$ff       
    \r\n-\r\n$A113> 95 7B:   STA $7B,X               \r\n$A115> CA:      DEX            
    \r\n$A116> 10 FB:   BPL -\r\n$A118> A5 31:   LDA CurrentStage         \r\n$A11A>
    C9 01:   CMP #$01        ;Ice\r\n$A11C> F0 0D:   BEQ $A12B               \r\n$A11E>
    C9 04:   CMP #$04        ;Elec\r\n$A120> F0 0D:   BEQ $A12F               \r\n$A122>
    C9 03:   CMP #$03        ;Fire\r\n$A124> F0 31:   BEQ $A157               \r\n$A126>
    C9 06:   CMP #$06        ;Wily1\r\n$A128> F0 1A:   BEQ $A144               \r\n$A12A>
    60:      RTS             \r\n\r\n;  Because of how this works, apparently there
    can be no Gutsblocks\r\n;  before all TemporaryBlocks are seen.\r\n; In stage
    1: (Iceman)\r\n$A12B> A9 66:   LDA #17*6\r\n$A12D> D0 02:   BNE +                                              
    ; $A131               \r\n; In stage 4: (Elecman)\r\n$A12F> A9 2A:   LDA #7*6 
    ;Load Actives (the buzzblock occurance points)\r\n+\r\n-\r\n$A131> 85 0E:   STA
    $0E\r\n$A133> A9 00:   LDA #$00        \r\n$A135> 85 0C:   STA $0C         ;Set
    the type as 0\r\n$A137> A5 0E:   LDA $0E         \r\n$A139> 20 25C6: JSR LoadActiveByIndexAndSetBlockingness      
    ;does stores into $0C,$0D\r\n$A13C> 38:      SEC             \r\n$A13D> A5 0E:  
    LDA $0E         \r\n$A13F> E9 06:   SBC #$06        \r\n$A141> 10 EE:   BPL -                                              
    ; $A131               \r\n$A143> 60:      RTS             \r\n\r\n; In stage
    6:\r\n$A144> A9 1E:   LDA #$1E\r\n-\r\n$A146> 85 0C:    STA $0C         \r\n$A148>
    20 4AC6:  JSR $C64A       \r\n$A14B> A5 0C:    LDA $0C         \r\n$A14D> C9
    2A:    CMP #$2A\r\n$A14F> F0 05:    BEQ +\r\n$A151> 18:       CLC            
    \r\n$A152> 69 06:    ADC #$06        \r\n$A154> D0 F0:    BNE $A146              
    \r\n+\r\n$A156> 60:      RTS             \r\n\r\n; In stage 3: ;fireman stage\r\n$A157>
    A9 54:   LDA #$54        \r\n-\r\n$A159> 85 0C:    STA $0C         \r\n$A15B>
    20 4AC6:  JSR $C64A       \r\n$A15E> 38:       SEC             \r\n$A15F> A5
    0C:    LDA $0C         \r\n$A161> E9 06:    SBC #$06        \r\n$A163> 10 F4:  
    BPL -\r\n$A165> A5 1B:   LDA ScrollPosScreen         \r\n$A167> C9 0F:   CMP
    #$0f        \r\n$A169> B0 1F:   BCS +\r\n$A16B> A9 FF:    LDA #$ff        \r\n$A16D>
    8D 1004:  STA ObjectSpriteNum+$10\r\n$A170> A9 32:    LDA #$32        \r\n$A172>
    8D F006:  STA ObjectType+$10\r\n$A175> A9 20:    LDA #$20        \r\n$A177> 8D
    3004:  STA ObjectFlags+$10\r\n$A17A> A2 10:    LDX #$10\r\n$A17C> 20 45B0:  JSR
    ClearObjectMem                                  ; $B045       \r\n$A17F> 8D 5004: 
    STA ObjectUnknown440+$10\r\n$A182> 8D 5006:  STA ObjectFireDelay+$10\r\n$A185>
    A9 E0:    LDA #$E0        \r\n$A187> 8D 1006:  STA ObjectPosY+$10       \r\n+\r\n$A18A>
    60:      RTS             \r\n\r\n\r\nRunCollisionChecks\r\n$A18B> 38:      SEC\r\n$A18C>
    AD 8004: LDA ObjectPosX+0       \r\n$A18F> E5 1A:   SBC ScrollPosX         \r\n$A191>
    38:      SEC             \r\n$A192> E9 07:   SBC #$07        \r\n$A194> 85 00:  
    STA $00         \r\n$A196> 18:      CLC             \r\n$A197> 69 0E:   ADC #$0e       
    \r\n$A199> 85 01:   STA $01         \r\n$A19B> 38:      SEC             \r\n$A19C>
    AD 0006: LDA ObjectPosY+0      \r\n$A19F> E9 0B:   SBC #$0b        \r\n$A1A1>
    85 03:   STA $03         \r\n$A1A3> 18:      CLC             \r\n$A1A4> 69 16:  
    ADC #$16        \r\n$A1A6> 85 02:   STA $02         \r\n$A1A8> A5 55:   LDA MegamanBlinkState        
    \r\n$A1AA> D0 16:   BNE +                                               ; $A1C2              
    \r\n$A1AC> A5 3E:   LDA BossCurrentStrategy         \r\n$A1AE> C9 05:   CMP #$05       
    \r\n$A1B0> 90 10:   BCC +\r\n$A1B2> A2 01:   LDX #$01        \r\n$A1B4> 20 BEC9:
    JSR TestCollisionWithMegaman                        ; $C9BE       \r\n$A1B7>
    90 09:   BCC +\r\n$A1B9> A9 04:   LDA #$04        \r\n$A1BB> 85 0C:   STA $0C        
    \r\n$A1BD> A5 43:   LDA BossVariable43         \r\n$A1BF> 4C 3DA2: JMP RegisterMegamanCollision                       
    ; $A23D       \r\n+\r\n$A1C2> A5 23:   LDA FrameCounter        \r\n$A1C4> 29
    01:   AND #$01        \r\n$A1C6> 18:      CLC             \r\n$A1C7> 69 10:  
    ADC #$10        \r\n$A1C9> AA:      TAX             \r\n-\r\n$A1CA> 20 BEC9:
    JSR TestCollisionWithMegaman                        ; $C9BE\r\n$A1CD> B0 07:  
    BCS +                                               ; $A1D6               \r\n\r\n;
    next object...\r\n$A1CF> E8:      INX\r\n$A1D0> E8:      INX             \r\n$A1D1>
    E4 54:   CPX TotalObjects         \r\n$A1D3> 90 F5:   BCC -                                              
    ; $A1CA               \r\n$A1D5> 60:      RTS             \r\n\r\n\r\n+\r\n\r\n;
    Item can only be picked up if ObjectSpriteNum,X = #$FF\r\n$A1D6> BD 0004: LDA
    ObjectSpriteNum,X\r\n$A1D9> C9 FF:   CMP #$ff        \r\n$A1DB> D0 0E:   BNE
    +                                               ; $A1EB               \r\n\r\n;
    if ID >= #$3C and ID < #$48 then this object is a bonus item\r\n$A1DD> BD E006:
    LDA ObjectType,X\r\n$A1E0> C9 48:   CMP #$48        \r\n$A1E2> B0 07:   BCS +                                              
    ; $A1EB               \r\n$A1E4> C9 3C:   CMP #$3c        \r\n$A1E6> 90 03:  
    BCC +                                               ; $A1EB               \r\n$A1E8>
    4C 33C8: JMP GotItem                                         ; $C833       \r\n+\r\n$A1EB>
    A5 55:   LDA MegamanBlinkState\r\n; If Megaman is blinking, ignore this collision
    and go handle the next object.\r\n$A1ED> D0 E0:   BNE $A1CF               \r\n\r\n;
    Collision.\r\n$A1EF> BD 0004: LDA ObjectSpriteNum,X\r\n$A1F2> C9 FF:   CMP #$ff       
    \r\n$A1F4> F0 37:   BEQ $A22D               \r\n$A1F6> C9 27:   CMP #$27\r\n$A1F8>
    F0 24:   BEQ $A21E               \r\n$A1FA> C9 32:   CMP #$32        \r\n$A1FC>
    F0 20:   BEQ $A21E               \r\n$A1FE> C9 4C:   CMP #$4c        \r\n$A200>
    90 24:   BCC $A226               \r\n$A202> C9 54:   CMP #$54        \r\n$A204>
    B0 20:   BCS $A226               \r\n$A206> A5 5F:   LDA WeaponSelect        
    \r\n$A208> C9 01:   CMP #$01        \r\n$A20A> D0 1A:   BNE $A226              
    \r\n\r\n$A20C> 8A:      TXA\r\n$A20D> 48:      PHA             \r\n$A20E> 20
    C5C7: JSR $C7C5       \r\n$A211> 68:      PLA             \r\n$A212> AA:     
    TAX             \r\n$A213> A9 0A:   LDA #$0a        \r\n$A215> 85 0C:   STA $0C        
    \r\n$A217> BD 2004: LDA ObjectFlags,X     \r\n$A21A> 49 40:   EOR #$40       
    \r\n$A21C> D0 1F:   BNE RegisterMegamanCollision                        ; $A23D              
    \r\n$A21E> BD 2004: LDA ObjectFlags,X     \r\n$A221> 09 80:   ORA #$80       
    \r\n$A223> 9D 2004: STA ObjectFlags,X     \r\n\r\n$A226> A4 AC:   LDY FightingBossNum\r\n$A228>
    B9 EFFE: LDA $FEEF,Y     \r\n$A22B> D0 0B:   BNE $A238               \r\n$A22D>
    A5 3E:   LDA BossCurrentStrategy         \r\n$A22F> D0 F5:   BNE $A226              
    \r\n\r\n; Load enemy hit damage from table at $FEBD into $0C\r\n\r\n$A231> BD
    E006: LDA ObjectType,X\r\n$A234> A8:      TAY             \r\n$A235> B9 BDFE:
    LDA EnemyHitTable,Y\r\n$A238> 85 0C:   STA $0C         \r\n\r\n$A23A> BD 2004:
    LDA ObjectFlags,X ; Get object flags\r\n\r\n; Reached from various locations\r\nRegisterMegamanCollision\r\n$A23D>
    85 0D:   STA $0D         \r\n\r\n\r\n; if ((LifeMeter-=$0C)<=0) then Kill Megaman\r\n$A23F>
    38:      SEC\r\n$A240> A5 6A:   LDA Meters+0         \r\n$A242> E5 0C:   SBC
    $0C         \r\n$A244> 85 6A:   STA Meters+0         \r\n$A246> F0 02:   BEQ
    +                                               ; $A24A\r\n$A248> B0 07:   BCS
    ++                                              ; $A251               \r\n+\r\n$A24A>
    A9 00:   LDA #$00\r\n$A24C> 85 6A:   STA Meters+0         \r\n$A24E> 4C 19C2:
    JMP MegaManKilled                                   ; $C219\r\n++\r\n\r\n; Make
    sure he gets hit towards in the same direction as the hitting object\r\n\r\n$A251>
    A5 0D:   LDA $0D\r\n$A253> 29 40:   AND #$40        \r\n$A255> 49 40:   EOR #$40       
    \r\n\r\n; Make Megaman get hit\r\n$A257> 09 03:   ORA #$03\r\n$A259> 8D 2004:
    STA ObjectFlags+0       \r\n\r\n$A25C> A9 6F:   LDA #$6f\r\n$A25E> 85 55:   STA
    MegamanBlinkState         \r\n$A260> 60:      RTS             \r\n\r\nRunWeaponAI\r\n$A261>
    A5 23:   LDA FrameCounter\r\n$A263> 29 01:   AND #$01        \r\n$A265> 18:     
    CLC             \r\n$A266> 69 10:   ADC #$10        \r\n$A268> AA:      TAX            
    \r\n; At even frames, it tests objects 10,12,14,16,18,1A,1C,1E\r\n; At odd  frames,
    it tests objects 11,13,15,17,19,1B,1D,1F\r\n\r\n; Make object turn left\r\n-\r\n$A269>
    BD 2004: LDA ObjectFlags,X\r\n$A26C> 29 7F:   AND #$7f        \r\n$A26E> 9D 2004:
    STA ObjectFlags,X     \r\n\r\n$A271> E8:      INX\r\n$A272> E8:      INX            
    \r\n$A273> E0 20:   CPX #$20        \r\n$A275> 90 F2:   BCC -\r\n$A277> A5 5F:  
    LDA WeaponSelect\r\n$A279> 0A:      ASL A           \r\n$A27A> A8:      TAY            
    \r\n$A27B> B9 88A2: LDA WeaponAItable+0,Y     \r\n$A27E> 85 04:   STA $04        
    \r\n$A280> B9 89A2: LDA WeaponAItable+1,Y     \r\n$A283> 85 05:   STA $05        
    \r\n$A285> 6C 0400: JMP ($0004)     \r\n\r\n; See also: MegamanWeaponFire_*\r\nWeaponAItable:
    ; at A288\r\n    .word WeaponAI_P, WeaponAI_C, WeaponAI_I, WeaponAI_B\r\n   
    .word WeaponAI_F, WeaponAI_E, WeaponAI_G, WeaponAI_M\r\n\r\nWeaponAI_P\r\n$A298>
    A2 02:   LDX #$02        \r\n$A29A> A9 05:   LDA #$05        \r\nWeaponAI_TestShotHit 
    ;Input: A(5=P,6=C,7=F,8=E,$0E=B) X(2=P/B, 5=C/F/I, 5-8=G, 5-$0B=E)\r\n$A29C>
    85 59:   STA $59               ; A = maximum shot obj index\r\n$A29E> 86 2F:  
    STX RefObjectNumber   ; X = minimum shot obj index        \r\n$A2A0> 20 B2C8:
    JSR TestShotHit       \r\n$A2A3> A6 2F:   LDX RefObjectNumber         \r\n$A2A5>
    E8:      INX             \r\n$A2A6> E4 59:   CPX $59         \r\n$A2A8> D0 F4:  
    BNE $A29E               \r\n$A2AA> 60:      RTS             \r\n\r\nWeaponAI_C\r\n$A2AB>
    A2 05:   LDX #$05\r\n$A2AD> A9 06:   LDA #$06        \r\n$A2AF> D0 EB:   BNE
    WeaponAI_TestShotHit\r\nWeaponAI_I\r\n$A2B1> A2 05:   LDX #$05        \r\n$A2B3>
    86 2F:   STX RefObjectNumber         \r\n$A2B5> 20 B2C8: JSR TestShotHit      
    \r\n$A2B8> B0 01:   BCS +                                               ; $A2BB              
    \r\n$A2BA> 60:      RTS             \r\n+\r\n$A2BB> A5 3E:   LDA BossCurrentStrategy\r\n$A2BD>
    D0 07:   BNE +\r\n$A2BF> A6 0C:   LDX $0C         \r\n$A2C1> A9 FF:   LDA #$ff       
    \r\n$A2C3> 9D A006: STA ObjectLifeCycleCounter,X     \r\n+\r\n$A2C6> 60:     
    RTS             \r\n\r\nWeaponAI_B\r\n$A2C7> A5 61:   LDA NumberOfFramesSinceShooting\r\n$A2C9>
    C9 92:   CMP #$92        \r\n$A2CB> 90 06:   BCC +\r\n$A2CD> A2 02:   LDX #$02       
    \r\n$A2CF> A9 0E:   LDA #$0e        \r\n$A2D1> D0 C9:   BNE WeaponAI_TestShotHit              
    \r\n+\r\n$A2D3> 60:      RTS             \r\n\r\nWeaponAI_F\r\n$A2D4> A2 05:  
    LDX #$05\r\n$A2D6> A9 07:   LDA #$07        \r\n$A2D8> D0 C2:   BNE WeaponAI_TestShotHit              
    \r\nWeaponAI_E\r\n$A2DA> A2 05:   LDX #$05        \r\n$A2DC> A5 61:   LDA NumberOfFramesSinceShooting        
    \r\n$A2DE> C9 FF:   CMP #$ff        \r\n$A2E0> F0 32:   BEQ +++                                            
    ; $A314               \r\n-\r\n$A2E2> 86 2F:   STX RefObjectNumber\r\n$A2E4>
    20 B2C8: JSR TestShotHit       \r\n$A2E7> 90 23:   BCC ++                                             
    ; $A30C\r\n$A2E9> A6 0C:   LDX $0C         \r\n$A2EB> BD 0004: LDA ObjectSpriteNum,X    
    \r\n$A2EE> C9 3F:   CMP #$3f        \r\n$A2F0> 90 1A:   BCC ++                                             
    ; $A30C\r\n$A2F2> C9 48:   CMP #$48        \r\n$A2F4> 90 0F:   BCC +                                              
    ; $A305\r\n$A2F6> C9 FF:   CMP #$ff        \r\n$A2F8> D0 12:   BNE ++                                             
    ; $A30C\r\n\r\n$A2FA> BD E006: LDA ObjectType,X\r\n$A2FD> C9 11:   CMP #$11\r\n$A2FF>
    F0 04:   BEQ +                                               ; $A305              
    \r\n\r\n; $1C = scissor machine\r\n$A301> C9 1C:   CMP #$1c\r\n$A303> D0 07:  
    BNE ++                                              ; $A30C               \r\n\r\n+\r\n$A305>
    20 E4C7: JSR C7E4_routine\r\n$A308> A9 FE:   LDA #$fe        \r\n$A30A> 85 61:  
    STA NumberOfFramesSinceShooting         \r\n\r\n++\r\n$A30C> A6 2F:   LDX RefObjectNumber\r\n$A30E>
    E8:      INX             \r\n$A30F> E0 0C:   CPX #$0c        \r\n$A311> D0 CF:  
    BNE -                                               ; $A2E2               \r\n$A313>
    60:      RTS             \r\n\r\n+++\r\n$A314> A9 08:   LDA #$08\r\n$A316> D0
    84:   BNE WeaponAI_TestShotHit               \r\n\r\nWeaponAI_G\r\n$A318> A2
    05:   LDX #$05        \r\n-\r\n$A31A> 86 2F:   STX RefObjectNumber         \r\n$A31C>
    20 B2C8: JSR TestShotHit\r\n$A31F> B0 08:   BCS +\r\n$A321> A6 2F:   LDX RefObjectNumber        
    \r\n$A323> E8:      INX             \r\n$A324> E0 08:   CPX #$08        \r\n$A326>
    D0 F2:   BNE -\r\n$A328> 60:      RTS             \r\n+\r\n$A329> A6 2F:   LDX
    RefObjectNumber         \r\n$A32B> A4 31:   LDY CurrentStage         \r\n$A32D>
    BD 0004: LDA ObjectSpriteNum,X     \r\n$A330> D9 88A8: CMP GutsblockObjectSpritenum,Y    
    \r\n$A333> D0 EE:   BNE $A323               \r\n$A335> 38:      SEC            
    \r\n$A336> BD 0006: LDA ObjectPosY,X     \r\n$A339> E9 10:   SBC #$10       
    \r\n$A33B> 85 03:   STA $03         \r\n$A33D> 38:      SEC             \r\n$A33E>
    BD 8004: LDA ObjectPosX,X     \r\n$A341> E9 10:   SBC #$10        \r\n$A343>
    85 00:   STA $00         \r\n$A345> BD 6004: LDA ObjectPosScreen,X     \r\n$A348>
    E9 00:   SBC #$00        \r\n$A34A> 85 01:   STA $01         \r\n$A34C> 20 B5F7:
    JSR $F7B5       \r\n$A34F> A5 61:   LDA NumberOfFramesSinceShooting         \r\n$A351>
    C9 10:   CMP #$10        \r\n$A353> B0 04:   BCS $A359               \r\n$A355>
    A9 1F:   LDA #$1f        \r\n$A357> 85 61:   STA NumberOfFramesSinceShooting        
    \r\n$A359> 60:      RTS             \r\n\r\nWeaponAI_M\r\n$A35A> 18:      CLC\r\n$A35B>
    60:      RTS             \r\n\r\nCheckHoldingBkey\r\n$A35C> A5 60:   LDA WeaponFiring\r\n$A35E>
    30 0A:   BMI ++                                               ; $A36A              
    \r\n$A360> A5 5F:   LDA WeaponSelect         \r\n$A362> C9 06:   CMP #$06       
    \r\n$A364> D0 03:   BNE +\r\n$A366> 20 FDF6: JSR RoutineF6FD_GutsmanWeapon\r\n+\r\n$A369>
    60:      RTS             \r\n++\r\n; Check if B key is being held\r\n$A36A> A5
    60:   LDA WeaponFiring\r\n$A36C> 09 40:   ORA #$40        \r\n$A36E> 85 60:  
    STA WeaponFiring         \r\n$A370> A5 5F:   LDA WeaponSelect\r\n$A372> 29 3F:  
    AND #$3f        \r\n$A374> 0A:      ASL A           \r\n$A375> AA:      TAX            
    \r\n$A376> BD 83A3: LDA BKeyHoldingAI+0,X     \r\n$A379> 85 04:   STA $04        
    \r\n$A37B> BD 84A3: LDA BKeyHoldingAI+1,X     \r\n$A37E> 85 05:   STA $05        
    \r\n$A380> 6C 0400: JMP ($0004)     \r\n\r\nBKeyHoldingAI:; at A383\r\n    .word
    BKeyHoldingAI_PandI ;P\r\n    .word BKeyHoldingAI_C\r\n    .word BKeyHoldingAI_PandI
    ;I\r\n    .word BKeyHoldingAI_B\r\n    .word BKeyHoldingAI_F\r\n    .word BKeyHoldingAI_E\r\n   
    .word BKeyHoldingAI_G\r\n    .word BKeyHoldingAI_M\r\n\r\nBKeyHoldingAI_C\r\n$A393>
    A5 61:   LDA NumberOfFramesSinceShooting\r\n$A395> C9 0F:   CMP #$0F\r\n$A397>
    B0 16:   BCS ++\r\n$A399> AD 0004: LDA ObjectSpriteNum+0\r\n$A39C> C9 09:   CMP
    #$09          ;jumping/falling?\r\n$A39E> F0 08:   BEQ +\r\n$A3A0> C9 15:   CMP
    #$15          ;on ladder?\r\n$A3A2> F0 04:   BEQ +\r\n$A3A4> C9 17:   CMP #$17         
    ;getting off a ladder?\r\n$A3A6> D0 07:   BNE ++\r\n+\r\n$A3A8> A9 6F:   LDA
    #$6F          ;throwing something while jumping/falling\r\n$A3AA> 8D 0004: STA
    ObjectSpriteNum+0\r\n$A3AD> D0 0E:   BNE +\r\n++\r\n$A3AF> A9 00:   LDA #$00       
    \r\n$A3B1> 8D 4006: STA ObjectFireDelay+0       \r\n$A3B4> A5 61:   LDA NumberOfFramesSinceShooting        
    \r\n$A3B6> C9 2A:   CMP #$2A\r\n$A3B8> B0 17:   BCS ++\r\n$A3BA> 20 09A7: JSR
    BKeyHoldingAI_PandI       \r\n+\r\n$A3BD> E6 61:   INC NumberOfFramesSinceShooting        
    \r\n$A3BF> 38:      SEC             \r\n$A3C0> AD 6506: LDA ObjectYSpeedFraction+5      
    \r\n$A3C3> E9 1A:   SBC #$1a        \r\n$A3C5> 8D 6506: STA ObjectYSpeedFraction+5      
    \r\n$A3C8> AD 8506: LDA ObjectYSpeed+5       \r\n$A3CB> E9 00:   SBC #$00       
    \r\n$A3CD> 8D 8506: STA ObjectYSpeed+5       \r\n$A3D0> 60:      RTS            
    \r\n++\r\n$A3D1> D0 0A:   BNE +\r\n$A3D3> A9 80:   LDA #$80        \r\n$A3D5>
    85 65:   STA $65         \r\n$A3D7> A9 02:   LDA #$02        \r\n$A3D9> 85 66:  
    STA $66         \r\n$A3DB> E6 61:   INC NumberOfFramesSinceShooting         \r\n+\r\n$A3DD>
    AD 2504: LDA ObjectFlags+5       \r\n$A3E0> 29 BF:   AND #$bf        \r\n$A3E2>
    8D 2504: STA ObjectFlags+5       \r\n$A3E5> 38:      SEC             \r\n$A3E6>
    AD 8004: LDA ObjectPosX+0       \r\n$A3E9> ED 8504: SBC ObjectPosX+5       \r\n$A3EC>
    85 02:   STA $02         \r\n$A3EE> AD 6004: LDA ObjectPosScreen+0                            
    ; $0460       \r\n$A3F1> ED 6504: SBC ObjectPosScreen+5       \r\n$A3F4> 90 0A:  
    BCC +\r\n$A3F6> AD 2504: LDA ObjectFlags+5       \r\n$A3F9> 09 40:   ORA #$40       
    \r\n$A3FB> 8D 2504: STA ObjectFlags+5       \r\n$A3FE> D0 08:   BNE ++\r\n+\r\n$A400>
    A5 02:   LDA $02         \r\n$A402> 49 FF:   EOR #$ff        \r\n$A404> 69 01:  
    ADC #$01        \r\n$A406> 85 02:   STA $02         \r\n++\r\n$A408> 18:     
    CLC             \r\n$A409> A5 65:   LDA $65         \r\n$A40B> 69 08:   ADC #$08       
    \r\n$A40D> 85 65:   STA $65         \r\n$A40F> 85 00:   STA $00         \r\n$A411>
    A5 66:   LDA $66         \r\n$A413> 69 00:   ADC #$00        \r\n$A415> 85 66:  
    STA $66         \r\n$A417> 85 01:   STA $01         \r\n$A419> 38:      SEC            
    \r\n$A41A> AD 0506: LDA ObjectPosY+5       \r\n$A41D> ED 0006: SBC ObjectPosY+0     
    \r\n$A420> 85 03:   STA $03         \r\n$A422> A2 05:   LDX #$05        \r\n$A424>
    20 C6F8: JSR F8C6_routine       \r\n$A427> A5 03:   LDA $03         \r\n$A429>
    C9 0C:   CMP #$0c        \r\n$A42B> B0 06:   BCS +\r\n$A42D> A5 02:   LDA $02        
    \r\n$A42F> C9 0C:   CMP #$0c        \r\n$A431> 90 28:   BCC ++\r\n+\r\n$A433>
    A5 63:   LDA $63         \r\n$A435> 05 64:   ORA $64         \r\n$A437> F0 1E:  
    BEQ +\r\n$A439> 38:      SEC             \r\n$A43A> A5 63:   LDA $63        
    \r\n$A43C> E9 20:   SBC #$20        \r\n$A43E> 85 63:   STA $63         \r\n$A440>
    A5 64:   LDA $64         \r\n$A442> E9 00:   SBC #$00        \r\n$A444> 85 64:  
    STA $64         \r\n$A446> 38:      SEC             \r\n$A447> AD 6506: LDA ObjectYSpeedFraction+5      
    \r\n$A44A> E5 63:   SBC $63         \r\n$A44C> 8D 6506: STA ObjectYSpeedFraction+5      
    \r\n$A44F> AD 8506: LDA ObjectYSpeed+5       \r\n$A452> E5 64:   SBC $64        
    \r\n$A454> 8D 8506: STA ObjectYSpeed+5       \r\n+\r\n$A457> 20 09A7: JSR BKeyHoldingAI_PandI      
    \r\n$A45A> 60:      RTS             \r\n++\r\n$A45B> A9 F8:   LDA #$f8\r\n$A45D>
    8D 0506: STA ObjectPosY+5       \r\n$A460> A9 00:   LDA #$00\r\n$A462> 85 60:  
    STA WeaponFiring         \r\n$A464> 60:      RTS             \r\n\r\nBKeyHoldingAI_B\r\n$A465>
    E6 61:   INC NumberOfFramesSinceShooting\r\n$A467> A5 61:   LDA NumberOfFramesSinceShooting        
    \r\n$A469> C9 0F:   CMP #$0f        \r\n$A46B> B0 15:   BCS ++\r\n$A46D> AD 0004:
    LDA ObjectSpriteNum+0       \r\n$A470> C9 09:   CMP #$09         ;jumping?\r\n$A472>
    F0 08:   BEQ +\r\n$A474> C9 15:   CMP #$15         ;climbing?\r\n$A476> F0 04:  
    BEQ +\r\n$A478> C9 17:   CMP #$17         ;unclimbing?\r\n$A47A> D0 06:   BNE
    ++\r\n+\r\n$A47C> A9 6F:   LDA #$6f         ;throwing something while jumping\r\n$A47E>
    8D 0004: STA ObjectSpriteNum+0       \r\n$A481> 60:      RTS             \r\n++\r\n$A482>
    A9 00:   LDA #$00\r\n$A484> 8D 4006: STA ObjectFireDelay+0       \r\n$A487> A5
    61:   LDA NumberOfFramesSinceShooting         \r\n$A489> C9 92:   CMP #$92       
    \r\n$A48B> B0 04:   BCS +\r\n$A48D> 20 09A7: JSR BKeyHoldingAI_PandI       \r\n$A490>
    60:      RTS             \r\n+\r\n$A491> D0 1F:   BNE +\r\n$A493> A9 0B:   LDA
    #$0b        \r\n$A495> 85 0C:   STA $0C         \r\n$A497> A9 5F:   LDA #$5f       
    \r\n$A499> 85 0D:   STA $0D         \r\n$A49B> A9 00:   LDA #$00        \r\n$A49D>
    85 0E:   STA $0E         \r\n$A49F> A2 01:   LDX #$01        \r\n-\r\n$A4A1>
    A0 05:   LDY #$05        \r\n$A4A3> E8:      INX             \r\n$A4A4> 20 41F8:
    JSR CreateExplosionObject       \r\n$A4A7> 10 F8:   BPL -\r\n$A4A9> A9 12:  
    LDA #$12        ; Explosion\r\n$A4AB> 20 77C4: JSR IssueSound                                     
    ; $C477       \r\n-\r\n$A4AE> 20 09A7: JSR BKeyHoldingAI_PandI       \r\n$A4B1>
    60:      RTS             \r\n+ ;It has exploded now\r\n$A4B2> C9 A0:   CMP #$a0\r\n$A4B4>
    D0 F8:   BNE -\r\n$A4B6> A9 F8:   LDA #$f8        \r\n$A4B8> A2 02:   LDX #$02       
    \r\n-\r\n$A4BA> 9D 0006: STA ObjectPosY,X\r\n$A4BD> E8:      INX            
    \r\n$A4BE> E0 10:   CPX #$10        \r\n$A4C0> D0 F8:   BNE -                                              
    ; $A4BA               \r\n$A4C2> A9 00:   LDA #$00\r\n$A4C4> 85 60:   STA WeaponFiring        
    \r\n$A4C6> 60:      RTS             \r\n\r\nBKeyHoldingAI_F\r\n$A4C7> E6 61:  
    INC NumberOfFramesSinceShooting\r\n$A4C9> A5 61:   LDA NumberOfFramesSinceShooting        
    \r\n$A4CB> C9 20:   CMP #$20        \r\n$A4CD> D0 0A:   BNE +\r\n$A4CF> A9 F8:  
    LDA #$F8        \r\n$A4D1> 8D 0606: STA ObjectPosY+6       \r\n$A4D4> A9 00:  
    LDA #$00        \r\n$A4D6> 85 60:   STA WeaponFiring         \r\n$A4D8> 60:     
    RTS             \r\n+\r\n$A4D9> 29 07:   AND #$07\r\n$A4DB> AA:      TAX            
    \r\n$A4DC> 18:      CLC             \r\n$A4DD> AD 0006: LDA ObjectPosY+0     
    \r\n$A4E0> 7D FAA4: ADC FireShieldYPosTable,X     \r\n$A4E3> 8D 0606: STA ObjectPosY+6      
    \r\n$A4E6> 18:      CLC             \r\n$A4E7> AD 8004: LDA ObjectPosX+0      
    \r\n$A4EA> 7D 02A5: ADC FireShieldXPosTable,X     \r\n$A4ED> 8D 8604: STA ObjectPosX+6      
    \r\n$A4F0> AD 6004: LDA ObjectPosScreen+0\r\n$A4F3> 7D 0AA5: ADC FireShieldPosScreenTable,X    
    \r\n$A4F6> 8D 6604: STA ObjectPosScreen+6       \r\n$A4F9> 60:      RTS            
    \r\n\r\n; These tables describe how the fire ball revolves around Megaman.\r\nFireShieldYPosTable:
    .byte 20,14,0,-14,-20,-14,0,14 ; at A4FA\r\nFireShieldXPosTable: .byte 0,-14,-20,-14,0,14,20,14
    ; at A502\r\nFireShieldPosScreenTable: .byte 0,-1,-1,-1,0,0,0,0 ; at A50A\r\n\r\n;
    Something related to Elecman shots.\r\nBKeyHoldingAI_E\r\n$A512> A5 61:   LDA
    NumberOfFramesSinceShooting         \r\n$A514> C9 FF:   CMP #$FF        \r\n$A516>
    F0 04:   BEQ +\r\n$A518> C9 FE:   CMP #$FE        \r\n$A51A> D0 03:   BNE ++\r\n+\r\n$A51C>
    4C A6A5: JMP ++++\r\n++\r\n$A51F> A2 05:   LDX #$05        \r\n--\r\n$A521> BD
    4004: LDA ObjectUnknown440,X     \r\n$A524> F0 07:   BEQ +\r\n-\r\n$A526> E8:     
    INX             \r\n$A527> E0 0A:   CPX #$0a        \r\n$A529> D0 F6:   BNE --\r\n$A52B>
    F0 4C:   BEQ +++\r\n+\r\n$A52D> BD 0006: LDA ObjectPosY,X     \r\n$A530> C9 F8:  
    CMP #$f8        \r\n$A532> F0 F2:   BEQ -\r\n$A534> BD 0004: LDA ObjectSpriteNum,X    
    \r\n$A537> 38:      SEC             \r\n$A538> E9 62:   SBC #$62        \r\n$A53A>
    A8:      TAY             \r\n$A53B> B9 B9A5: LDA ElecBeamSpriteNumTable,Y    
    \r\n$A53E> 9D 0004: STA ObjectSpriteNum,X     \r\n$A541> 18:      CLC            
    \r\n\r\n$A542> BD 0006: LDA ObjectPosY,X\r\n$A545> 79 B1A5: ADC ElecBeamYMovementTable,Y    
    \r\n$A548> 9D 0006: STA ObjectPosY,X     \r\n\r\n$A54B> BD 2004: LDA ObjectFlags,X\r\n$A54E>
    29 40:   AND #$40        \r\n$A550> F0 12:   BEQ +\r\n$A552> 18:      CLC            
    \r\n\r\n$A553> BD 8004: LDA ObjectPosX,X\r\n$A556> 79 A9A5: ADC ElecBeamXMovementTable,Y    
    \r\n$A559> 9D 8004: STA ObjectPosX,X     \r\n\r\n$A55C> BD 6004: LDA ObjectPosScreen,X\r\n$A55F>
    69 00:   ADC #$00        \r\n$A561> 4C 73A5: JMP ++\r\n+\r\n$A564> 38:      SEC\r\n$A565>
    BD 8004: LDA ObjectPosX,X\r\n$A568> F9 A9A5: SBC ElecBeamXMovementTable,Y    
    \r\n$A56B> 9D 8004: STA ObjectPosX,X     \r\n\r\n$A56E> BD 6004: LDA ObjectPosScreen,X\r\n$A571>
    E9 00:   SBC #$00        \r\n++\r\n$A573> 9D 6004: STA ObjectPosScreen,X    
    \r\n$A576> 4C 26A5: JMP -\r\n+++\r\n$A579> A5 23:   LDA FrameCounter        \r\n$A57B>
    29 01:   AND #$01        \r\n$A57D> 18:      CLC             \r\n$A57E> 69 05:  
    ADC #$05        \r\n$A580> AA:      TAX             \r\n-\r\n$A581> BD 0006:
    LDA ObjectPosY,X     \r\n$A584> C9 F8:   CMP #$f8        \r\n$A586> F0 18:  
    BEQ +\r\n$A588> 85 0E:   STA $0E         \r\n$A58A> BD 6004: LDA ObjectPosScreen,X    
    \r\n$A58D> 85 0C:   STA $0C         \r\n$A58F> BD 8004: LDA ObjectPosX,X    
    \r\n$A592> 85 0D:   STA $0D         \r\n$A594> A4 8E:   LDY ActivesLowerIndex        
    \r\n$A596> 20 8ACD: JSR CheckCollisionAgainstActives       \r\n$A599> C9 82:  
    CMP #$82        \r\n$A59B> D0 03:   BNE +\r\n$A59D> 4C 8FF7: JMP GutsblockHitByElecBeam      
    \r\n+\r\n$A5A0> E8:      INX             \r\n$A5A1> E8:      INX            
    \r\n$A5A2> E0 0C:   CPX #$0C\r\n$A5A4> 90 DB:   BCC -\r\n++++\r\n$A5A6> 4C 09A7:
    JMP BKeyHoldingAI_PandI       \r\n\r\n; These tables define how Elecmanshots
    travel.\r\nElecBeamXMovementTable: .byte 28,32,32,28,24,28,28,28 ;At A5A9\r\nElecBeamYMovementTable:
    .byte -4,-24,0,28,16,-12,-4,-4 ;At A5B1\r\nElecBeamSpriteNumTable: .byte $67,$68,$69,$63,$64,$65,$66,$67
    ;At A5B9\r\n\r\nBKeyHoldingAI_G\r\n$A5C1> A5 61:   LDA NumberOfFramesSinceShooting        
    \r\n$A5C3> D0 03:   BNE +\r\n$A5C5> E6 61:   INC NumberOfFramesSinceShooting        
    \r\n$A5C7> 60:      RTS             \r\n+\r\n$A5C8> C9 10:   CMP #$10\r\n$A5CA>
    B0 3C:   BCS ++++\r\n$A5CC> AD 0004: LDA ObjectSpriteNum+0       \r\n$A5CF> C9
    12:   CMP #$12         ;getting hit by damage?\r\n$A5D1> F0 04:   BEQ +\r\n$A5D3>
    C9 13:   CMP #$13         ;getting stun by earthquake?\r\n$A5D5> D0 04:   BNE
    ++\r\n+\r\n$A5D7> A9 00:   LDA #$00        \r\n$A5D9> F0 02:   BEQ +++\r\n++\r\n$A5DB>
    A9 2F:   LDA #$2f   ; Give Megaman a delay when he throws it       \r\n+++\r\n$A5DD>
    8D 4006: STA ObjectFireDelay+0       \r\n\r\n; Make Megaman throw something...\r\n$A5E0>
    AD 2004: LDA ObjectFlags+0\r\n$A5E3> 29 40:   AND #$40        \r\n$A5E5> 09 24:  
    ORA #$24        \r\n\r\n$A5E7> 8D 2504: STA ObjectFlags+5\r\n$A5EA> AD 6004:
    LDA ObjectPosScreen+0                             ; $0460       \r\n$A5ED> 8D
    6504: STA ObjectPosScreen+5       \r\n$A5F0> AD 8004: LDA ObjectPosX+0      
    \r\n$A5F3> 8D 8504: STA ObjectPosX+5       \r\n$A5F6> AD 0006: LDA ObjectPosY+0     
    \r\n\r\n$A5F9> 38:      SEC\r\n$A5FA> E9 1A:   SBC #$1a        \r\n$A5FC> 8D
    0506: STA ObjectPosY+5       \r\n$A5FF> A9 00:   LDA #$00        \r\n$A601> 8D
    6506: STA ObjectYSpeedFraction+5       \r\n$A604> 8D 8506: STA ObjectYSpeed+5      
    \r\n$A607> 60:      RTS             \r\n++++\r\n$A608> AD 0004: LDA ObjectSpriteNum+0\r\n$A60B>
    C9 09:   CMP #$09         ;jumping?\r\n$A60D> D0 0D:   BNE +\r\n$A60F> A5 61:  
    LDA NumberOfFramesSinceShooting         \r\n$A611> C9 1F:   CMP #$1f        \r\n$A613>
    F0 07:   BEQ +\r\n$A615> E6 61:   INC NumberOfFramesSinceShooting         \r\n$A617>
    A9 6F:   LDA #$6f         ;throwing something while jumping\r\n$A619> 8D 0004:
    STA ObjectSpriteNum+0       \r\n+\r\n$A61C> 20 09A7: JSR BKeyHoldingAI_PandI      
    \r\n$A61F> 60:      RTS             \r\n\r\n\r\nBKeyHoldingAI_M\r\n$A620> A9
    05:   LDA #$05\r\n$A622> 85 2F:   STA RefObjectNumber         \r\n$A624> AE A005:
    LDX MagnetBeamLength+0       \r\n$A627> F0 63:   BEQ ++++\r\n$A629> A5 14:  
    LDA JoyPad0        \r\n$A62B> 29 02:   AND #$02        \r\n$A62D> F0 58:   BEQ
    +++\r\n$A62F> A9 1F:   LDA #$1f        \r\n$A631> 8D 4006: STA ObjectFireDelay+0  
    ;delay for Megaman (why?)       \r\n$A634> BD A005: LDA MagnetBeamLength,X    
    \r\n$A637> C9 41:   CMP #$41        \r\n$A639> F0 03:   BEQ +\r\n$A63B> FE A005:
    INC MagnetBeamLength,X     \r\n+\r\n$A63E> 0A:      ASL A           \r\n$A63F>
    69 10:   ADC #$10        \r\n$A641> 85 0C:   STA $0C         \r\n$A643> 29 07:  
    AND #$07        \r\n$A645> D0 07:   BNE +\r\n$A647> 18:      CLC            
    \r\n$A648> A5 0C:   LDA $0C         \r\n$A64A> 69 08:   ADC #$08        \r\n$A64C>
    85 0C:   STA $0C         \r\n+\r\n$A64E> AD 2004: LDA ObjectFlags+0 ; Make this
    object face the same direction as Megaman\r\n$A651> 29 40:   AND #$40       
    \r\n$A653> 9D 2004: STA ObjectFlags,X     \r\n$A656> F0 11:   BEQ +\r\n; RIGHT\r\n$A658>
    18:      CLC             \r\n$A659> AD 8004: LDA ObjectPosX+0       \r\n$A65C>
    65 0C:   ADC $0C         \r\n$A65E> 9D C005: STA MagnetBeamPosX,X     \r\n$A661>
    AD 6004: LDA ObjectPosScreen+0                             ; $0460       \r\n$A664>
    69 00:   ADC #$00        \r\n$A666> 4C 77A6: JMP ++\r\n+ ;LEFT\r\n$A669> 38:     
    SEC             \r\n$A66A> AD 8004: LDA ObjectPosX+0       \r\n$A66D> E5 0C:  
    SBC $0C         \r\n$A66F> 9D C005: STA MagnetBeamPosX,X     \r\n$A672> AD 6004:
    LDA ObjectPosScreen+0                             ; $0460       \r\n$A675> E9
    00:   SBC #$00        \r\n++\r\n$A677> 9D D005: STA MagnetBeamPosScreen,X    
    \r\n$A67A> AD 0006: LDA ObjectPosY+0      \r\n$A67D> 9D F005: STA MagnetBeamPosY,X    
    \r\n$A680> 20 BCF6: JSR CheckMagnetBeamCollisionWithBG       \r\n$A683> C0 01:  
    CPY #$01        \r\n$A685> D0 05:   BNE ++++\r\n+++\r\n$A687> A9 00:   LDA #$00       
    \r\n$A689> 8D A005: STA MagnetBeamLength       \r\n++++\r\n$A68C> A2 05:   LDX
    #$05        \r\n--\r\n$A68E> EC A005: CPX MagnetBeamLength       \r\n$A691> F0
    12:   BEQ +\r\n$A693> BD B005: LDA MagnetBeamAge,X     \r\n$A696> F0 58:   BEQ
    $A6F0               \r\n$A698> DE B005: DEC MagnetBeamAge,X     \r\n$A69B> D0
    08:   BNE +\r\n$A69D> A9 F8:   LDA #$f8        \r\n$A69F> 9D 0006: STA ObjectPosY,X    
    \r\n$A6A2> 4C F0A6: JMP +++\r\n+\r\n$A6A5> BD A005: LDA MagnetBeamLength,X    
    \r\n$A6A8> 29 7C:   AND #$7C        \r\n$A6AA> 0A:      ASL A           \r\n$A6AB>
    85 0D:   STA $0D         \r\n$A6AD> 69 08:   ADC #$08        \r\n$A6AF> 85 0C:  
    STA $0C         \r\n$A6B1> 38:      SEC             \r\n$A6B2> BD C005: LDA MagnetBeamPosX,X    
    \r\n$A6B5> E5 0C:   SBC $0C         \r\n$A6B7> 9D 8004: STA ObjectPosX,X    
    \r\n$A6BA> BD D005: LDA MagnetBeamPosScreen,X     \r\n$A6BD> E9 00:   SBC #$00       
    \r\n$A6BF> 9D 6004: STA ObjectPosScreen,X     \r\n$A6C2> BD E005: LDA MagnetBeamCyclePos,X    
    \r\n$A6C5> 0A:      ASL A           \r\n$A6C6> 0A:      ASL A           \r\n$A6C7>
    0A:      ASL A           \r\n$A6C8> 48:      PHA             \r\n$A6C9> C5 0D:   
    CMP $0D         \r\n$A6CB> F0 05:    BEQ +\r\n$A6CD> FE E005:  INC MagnetBeamCyclePos,X    
    \r\n$A6D0> D0 05:    BNE ++\r\n+\r\n$A6D2> A9 00:    LDA #$00        \r\n$A6D4>
    9D E005:  STA MagnetBeamCyclePos,X     \r\n++\r\n$A6D7> 68:      PLA            
    \r\n$A6D8> 0A:      ASL A           \r\n$A6D9> 09 08:   ORA #$08        \r\n$A6DB>
    18:      CLC             \r\n$A6DC> 7D 8004: ADC ObjectPosX,X     \r\n$A6DF>
    9D 8004: STA ObjectPosX,X        ;adjust beam piece pos\r\n$A6E2> BD 6004: LDA
    ObjectPosScreen,X     \r\n$A6E5> 69 00:   ADC #$00        \r\n$A6E7> 9D 6004:
    STA ObjectPosScreen,X     \r\n$A6EA> BD F005: LDA MagnetBeamPosY,X     \r\n$A6ED>
    9D 0006: STA ObjectPosY,X     \r\n+++\r\n$A6F0> E8:      INX             \r\n$A6F1>
    E0 10:   CPX #$10        \r\n$A6F3> D0 11:   BNE +\r\n$A6F5> A2 05:   LDX #$05       
    \r\n-\r\n$A6F7> BD B005: LDA MagnetBeamAge,X     \r\n$A6FA> D0 09:   BNE $A705              
    \r\n$A6FC> E8:      INX             \r\n$A6FD> E0 10:   CPX #$10        \r\n$A6FF>
    D0 F6:   BNE -\r\n$A701> A9 00:   LDA #$00        \r\n$A703> 85 60:   STA WeaponFiring        
    \r\n$A705> 60:      RTS             \r\n+\r\n$A706> 4C 8EA6: JMP --\r\n\r\n\r\nBKeyHoldingAI_PandI\r\n$A709>
    A2 02:   LDX #$02        \r\n-\r\n$A70B> BD 0006: LDA ObjectPosY,X     \r\n$A70E>
    C9 F8:   CMP #$f8        \r\n$A710> D0 0B:   BNE +\r\n$A712> E8:      INX            
    \r\n$A713> E0 10:   CPX #$10        \r\n$A715> D0 F4:   BNE -\r\n$A717> A9 00:  
    LDA #$00        \r\n$A719> 85 60:   STA WeaponFiring         \r\n$A71B> 85 61:  
    STA NumberOfFramesSinceShooting         \r\n+\r\n$A71D> 60:      RTS            
    \r\n\r\n\r\n\r\nMegamanWeaponFire\r\n$A71E> A5 5F:   LDA WeaponSelect\r\n$A720>
    AA:      TAX             \r\n$A721> 0A:      ASL A           \r\n$A722> A8:     
    TAY             \r\n$A723> F0 05:   BEQ +     ; P doesn't have a weapon meter\r\n$A725>
    B5 6A:   LDA Meters,X               \r\n$A727> D0 01:   BNE +     ; If there's
    still juice in that weapon\r\n$A729> 60:      RTS \r\n+\r\n$A72A> B9 37A7: LDA
    WeaponSelectTable+0,Y     \r\n$A72D> 85 04:   STA $04         \r\n$A72F> B9 38A7:
    LDA WeaponSelectTable+1,Y\r\n$A732> 85 05:   STA $05         \r\n$A734> 6C 0400:
    JMP ($0004)     \r\n\r\n; See also: WeaponAI_*\r\nWeaponSelectTable ; at $A737\r\n   
    .word MegamanWeaponFire_P\r\n    .word MegamanWeaponFire_C\r\n    .word MegamanWeaponFire_I\r\n   
    .word MegamanWeaponFire_B\r\n    .word MegamanWeaponFire_F\r\n    .word MegamanWeaponFire_E\r\n   
    .word MegamanWeaponFire_G\r\n    .word MegamanWeaponFire_M\r\n\r\nMegamanWeaponFire_P\r\n$A747>
    A2 02:   LDX #$02        \r\n-\r\n$A749> BD 0006: LDA ObjectPosY,X\r\n$A74C>
    C9 F8:   CMP #$f8        \r\n$A74E> F0 07:   BEQ +                                              
    ; $A757               \r\n$A750> E8:      INX             \r\n$A751> E0 05:  
    CPX #$05        \r\n$A753> D0 F4:   BNE -                                              
    ; $A749               \r\n\r\n$A755> F0 13:   BEQ ++                                             
    ; $A76A\r\n+\r\n$A757> A9 04:   LDA #$04\r\n$A759> 20 13A9: JSR LaunchMegamanWeaponShot      
    \r\n$A75C> A9 1F:   LDA #$1f        \r\n$A75E> 8D 4006: STA ObjectFireDelay+0 
    ;delay for Megaman if he's standing       \r\n\r\n$A761> A9 14:   LDA #$14       
    ; Shooting Megablaster bullet\r\n$A763> 20 77C4: JSR IssueSound                                     
    ; $C477       \r\n\r\n$A766> A9 C0:   LDA #$c0\r\n$A768> 85 60:   STA WeaponFiring        
    \r\n++\r\n$A76A> A6 2F:   LDX RefObjectNumber\r\n$A76C> 60:      RTS            
    \r\n\r\nMegamanWeaponFire_C\r\n$A76D> A9 0E:   LDA #$0e  ;scissor index in MegamanWeaponFireData\r\n$A76F>
    85 0C:   STA $0C         \r\n$A771> 20 AFA7: JSR MegamanThrowWeapon\r\n$A774>
    A9 80:   LDA #$80        \r\n$A776> 85 63:   STA $63         \r\n$A778> A9 02:  
    LDA #$02        \r\n$A77A> 85 64:   STA $64         \r\n\r\n$A77C> A9 25:   LDA
    #$25 ; scissor sound\r\n$A77E> 20 77C4: JSR IssueSound                                     
    ; $C477\r\n$A781> 4C C0A8: JMP MegamanWeaponConsumePower       \r\n\r\nMegamanWeaponFire_I\r\n$A784>
    A5 5F:   LDA WeaponSelect\r\n$A786> 09 C0:   ORA #$c0        \r\n$A788> 85 60:  
    STA WeaponFiring         \r\n$A78A> A9 05:   LDA #$05        \r\n$A78C> A2 05:  
    LDX #$05        \r\n$A78E> 20 13A9: JSR LaunchMegamanWeaponShot       \r\n$A791>
    B0 0D:   BCS +                                               ; $A7A0              
    \r\n$A793> A9 1F:   LDA #$1f        \r\n$A795> 8D 4006: STA ObjectFireDelay+0      
    \r\n\r\n$A798> A9 2A:   LDA #$2A ; ice sound\r\n$A79A> 20 77C4: JSR IssueSound                                     
    ; $C477       \r\n$A79D> 4C C0A8: JMP MegamanWeaponConsumePower       \r\n+\r\n$A7A0>
    60:      RTS\r\n\r\nMegamanWeaponFire_B\r\n$A7A1> A9 0D:   LDA #$0d ;bomb index
    in MegamanWeaponFireData\r\n$A7A3> 85 0C:   STA $0C         \r\n$A7A5> 20 AFA7:
    JSR MegamanThrowWeapon       \r\n$A7A8> A9 03:   LDA #$03        \r\n$A7AA> 85
    62:   STA $62         \r\n$A7AC> 20 C0A8: JSR MegamanWeaponConsumePower      
    \r\nMegamanThrowWeapon:\r\n$A7AF> A5 60:   LDA WeaponFiring         \r\n$A7B1>
    D0 17:   BNE +\r\n$A7B3> A5 5F:   LDA WeaponSelect         \r\n$A7B5> 09 C0:  
    ORA #$C0        \r\n$A7B7> 85 60:   STA WeaponFiring         \r\n$A7B9> A5 0C:  
    LDA $0C         \r\n$A7BB> A2 05:   LDX #$05        \r\n$A7BD> 20 13A9: JSR LaunchMegamanWeaponShot      
    \r\n$A7C0> B0 08:   BCS +\r\n$A7C2> A9 00:   LDA #$00        \r\n$A7C4> 85 61:  
    STA NumberOfFramesSinceShooting         \r\n$A7C6> 20 E6A8: JSR MegamanWeaponThrow      
    \r\n$A7C9> 60:      RTS             \r\n+\r\n$A7CA> 68:      PLA            
    \r\n$A7CB> 68:      PLA             \r\n$A7CC> 60:      RTS             \r\n\r\n\r\nMegamanWeaponFire_F\r\n$A7CD>
    A5 5F:   LDA WeaponSelect ; f shot\r\n$A7CF> 09 C0:   ORA #$c0        \r\n$A7D1>
    85 60:   STA WeaponFiring         \r\n$A7D3> A9 00:   LDA #$00        \r\n$A7D5>
    A2 05:   LDX #$05        \r\n$A7D7> 20 13A9: JSR LaunchMegamanWeaponShot      
    \r\n$A7DA> B0 18:   BCS +               \r\n$A7DC> A9 01:   LDA #$01        
    ; f shield?\r\n$A7DE> A2 06:   LDX #$06        \r\n$A7E0> 20 13A9: JSR LaunchMegamanWeaponShot      
    \r\n$A7E3> A9 1F:   LDA #$1f        \r\n$A7E5> 8D 4006: STA ObjectFireDelay+0      
    \r\n$A7E8> A9 00:   LDA #$00        \r\n$A7EA> 85 61:   STA NumberOfFramesSinceShooting        
    \r\n\r\n$A7EC> A9 2E:   LDA #$2E ; fire sound\r\n$A7EE> 20 77C4: JSR IssueSound                                     
    ; $C477       \r\n\r\n$A7F1> 4C C0A8: JMP MegamanWeaponConsumePower\r\n+\r\n$A7F4>
    A9 00:   LDA #$00        \r\n$A7F6> 8D 4006: STA ObjectFireDelay+0       \r\n-\r\n$A7F9>
    60:      RTS             \r\n\r\n\r\nMegamanWeaponFire_E\r\n$A7FA> A5 60:   LDA
    WeaponFiring\r\n$A7FC> D0 28:   BNE +\r\n$A7FE> A5 5F:   LDA WeaponSelect        
    \r\n$A800> 09 C0:   ORA #$c0        \r\n$A802> 85 60:   STA WeaponFiring        
    \r\n$A804> A9 06:   LDA #$06          ;Elecman item index\r\n-\r\n$A806> 85 0C:  
    STA $0C         \r\n$A808> AA:      TAX             \r\n$A809> CA:      DEX            
    \r\n$A80A> 20 13A9: JSR LaunchMegamanWeaponShot       \r\n$A80D> E6 0C:   INC
    $0C         \r\n$A80F> A5 0C:   LDA $0C         \r\n$A811> C9 0D:   CMP #$0d        
    ;Done elecman indexes?\r\n$A813> D0 F1:   BNE -\r\n$A815> A9 00:   LDA #$00       
    \r\n$A817> 85 61:   STA NumberOfFramesSinceShooting         \r\n$A819> A9 1F:  
    LDA #$1f        \r\n$A81B> 8D 4006: STA ObjectFireDelay+0       \r\n\r\n$A81E>
    A9 1E:   LDA #$1E ;elec sound.\r\n$A820> 20 77C4: JSR IssueSound                                     
    ; $C477       \r\n\r\n$A823> 4C C0A8: JMP MegamanWeaponConsumePower\r\n+\r\n$A826>
    60:      RTS             \r\n\r\n\r\nMegamanWeaponFire_G\r\n$A827> A5 60:   LDA
    WeaponFiring\r\n$A829> 29 40:   AND #$40        \r\n$A82B> D0 36:   BNE ++\r\n$A82D>
    A4 52:   LDY GutsmanWeaponTargetActive    \r\n$A82F> C0 FF:   CPY #$ff       
    \r\n$A831> F0 2A:   BEQ +\r\n$A833> A5 5F:   LDA WeaponSelect         \r\n$A835>
    09 80:   ORA #$80        \r\n$A837> 85 60:   STA WeaponFiring         \r\n$A839>
    A9 00:   LDA #$00        \r\n$A83B> 85 61:   STA NumberOfFramesSinceShooting\r\n$A83D>
    A9 04:   LDA #$04        \r\n$A83F> 99 2107: STA RoomActiveTable+1,Y    ;modify
    the gutsblock as disintegrated\r\n$A842> 20 6AF7: JSR LoadGutsblockPosition      
    \r\n$A845> 20 E8CD: JSR DrawBlockFromActiveLevelMap       \r\n$A848> A9 F8:  
    LDA #$f8        \r\n$A84A> 8D 0506: STA ObjectPosY+5       \r\n$A84D> A9 02:  
    LDA #$02                   ;guts debris\r\n$A84F> A2 05:   LDX #$05        \r\n$A851>
    20 13A9: JSR LaunchMegamanWeaponShot       \r\n$A854> A4 31:   LDY CurrentStage        
    \r\n$A856> B9 88A8: LDA GutsblockObjectSpritenum,Y     \r\n$A859> 9D 0004: STA
    ObjectSpriteNum,X     \r\n$A85C> 60:      RTS             \r\n+ ; Not able to
    do anything\r\n$A85D> A9 00:   LDA #$00\r\n$A85F> 8D 4006: STA ObjectFireDelay+0      
    \r\n$A862> 60:      RTS             \r\n++ ; Carrying a gutsblock and now pressed
    B. Launch the shot.\r\n$A863> A5 61:   LDA NumberOfFramesSinceShooting        
    \r\n$A865> C9 10:   CMP #$10        \r\n$A867> B0 1E:   BCS $A887              
    \r\n$A869> A9 F8:   LDA #$f8        \r\n$A86B> A2 05:   LDX #$05        \r\n$A86D>
    9D 0006: STA ObjectPosY,X     \r\n$A870> A9 03:   LDA #$03                     
    ;guts block being carried\r\n$A872> 20 13A9: JSR LaunchMegamanWeaponShot      
    \r\n$A875> A9 10:   LDA #$10        \r\n$A877> 85 61:   STA NumberOfFramesSinceShooting        
    \r\n$A879> 20 E6A8: JSR MegamanWeaponThrow       \r\n$A87C> A4 31:   LDY CurrentStage        
    \r\n$A87E> B9 88A8: LDA GutsblockObjectSpritenum,Y     \r\n$A881> 9D 0004: STA
    ObjectSpriteNum,X     \r\n$A884> 4C C0A8: JMP MegamanWeaponConsumePower      
    \r\n$A887> 60:      RTS             \r\n\r\nGutsblockObjectSpritenum: ;indexed
    by stage. Stages I,B,F don't have gutsblocks.\r\n    .byte $6C, $00, $00, $00,
    $6C, $32\r\n    .byte $6C, $6C, $6C, $6C, $6C\r\n\r\nMegamanWeaponFire_M\r\n$A893 
    A2 05:   ldx #$05 ;find a slot for the beam\r\n-\r\n$A895> BD B005: LDA MagnetBeamAge,X    
    \r\n$A898> F0 06:   BEQ +\r\n$A89A> E8:      INX             \r\n$A89B> E0 0A:  
    CPX #$0a        \r\n$A89D> D0 F6:   BNE -\r\n$A89F> 60:      RTS\r\n+            
    \r\n$A8A0> 8E A005: STX MagnetBeamLength       \r\n$A8A3> A9 0F:   LDA #$0f            
    ;magnetbeam index in MegamanWeaponFireData\r\n$A8A5> 20 13A9: JSR LaunchMegamanWeaponShot      
    \r\n$A8A8> A9 00:   LDA #$00        \r\n$A8AA> 9D A005: STA MagnetBeamLength,X    
    \r\n$A8AD> 9D E005: STA MagnetBeamCyclePos,X     \r\n$A8B0> A9 9C:   LDA #$9C       
    \r\n$A8B2> 9D B005: STA MagnetBeamAge,X     \r\n\r\n$A8B5> A5 5F:   LDA WeaponSelect\r\n$A8B7>
    09 C0:   ORA #$C0        \r\n$A8B9> 85 60:   STA WeaponFiring         \r\n\r\n$A8BB>
    A9 13:   LDA #$13 ;Bzzt sound\r\n$A8BD> 20 77C4: JSR IssueSound                                     
    ; $C477\r\nMegamanWeaponConsumePower\r\n$A8C0> A6 5F:   LDX WeaponSelect        
    \r\n\r\n$A8C2> F6 9E:   INC MetersFraction,X\r\n$A8C4> B5 9E:   LDA MetersFraction,X              
    \r\n$A8C6> DD D7A8: CMP WeaponPowerConsumptionDenominator-1,X     \r\n$A8C9>
    D0 0C:   BNE +     \r\n\r\n$A8CB> A9 00:   LDA #$00\r\n$A8CD> 95 9E:   STA MetersFraction,X              
    \r\n$A8CF> 38:      SEC\r\n$A8D0> B5 6A:   LDA Meters,X               \r\n$A8D2>
    FD DEA8: SBC WeaponPowerConsumptionNominator-1,X     \r\n$A8D5> 95 6A:   STA
    Meters,X               \r\n+\r\n$A8D7> 60:      RTS\r\n\r\n; At A8D8\r\nWeaponPowerConsumptionDenominator
    ; If it says \"5\" here, it'll take 5 shots until power is consumed\r\n    ;    
    C,I,B,F,E,G,M\r\n    .byte 1,1,1,1,1,1,1\r\nWeaponPowerConsumptionNominator ;
    At A8DF\r\n    ;     C,I,B,F,E,G,M\r\n    .byte 1,1,2,1,1,2,2\r\n\r\nMegamanWeaponThrow\r\n$A8E6>
    A9 00:   LDA #$00        \r\n$A8E8> 8D 4004: STA ObjectUnknown440+0       \r\n$A8EB>
    AD 0004: LDA ObjectSpriteNum+0       \r\n$A8EE> C9 09:   CMP #$09         ;jumping?\r\n$A8F0>
    D0 07:   BNE +\r\n$A8F2> A9 00:   LDA #$00        \r\n$A8F4> 8D 4006: STA ObjectFireDelay+0      
    \r\n$A8F7> F0 19:   BEQ +++\r\n+\r\n$A8F9> C9 15:   CMP #$15        ;climbing?\r\n$A8FB>
    F0 04:   BEQ +\r\n$A8FD> C9 17:   CMP #$17        ;unclimbing?   \r\n$A8FF> D0
    07:   BNE ++       \r\n+\r\n$A901> A9 1F:   LDA #$1f        \r\n$A903> 8D 4006:
    STA ObjectFireDelay+0       \r\n$A906> D0 0A:   BNE +++\r\n++\r\n; Make Megaman
    throw something\r\n$A908> AD 2004: LDA ObjectFlags+0\r\n$A90B> 29 F0:   AND #$f0       
    \r\n$A90D> 09 04:   ORA #$04        \r\n$A90F> 8D 2004: STA ObjectFlags+0      
    \r\n+++\r\n$A912> 60:      RTS\r\n\r\n\r\nLaunchMegamanWeaponShot:\r\n;     X
    = object number\r\n;     A = fire type\r\n;            0 = F shot\r\n;           
    1 = F shield (or vice versa)\r\n;            2 = Guts (debris)\r\n;           
    3 = Guts (?)\r\n;            4 = P\r\n;            5 = I\r\n;      6..#$0C =
    Elec (each parts of them...)\r\n;         #$0D = Bomb\r\n;         #$0E = C\r\n;        
    #$0F = M\r\n\r\n; Y = A*9\r\n\r\n$A913> 85 0C:   STA $0C\r\n$A915> 0A:      ASL
    A           \r\n$A916> 0A:      ASL A           \r\n$A917> 0A:      ASL A          
    \r\n$A918> 18:      CLC             \r\n$A919> 65 0C:   ADC $0C         \r\n$A91B>
    A8:      TAY             \r\n$A91C> BD 0006: LDA ObjectPosY,X     \r\n$A91F>
    C9 F8:   CMP #$f8        \r\n$A921> F0 02:   BEQ +\r\n$A923> 38:      SEC            
    \r\n$A924> 60:      RTS             \r\n+\r\n$A925> B9 99A9: LDA MegamanWeaponFireData+0,Y\r\n$A928>
    9D 0004: STA ObjectSpriteNum,X     \r\n$A92B> B9 9AA9: LDA MegamanWeaponFireData+1,Y    
    \r\n$A92E> 9D 4004: STA ObjectUnknown440,X     \r\n$A931> AD 2004: LDA ObjectFlags+0      
    \r\n$A934> 29 40:   AND #$40        \r\n$A936> 08:      PHP             \r\n$A937>
    19 9BA9:  ORA MegamanWeaponFireData+2,Y     \r\n$A93A> 9D 2004:  STA ObjectFlags,X    
    \r\n$A93D> A9 00:    LDA #$00        \r\n$A93F> 9D A006:  STA ObjectLifeCycleCounter,X    
    \r\n$A942> 9D 4006:  STA ObjectFireDelay,X     \r\n$A945> 9D A004:  STA ObjectPosXfraction,X    
    \r\n$A948> 9D 2006:  STA ObjectPosYfraction,X     \r\n$A94B> B9 9CA9:  LDA MegamanWeaponFireData+3,Y    
    \r\n$A94E> 9D 6006:  STA ObjectYSpeedFraction,X     \r\n$A951> B9 9DA9:  LDA
    MegamanWeaponFireData+4,Y     \r\n$A954> 9D 8006:  STA ObjectYSpeed,X     \r\n$A957>
    B9 9EA9:  LDA MegamanWeaponFireData+5,Y     \r\n$A95A> 9D E004:  STA ObjectXSpeedFraction,X    
    \r\n$A95D> B9 9FA9:  LDA MegamanWeaponFireData+6,Y     \r\n$A960> 9D C004:  STA
    ObjectXSpeed,X     \r\n$A963> 18:       CLC             \r\n$A964> AD 0006: 
    LDA ObjectPosY+0      \r\n$A967> 79 A0A9:  ADC MegamanWeaponFireData+7,Y    
    \r\n$A96A> C9 F8:    CMP #$f8        \r\n$A96C> D0 02:    BNE +\r\n$A96E> A9
    F9:    LDA #$f9        \r\n+\r\n$A970> 9D 0006:  STA ObjectPosY,X     \r\n$A973>
    AD 8004:  LDA ObjectPosX+0       \r\n$A976> 28:      PLP             \r\n$A977>
    F0 0F:   BEQ +\r\n$A979> 18:      CLC             \r\n$A97A> 79 A1A9: ADC MegamanWeaponFireData+8,Y    
    \r\n$A97D> 9D 8004: STA ObjectPosX,X     \r\n$A980> AD 6004: LDA ObjectPosScreen+0                            
    ; $0460       \r\n$A983> 69 00:   ADC #$00        \r\n$A985> 4C 94A9: JMP ++\r\n+\r\n$A988>
    38:      SEC             \r\n$A989> F9 A1A9: SBC MegamanWeaponFireData+8,Y    
    \r\n$A98C> 9D 8004: STA ObjectPosX,X     \r\n$A98F> AD 6004: LDA ObjectPosScreen+0                            
    ; $0460       \r\n$A992> E9 00:   SBC #$00        \r\n++\r\n$A994> 9D 6004: STA
    ObjectPosScreen,X     \r\n$A997> 18:      CLC             \r\n$A998> 60:     
    RTS             \r\n\r\nMegamanWeaponFireData: ; at A999\r\n        ; 0->ObjectSpriteNum\r\n       
    ; 1->ObjectUnknown440\r\n        ; 2->ObjectFlags\r\n        ; 3->ObjectYSpeedFraction\r\n       
    ; 4->ObjectYSpeed\r\n        ; 5->ObjectXSpeedFraction\r\n        ; 6->ObjectXSpeed\r\n       
    ; 7->ObjectPosY\r\n        ; 8->ObjectPosX\r\n    .byte $60,$00,$04,$00,$00,$00,$04,$00,$10
    ;f shot\r\n    .byte $61,$00,$04,$00,$00,$00,$00,$EC,$00 ;f shield (?)\r\n   
    .byte $00,$00,$24,$00,$00,$00,$00,$F0,$10 ;guts debris\r\n    .byte $6C,$00,$15,$00,$03,$A0,$03,$F0,$10
    ;guts block being carried(?)\r\n    .byte $1A,$00,$00,$00,$00,$00,$04,$00,$10
    ;P\r\n    .byte $5C,$00,$04,$00,$00,$00,$04,$00,$10 ;I\r\n    .byte $62,$40,$04,$00,$00,$50,$01,$FC,$10
    ;elec\r\n    .byte $63,$30,$04,$00,$00,$50,$01,$08,$14 ;elec\r\n    .byte $64,$20,$04,$00,$00,$50,$01,$FC,$18
    ;elec\r\n    .byte $65,$10,$04,$00,$00,$50,$01,$EC,$20 ;elec\r\n    .byte $66,$01,$04,$00,$00,$50,$01,$EC,$28
    ;elec\r\n    .byte $6A,$00,$04,$00,$06,$00,$00,$F0,$10 ;elec\r\n    .byte $6B,$00,$04,$00,$FA,$00,$00,$10,$10
    ;elec\r\n    .byte $5D,$00,$11,$00,$03,$80,$01,$FC,$0C ;B\r\n    .byte $5B,$00,$04,$00,$02,$00,$02,$FC,$0C
    ;C\r\n    .byte $5E,$00,$00,$00,$00,$00,$00,$00,$00 ;M\r\n\r\n; Seems to animate
    the object\r\n\r\nDoEnemyAI\r\n$AA29> BD E006: LDA ObjectType,X\r\n$AA2C> 0A:     
    ASL A\r\n$AA2D> A8:      TAY\r\n$AA2E> B9 3BAA: LDA EnemyAIaddr+0,Y     \r\n$AA31>
    85 04:   STA $04\r\n$AA33> B9 3CAA: LDA EnemyAIaddr+1,Y     \r\n$AA36> 85 05:  
    STA $05\r\n$AA38> 6C 0400: JMP ($0004)     \r\n\r\nEnemyAIaddr ;at AA77\r\n.word
    AI_Blader               ; 00    Blader/Bunbi Heri\r\n.word AI_Met                 
    ; 01    Met/Metall/Hard Hat\r\n.word AI_Flea                 ; 02    Flea\r\n.word
    AI_Spine                ; 03    Spine/Gabyoall\r\n.word AI_Eyecube             
    ; 04    Octopus Battery/Suzy (vertical moving)\r\n.word AI_ScrewBomberFloor    
    ; 05    Screw bomber (on floor)\r\n.word AI_Watcher              ; 06    Watcher\r\n.word
    AI_SinewaveFlier        ; 07    Peng\r\n.word AI_SinewaveFlier        ; 08   
    Killer bullet\r\n.word AI_BigEye               ; 09    Big Eye\r\n.word AI_FlyingShell         
    ; 0A    Flying Shell/Shellgun/Hamburger\r\n.word AI_Beak                 ; 0B   
    Beak/wallgun (on right wall)\r\n.word AI_Electricity          ; 0C    Electricity
    A\r\n.word AI_Bombomb              ; 0D    Bombomb\r\n.word AI_ZigzagFire          
    ; 0E    Zig-zag fire\r\n.word AI_VerticalFire         ; 0F    Vertical fire\r\n.word
    AI_TemporaryBlockManager ;10\r\n.word AI_Generic              ; 11\r\n.word AI_SniperJoe           
    ; 12    Sniper Joe\r\n.word AI_FootHolder           ; 13    Foot holder\r\n.word
    AI_HeadLosingRobot      ; 14    Crazy Razy (??? seems not)\r\n.word AI_PicketMan           
    ; 15    Picket Man\r\n.word AI_ScrewBomberCeiling   ; 16    Screw bomber (on
    ceiling)\r\n.word AI_Beak                 ; 17\r\n.word AI_GenericWithLifeTimer
    ; 18    Horizontal firestump\r\n.word AI_Electricity          ; 19\r\n.word AI_Generic             
    ; 1A\r\n.word AI_Object1B             ; 1B    Explosion?...\r\n.word AI_Object1C            
    ; 1C    Scissor machine?\r\n.word AI_Object1D             ; 1D\r\n.word AI_Object1E            
    ; 1E\r\n.word AI_RogueRobotHead       ; 1F    It's the head of HeadLosingRobot\r\n.word
    AI_Object20             ; 20\r\n.word AI_Eyecube              ; 21    Octopus
    Battery/Suzy (horizontal moving)\r\n.word AI_Beak                 ; 22    Beak/wallgun
    (on left wall)\r\n.word AI_Beak                 ; 23\r\n.word AI_Electricity         
    ; 24    Electricity B\r\n.word AI_Electricity          ; 25\r\n.word AI_BombombCluster      
    ; 26    Bombomb cluster\r\n.word AI_TemporaryBlock       ; 27    Temporary block\r\n.word
    AI_Object28             ; 28    (Bomb explodes) individual explosion part (lives
    for 14 frames)\r\n.word AI_Object29             ; 29 \r\n.word AI_Object2A            
    ; 2A\r\n.word AI_Generic              ; 2B\r\n.word AI_LiftAnimator         ;
    2C    Lift\r\n.word AI_Generic              ; 2D    Diagonal bullet dowm (from
    Met)\r\n.word AI_Generic              ; 2E\r\n.word AI_Object2F             ;
    2F Gutsman stage: Enable lift sound. Wily3: Control waterpipe\r\n.word AI_Object30            
    ; 30 Gutsman stage: Stop SFX. Wily3: Setup BG palette\r\n.word AI_TackleFire          
    ; 31    Tackle fire\r\n.word AI_Object32             ; 32 Rotates palettes (Fireman
    and Wily2 battle)\r\n.word AI_Object33             ; 33  Scissor weapon?\r\n.word
    AI_Generic              ; 34  Ice weapon?\r\n.word AI_Object35             ;
    35  Bomb weapon?\r\n.word AI_Generic              ; 36  Fire weapon?\r\n.word
    AI_Object37             ; 37  Fire shield weapon?\r\n.word AI_Object38            
    ; 38\r\n.word AI_Object39             ; 39\r\n.word AI_Object3A             ;
    3A  Boss8 (Wily3 boss)\r\n.word AI_Object3B             ; 3B\r\n\r\n.word AI_GenericWithLifeTimer           
    ; 3C    Bonus pearl\r\n.word AI_GenericWithLifeTimer            ; 3D    Small
    weapon capsule\r\n.word AI_GenericWithLifeTimer            ; 3E\r\n.word AI_GenericWithLifeTimer           
    ; 3F    Large weapon capsule\r\n.word AI_GenericWithLifeTimer            ; 40   
    Large Life Capsule\r\n.word AI_GenericWithLifeTimer            ; 41    ExtraLife\r\n\r\n.word
    AI_Generic   ; 42    Magnet beam adapter\r\n.word AI_Generic   ; 43    Teleport\r\n.word
    AI_Generic   ; 44    Level-end\r\n.word AI_Generic   ; 45    Yashichi\r\n.word
    AI_Generic   ; 46\r\n.word AI_Generic   ; 47\r\n\r\n.word AI_Object48  ; 48\r\n.word
    AI_Generic   ; 49    Random powerup (?)\r\n.word AI_Object4A  ; 4A\r\n\r\nAI_Blader\r\n$AAD1>
    BD 4006: LDA ObjectFireDelay,X\r\n$AAD4> D0 3F:   BNE ++\r\n$AAD6> 20 3BF6: JSR
    EnemySearchMegaman\r\n$AAD9> C9 28:   CMP #$28        \r\n$AADB> 90 03:   BCC
    +                                               ; $AAE0               \r\n$AADD>
    4C 5FAB: JMP +++\r\n+\r\n$AAE0> 38:      SEC\r\n$AAE1> AD 0006: LDA ObjectPosY+0     
    \r\n$AAE4> FD 0006: SBC ObjectPosY,X     \r\n$AAE7> 08:      PHP            
    \r\n$AAE8> B0 04:   BCS +\r\n$AAEA> 49 FF:   EOR #$ff        \r\n$AAEC> 69 01:  
    ADC #$01        \r\n+\r\n$AAEE> AA:      TAX             \r\n$AAEF> A0 00:  
    LDY #$00        \r\n$AAF1> A9 18:   LDA #$18        \r\n$AAF3> 20 ACC5: JSR EnemyCalculateJumpCurveToHitMegaman      
    \r\n$AAF6> A6 2F:   LDX RefObjectNumber         \r\n$AAF8> A5 04:   LDA $04        
    \r\n$AAFA> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$AAFD> A5 05:   LDA $05        
    \r\n$AAFF> 9D 8006: STA ObjectYSpeed,X     \r\n$AB02> 28:      PLP            
    \r\n$AB03> 90 03:   BCC +\r\n$AB05> 20 63AB:  JSR ObjectFlipYmovement       \r\n+\r\n$AB08>
    A9 33:   LDA #$33        \r\n$AB0A> 9D 4006: STA ObjectFireDelay,X     \r\n$AB0D>
    A9 00:   LDA #$00        \r\n$AB0F> 9D E004: STA ObjectXSpeedFraction,X     \r\n$AB12>
    9D C004: STA ObjectXSpeed,X     \r\n++\r\n$AB15> BD 4006: LDA ObjectFireDelay,X    
    \r\n$AB18> C9 1B:   CMP #$1B        \r\n$AB1A> 90 14:   BCC +\r\n$AB1C> 18:      
    CLC             \r\n$AB1D> BD E004:  LDA ObjectXSpeedFraction,X     \r\n$AB20>
    69 18:    ADC #$18        \r\n$AB22> 9D E004:  STA ObjectXSpeedFraction,X    
    \r\n$AB25> BD C004:  LDA ObjectXSpeed,X     \r\n$AB28> 69 00:    ADC #$00       
    \r\n$AB2A> 9D C004:  STA ObjectXSpeed,X     \r\n$AB2D> 4C 48AB:  JMP ++\r\n+\r\n$AB30>
    C9 1A:   CMP #$1A\r\n$AB32> D0 03:   BNE +\r\n$AB34> 20 63AB: JSR ObjectFlipYmovement      
    \r\n+\r\n$AB37> 18:      CLC             \r\n$AB38> BD E004: LDA ObjectXSpeedFraction,X    
    \r\n$AB3B> 69 04:   ADC #$04        \r\n$AB3D> 9D E004: STA ObjectXSpeedFraction,X    
    \r\n$AB40> BD C004: LDA ObjectXSpeed,X     \r\n$AB43> 69 00:   ADC #$00       
    \r\n$AB45> 9D C004: STA ObjectXSpeed,X     \r\n++\r\n$AB48> DE 4006: DEC ObjectFireDelay,X    
    \r\n$AB4B> D0 12:   BNE +++\r\n$AB4D> A9 00:   LDA #$00        \r\n$AB4F> 9D
    8006: STA ObjectYSpeed,X     \r\n$AB52> 9D 6006: STA ObjectYSpeedFraction,X    
    \r\n$AB55> A9 01:   LDA #$01        \r\n$AB57> 9D C004: STA ObjectXSpeed,X    
    \r\n$AB5A> A9 20:   LDA #$20        \r\n$AB5C> 9D E004: STA ObjectXSpeedFraction,X    
    \r\n+++\r\n$AB5F> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$AB62>
    60:      RTS             \r\n\r\n\r\nObjectFlipYmovement\r\n$AB63> 18:      CLC\r\n$AB64>
    BD 6006: LDA ObjectYSpeedFraction,X     \r\n$AB67> 49 FF:   EOR #$ff        \r\n$AB69>
    69 01:   ADC #$01        \r\n$AB6B> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$AB6E>
    BD 8006: LDA ObjectYSpeed,X     \r\n$AB71> 49 FF:   EOR #$ff        \r\n$AB73>
    69 00:   ADC #$00        \r\n$AB75> 9D 8006: STA ObjectYSpeed,X     \r\n$AB78>
    60:      RTS             \r\n\r\n\r\nAI_Met\r\n$AB79> 20 A5B3: JSR $B3A5\r\n$AB7C>
    BD 4004: LDA ObjectUnknown440,X     \r\n$AB7F> 29 F0:   AND #$f0        \r\n$AB81>
    F0 45:   BEQ $ABC8               \r\n$AB83> A0 10:   LDY #$10        \r\n$AB85>
    BD 4006: LDA ObjectFireDelay,X     \r\n$AB88> F0 2C:   BEQ ++                                             
    ; $ABB6               \r\n$AB8A> C9 10:   CMP #$10        \r\n$AB8C> D0 53:  
    BNE $ABE1               \r\n\r\n$AB8E> A9 02:   LDA #$02\r\n$AB90> 85 0C:   STA
    $0C         \r\n-\r\n$AB92> A9 2D:   LDA #$2d\r\n$AB94> 20 63F6: JSR CreateEnemy                                      
    ; $F663       \r\n$AB97> B0 17:   BCS +                                              
    ; $ABB0               \r\n\r\n; Make this bullet appear 4 pixels above the Met
    object\r\n$AB99> 38:      SEC\r\n$AB9A> BD 0006: LDA ObjectPosY,X     \r\n$AB9D>
    E9 04:   SBC #$04        \r\n$AB9F> 9D 0006: STA ObjectPosY,X     \r\n\r\n$ABA2>
    A5 0C:   LDA $0C\r\n$ABA4> 0A:      ASL A           \r\n$ABA5> 0A:      ASL A          
    \r\n$ABA6> 69 4C:   ADC #$4c        \r\n$ABA8> A8:      TAY             \r\n\r\n$ABA9>
    20 33F5: JSR InitObjectDefaultSpeed\r\n$ABAC> C6 0C:   DEC $0C         \r\n$ABAE>
    10 E2:   BPL -                                               ; $AB92              
    \r\n+\r\n$ABB0> A6 2F:   LDX RefObjectNumber\r\n$ABB2> A0 10:   LDY #$10       
    \r\n$ABB4> D0 2B:   BNE $ABE1               \r\n++\r\n$ABB6> A9 03:   LDA #$03\r\n$ABB8>
    20 A0C5: JSR RandomFunc       \r\n$ABBB> A6 2F:   LDX RefObjectNumber        
    \r\n$ABBD> A8:      TAY             \r\n$ABBE> B9 EFAB: LDA $ABEF,Y     \r\n$ABC1>
    9D 4006: STA ObjectFireDelay,X     \r\n$ABC4> A0 00:   LDY #$00        \r\n$ABC6>
    F0 19:   BEQ $ABE1               \r\n\r\n\r\n\r\n$ABC8> 20 3BF6: JSR EnemySearchMegaman\r\n$ABCB>
    85 0C:   STA $0C         \r\n$ABCD> A0 00:   LDY #$00        \r\n$ABCF> BD 4006:
    LDA ObjectFireDelay,X     \r\n$ABD2> D0 0D:   BNE $ABE1               \r\n$ABD4>
    A5 0C:   LDA $0C         \r\n$ABD6> C9 58:   CMP #$58        \r\n$ABD8> B0 0A:  
    BCS $ABE4               \r\n$ABDA> A9 20:   LDA #$20        \r\n$ABDC> 9D 4006:
    STA ObjectFireDelay,X     \r\n$ABDF> A0 10:   LDY #$10        \r\n\r\n\r\n$ABE1>
    DE 4006: DEC ObjectFireDelay,X\r\n$ABE4> 98:      TYA             \r\n$ABE5>
    9D 4004: STA ObjectUnknown440,X     \r\n$ABE8> 20 A3AF: JSR $AFA3       \r\n$ABEB>
    20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$ABEE> 60:      RTS            
    \r\n\r\n$ABEF> 1F:      .byte $1f\r\n$ABF0> 3E:      .byte $3E\r\n$ABF1> 9C:     
    .byte $9C\r\n\r\n\r\n; Flea and Big Eye both use the same AI routine, but with
    different parameter\r\n\r\nAI_BigEye\r\n$ABF2> A9 6C:   LDA #$6C ;index into
    F54C_table for BigEye\r\n$ABF4> D0 02:   BNE +                                              
    ; $ABF8\r\n\r\nAI_Flea\r\n$ABF6> A9 00:   LDA #$00 ;index into F54C_table for
    Flea\r\n+\r\n$ABF8> 85 0C:   STA $0C\r\n$ABFA> BD 4004: LDA ObjectUnknown440,X    
    \r\n$ABFD> C9 10:   CMP #$10        \r\n$ABFF> 90 3E:   BCC ++++                                           
    ; $AC3F               \r\n\r\n\r\n$AC01> A5 23:   LDA FrameCounter    ; Skip
    every 4th frame\r\n$AC03> 29 03:   AND #$03        \r\n$AC05> F0 37:   BEQ +++                                            
    ; $AC3E               \r\n\r\n$AC07> BD 8006: LDA ObjectYSpeed,X\r\n$AC0A> 08:     
    PHP             \r\n$AC0B> 20 49BE:  JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$AC0E> 28:      PLP             \r\n$AC0F> 10 21:   BPL ++                                             
    ; $AC32               \r\n$AC11> A5 2B:   LDA $2B         \r\n$AC13> F0 1D:  
    BEQ ++                                              ; $AC32               \r\n\r\n;
    If ObjectType = Big Eye then issue sound\r\n$AC15> BD E006: LDA ObjectType,X\r\n$AC18>
    C9 09:   CMP #$09        \r\n$AC1A> D0 07:   BNE +                                              
    ; $AC23               \r\n$AC1C> A9 29:   LDA #$29        ; Big Eye sound\r\n$AC1E>
    20 77C4: JSR IssueSound                                      ; $C477       \r\n$AC21>
    A6 2F:   LDX RefObjectNumber\r\n+\r\n$AC23> A9 0F:   LDA #$0f\r\n$AC25> 9D 4006:
    STA ObjectFireDelay,X     \r\n$AC28> A9 00:   LDA #$00        \r\n$AC2A> 9D E004:
    STA ObjectXSpeedFraction,X     \r\n$AC2D> 9D C004: STA ObjectXSpeed,X     \r\n$AC30>
    F0 09:   BEQ +                                               ; $AC3B              
    \r\n++\r\n$AC32> BD E006: LDA ObjectType,X\r\n$AC35> C9 1B:   CMP #$1b       
    \r\n$AC37> F0 05:   BEQ +++                                             ; $AC3E              
    \r\n$AC39> A9 10:   LDA #$10        \r\n+\r\n$AC3B> 9D 4004: STA ObjectUnknown440,X\r\n+++\r\n$AC3E>
    60:      RTS\r\n++++\r\n$AC3F> A9 00:   LDA #$00\r\n$AC41> DE 4006: DEC ObjectFireDelay,X    
    \r\n$AC44> D0 11:   BNE +\r\n$AC46> 20 3BF6: JSR EnemySearchMegaman       \r\n$AC49>
    A5 46:   LDA RandomSeed         \r\n$AC4B> 29 01:   AND #$01        \r\n$AC4D>
    0A:      ASL A           \r\n$AC4E> 0A:      ASL A           \r\n$AC4F> 65 0C:  
    ADC $0C         \r\n$AC51> A8:      TAY             \r\n$AC52> 20 33F5: JSR InitObjectDefaultSpeed      
    \r\n$AC55> A9 10:   LDA #$10        \r\n+\r\n$AC57> 9D 4004: STA ObjectUnknown440,X    
    \r\n$AC5A> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$AC5D> 60:     
    RTS             \r\n\r\nAI_Spine\r\n; if spine stunned #$7E => $6A0,X (disable
    for 126 frames)\r\n$AC5E> BD 2004: LDA ObjectFlags,X\r\n$AC61> 29 80:   AND #$80       
    \r\n$AC63> F0 05:   BEQ +                                               ; $AC6A\r\n$AC65>
    A9 7E:   LDA #$7e        \r\n$AC67> 9D A006: STA ObjectLifeCycleCounter,X\r\n+\r\n\r\n;
    Handle spine's chasing of Megaman\r\n; Y = 1 if spine and Megaman are are at
    the same Y position, 0 otherwise\r\n$AC6A> A0 00:   LDY #$00\r\n$AC6C> 38:     
    SEC             \r\n$AC6D> BD 0006: LDA ObjectPosY,X     \r\n$AC70> E9 08:  
    SBC #$08        \r\n$AC72> CD 0006: CMP ObjectPosY+0      \r\n$AC75> D0 01:  
    BNE +                                               ; $AC78\r\n$AC77> C8:     
    INY             \r\n+\r\n\r\n; $4E0 = spine speed\r\n$AC78> B9 C6AC: LDA SpineSpeedTableFractions,Y\r\n$AC7B>
    9D E004: STA ObjectXSpeedFraction,X     \r\n\r\n$AC7E> B9 C8AC: LDA SpineSpeedTable,Y\r\n$AC81>
    9D C004: STA ObjectXSpeed,X     \r\n\r\n\r\n$AC84> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck\r\n\r\n\r\n$AC87>
    A5 2A:   LDA $2A\r\n$AC89> F0 09:   BEQ +                                              
    ; $AC94\r\n\r\n-\r\n; Flip direction\r\n$AC8B> BD 2004: LDA ObjectFlags,X\r\n$AC8E>
    49 40:   EOR #$40        \r\n$AC90> 9D 2004: STA ObjectFlags,X     \r\n$AC93>
    60:      RTS             \r\n+\r\n\r\n; #$00 => Y if facing right, #$02 => Y
    if facing left\r\n$AC94> A0 00:   LDY #$00\r\n$AC96> BD 2004: LDA ObjectFlags,X    
    \r\n$AC99> 29 40:   AND #$40        \r\n$AC9B> D0 02:   BNE +                                              
    ; $AC9F               \r\n$AC9D> A0 02:   LDY #$02        \r\n+\r\n\r\n; ObjectPosX
    + #$10 => $00,$01 if facing right\r\n; ObjectPosX - #$10 => $00,$01 if facing
    left\r\n\r\n$AC9F> 18:      CLC\r\n$ACA0> BD 8004: LDA ObjectPosX,X     \r\n$ACA3>
    79 C3AC: ADC SpineCollisionTestTable+1,Y     \r\n$ACA6> 85 00:   STA $00        
    \r\n$ACA8> BD 6004: LDA ObjectPosScreen,X     \r\n$ACAB> 79 C2AC: ADC SpineCollisionTestTable+0,Y    
    \r\n$ACAE> 85 01:   STA $01         \r\n\r\n; ObjectPosY + #$06 => $03\r\n$ACB0>
    18:      CLC\r\n$ACB1> BD 0006: LDA ObjectPosY,X\r\n$ACB4> 69 06:   ADC #$06\r\n$ACB6>
    85 03:   STA $03\r\n\r\n$ACB8> 20 2DCC: JSR DoCollisionCheckFor\r\n$ACBB> A5
    2B:   LDA $2B         \r\n$ACBD> C9 01:   CMP #$01        \r\n$ACBF> D0 CA:  
    BNE -                                               ; $AC8B               \r\n\r\n$ACC1>
    60:      RTS\r\n\r\nSpineCollisionTestTable\r\n    .byte $00,$10 ; +16\r\n   
    .byte $FF,$F0 ; -16\r\nSpineSpeedTableFractions\r\n    .byte $61  ;slow speed:
    0.379 pix/sec\r\n    .byte $E0  ;fast speed: 1.875 pix/sec\r\nSpineSpeedTable\r\n   
    .byte $00\r\n    .byte $01\r\n\r\nAI_Eyecube\r\n$ACCA> BD 8006: LDA ObjectYSpeed,X\r\n$ACCD>
    48:      PHA\r\n$ACCE> 20 49BE:  JSR EnemyAI_MovementsAndDamageCheck\r\n$ACD1>
    B0 51:    BCS AI_EyecubeRTS                            ; $AD24\r\n$ACD3> BD E006: 
    LDA ObjectType,X\r\n$ACD6> C9 1B:    CMP #$1b        \r\n$ACD8> F0 4A:    BEQ
    AI_EyecubeRTS                            ; $AD24               \r\n$ACDA> 68:     
    PLA             \r\n$ACDB> 9D 8006: STA ObjectYSpeed,X  ;This prevents Eyecube
    from starting falling\r\n\r\n$ACDE> A9 00:   LDA #$00\r\n$ACE0> 9D 6006: STA
    ObjectYSpeedFraction,X     \r\n\r\n$ACE3> BD 4006: LDA ObjectFireDelay,X\r\n$ACE6>
    F0 16:   BEQ +                                               ; $ACFE              
    \r\n$ACE8> DE 4006: DEC ObjectFireDelay,X     \r\n$ACEB> D0 27:   BNE ++                                             
    ; $AD14               \r\n$ACED> A9 30:   LDA #$30        \r\n$ACEF> 9D 4004:
    STA ObjectUnknown440,X     \r\n\r\n; Make object turn direction\r\n$ACF2> BD
    2004: LDA ObjectFlags,X\r\n$ACF5> 49 40:   EOR #$40\r\n$ACF7> 9D 2004: STA ObjectFlags,X    
    \r\n\r\n$ACFA> 20 63AB: JSR ObjectFlipYmovement\r\n$ACFD> 60:      RTS            
    \r\n+\r\n$ACFE> A5 2A:   LDA $2A\r\n$AD00> 05 2B:   ORA $2B         \r\n$AD02>
    F0 10:   BEQ ++                                              ; $AD14              
    \r\n$AD04> A9 10:   LDA #$10        \r\n$AD06> 9D 4004: STA ObjectUnknown440,X    
    \r\n$AD09> A5 46:   LDA RandomSeed         \r\n$AD0B> 29 01:   AND #$01       
    \r\n$AD0D> A8:      TAY             \r\n$AD0E> B9 26AD: LDA EyecubeDelayTable,Y    
    \r\n$AD11> 9D 4006: STA ObjectFireDelay,X     \r\n++\r\n$AD14> BD 4004: LDA ObjectUnknown440,X\r\n$AD17>
    29 10:   AND #$10        \r\n$AD19> D0 08:   BNE +\r\n$AD1B> BD 4004: LDA ObjectUnknown440,X    
    \r\n$AD1E> 29 F0:   AND #$f0        \r\n$AD20> 9D 4004: STA ObjectUnknown440,X    
    \r\n+\r\n$AD23> 60:      RTS             \r\n\r\nAI_EyecubeRTS\r\n$AD24> 68:     
    PLA\r\n$AD25> 60:      RTS             \r\n\r\nEyecubeDelaytable: .byt $3F, $7E\r\n\r\nAI_Watcher\r\n$AD28>
    BD 4004: LDA $440,X\r\n$AD2B> 29 F0:   AND #$f0        \r\n$AD2D> D0 2F:   BNE
    $AD5E               \r\n$AD2F> BD 2004: LDA ObjectFlags,X     \r\n$AD32> 29 08:  
    AND #$08        \r\n$AD34> D0 23:   BNE $AD59               \r\n$AD36> A0 00:  
    LDY #$00        \r\n$AD38> 38:      SEC             \r\n$AD39> AD 0006: LDA ObjectPosY+0     
    \r\n$AD3C> FD 0006: SBC ObjectPosY,X     \r\n$AD3F> B0 06:   BCS $AD47              
    \r\n$AD41> 49 FF:   EOR #$ff        \r\n$AD43> 69 01:   ADC #$01        \r\n$AD45>
    A0 02:   LDY #$02        \r\n$AD47> C9 28:   CMP #$28        \r\n$AD49> 08:     
    PHP             \r\n$AD4A> B9 73AD: LDA AD73_table+0,Y     \r\n$AD4D> 9D 6006:
    STA ObjectYSpeedFraction,X     \r\n$AD50> B9 74AD: LDA AD73_table+1,Y     \r\n$AD53>
    9D 8006: STA ObjectYSpeed,X     \r\n$AD56> 28:      PLP             \r\n$AD57>
    90 05:   BCC $AD5E               \r\n$AD59> A9 00:   LDA #$00        \r\n$AD5B>
    9D 4004: STA ObjectUnknown440,X     \r\n$AD5E> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$AD61> BD 4004: LDA ObjectUnknown440,X     \r\n$AD64> C9 20:   CMP #$20       
    \r\n$AD66> D0 0A:   BNE $AD72               \r\n$AD68> A9 2A:   LDA #$2a       
    \r\n$AD6A> 9D E006: STA ObjectType,X     \r\n$AD6D> A9 00:   LDA #$00       
    \r\n$AD6F> 9D 4004: STA ObjectUnknown440,X     \r\n$AD72> 60:      RTS            
    \r\n\r\nAD73_table: \r\n    .byte $60,$FF ;Yspeed & fraction\r\n    .byte $A0,$00
    ;-\"-\r\n\r\nAI_SinewaveFlier\r\n$AD77> BD 2004: LDA ObjectFlags,X\r\n$AD7A>
    29 20:   AND #$20        \r\n$AD7C> D0 37:   BNE $ADB5               \r\n$AD7E>
    20 A6AE: JSR CloneObject       \r\n$AD81> B0 32:   BCS $ADB5               \r\n$AD83>
    A0 00:   LDY #$00        \r\n$AD85> BD 4006: LDA ObjectFireDelay,X     \r\n$AD88>
    C9 40:   CMP #$40        \r\n$AD8A> 90 0E:   BCC ++                                             
    ; $AD9A               \r\n$AD8C> C9 80:   CMP #$80        \r\n$AD8E> 90 08:  
    BCC +                                               ; $AD98               \r\n$AD90>
    A9 00:   LDA #$00        \r\n$AD92> 9D 4006: STA ObjectFireDelay,X     \r\n$AD95>
    A8:      TAY             \r\n$AD96> F0 02:   BEQ ++                                             
    ; $AD9A\r\n+\r\n$AD98> A0 02:   LDY #$02\r\n++\r\n$AD9A> 18:      CLC\r\n$AD9B>
    BD 6006: LDA ObjectYSpeedFraction,X     \r\n$AD9E> 79 B1AD: ADC ADB1_table+0,Y    
    \r\n$ADA1> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$ADA4> BD 8006: LDA ObjectYSpeed,X    
    \r\n$ADA7> 79 B2AD: ADC ADB1_table+1,Y     \r\n$ADAA> 9D 8006: STA ObjectYSpeed,X    
    \r\n$ADAD> FE 4006: INC ObjectFireDelay,X     \r\n$ADB0> 60:      RTS            
    \r\nADB1_table:\r\n    .byte $10,$00  ;yspeed & yspeed fraction\r\n    .byte
    $F0,$FF  ;-\"-\r\n$ADB5> 20 D4AD: JSR $ADD4       \r\n$ADB8> A0 10:   LDY #$10       
    \r\n$ADBA> BD E006: LDA ObjectType,X     \r\n$ADBD> C9 07:   CMP #$07       
    \r\n$ADBF> F0 02:   BEQ $ADC3               \r\n$ADC1> A0 16:   LDY #$16       
    \r\n$ADC3> 38:      SEC             \r\n$ADC4> 84 0C:   STY $0C         \r\n$ADC6>
    AD 0006: LDA ObjectPosY+0      \r\n$ADC9> E5 0C:   SBC $0C         \r\n$ADCB>
    9D 0006: STA ObjectPosY,X     \r\n$ADCE> A0 40:   LDY #$40        \r\n$ADD0>
    20 33F5: JSR InitObjectDefaultSpeed       \r\n$ADD3> 60:      RTS            
    \r\n\r\n\r\n\r\n$ADD4> BD 2004: LDA ObjectFlags,X\r\n$ADD7> 29 08:   AND #$08       
    \r\n$ADD9> D0 2E:   BNE ++                                              ; $AE09              
    \r\n$ADDB> DE 4006: DEC ObjectFireDelay,X     \r\n$ADDE> D0 15:   BNE +                                              
    ; $ADF5               \r\n$ADE0> 18:      CLC             \r\n$ADE1> A9 06:  
    LDA #$06        \r\n$ADE3> 9D 2004: STA ObjectFlags,X     \r\n$ADE6> A5 1A:  
    LDA ScrollPosX         \r\n$ADE8> 69 F8:   ADC #$f8        \r\n$ADEA> 9D 8004:
    STA ObjectPosX,X     \r\n$ADED> A5 1B:   LDA ScrollPosScreen         \r\n$ADEF>
    69 00:   ADC #$00        \r\n$ADF1> 9D 6004: STA ObjectPosScreen,X     \r\n$ADF4>
    60:      RTS             \r\n\r\n+\r\n$ADF5> A9 D8:   LDA #$d8             ;Create
    this object below Rockman at Y = #$D8\r\n$ADF7> 9D 0006: STA ObjectPosY,X    
    \r\n$ADFA> AD 8004: LDA ObjectPosX+0       \r\n$ADFD> 9D 8004: STA ObjectPosX,X    
    \r\n$AE00> AD 6004: LDA ObjectPosScreen+0                             ; $0460      
    \r\n$AE03> 9D 6004: STA ObjectPosScreen,X     \r\n$AE06> 68:      PLA            
    \r\n$AE07> 68:      PLA             \r\n$AE08> 60:      RTS             \r\n\r\n++\r\n$AE09>
    A9 F8:   LDA #$f8\r\n$AE0B> 9D 0006: STA ObjectPosY,X     \r\n$AE0E> 68:     
    PLA             \r\n$AE0F> 68:      PLA             \r\n$AE10> 60:      RTS            
    \r\n\r\nAI_FlyingShell\r\n$AE11> 20 A5B3: JSR $B3A5\r\n$AE14> BD 2004: LDA ObjectFlags,X    
    \r\n$AE17> 29 20:   AND #$20        \r\n$AE19> D0 0B:   BNE $AE26              
    \r\n$AE1B> FE 4006: INC ObjectFireDelay,X     \r\n$AE1E> 20 A3AF: JSR $AFA3      
    \r\n$AE21> 20 A6AE: JSR CloneObject       \r\n$AE24> 90 1B:   BCC $AE41              
    \r\n$AE26> 20 D4AD: JSR $ADD4       \r\n\r\n$AE29> A9 80:   LDA #$80\r\n$AE2B>
    9D 0006: STA ObjectPosY,X     \r\n\r\n$AE2E> A9 20:   LDA #$20\r\n$AE30> 9D E004:
    STA ObjectXSpeedFraction,X     \r\n$AE33> A9 01:   LDA #$01        \r\n$AE35>
    9D C004: STA ObjectXSpeed,X     \r\n$AE38> A9 00:   LDA #$00        \r\n$AE3A>
    9D 6006: STA ObjectYSpeedFraction,X     \r\n$AE3D> 9D 8006: STA ObjectYSpeed,X    
    \r\n$AE40> 60:      RTS             \r\n\r\n\r\n\r\n\r\n$AE44> C9 38:   CMP #$38       
    \r\n$AE46> 90 55:   BCC $AE9D               \r\n$AE48> D0 0C:   BNE $AE56              
    \r\n$AE4A> A9 00:   LDA #$00        \r\n$AE4C> 9D C004: STA ObjectXSpeed,X    
    \r\n$AE4F> 9D E004: STA ObjectXSpeedFraction,X     \r\n$AE52> A9 10:   LDA #$10       
    \r\n$AE54> D0 4C:   BNE $AEA2               \r\n$AE56> C9 48:   CMP #$48       
    \r\n$AE58> 90 43:   BCC $AE9D               \r\n$AE5A> D0 2C:   BNE $AE88              
    \r\n$AE5C> BD A006: LDA ObjectLifeCycleCounter,X     \r\n$AE5F> D0 26:   BNE
    $AE87               \r\n$AE61> A9 1C:   LDA #$1c        \r\n$AE63> 85 0D:   STA
    $0D         \r\n$AE65> A9 2D:   LDA #$2d        \r\n$AE67> 20 63F6: JSR CreateEnemy                                      
    ; $F663       \r\n$AE6A> B0 1B:   BCS $AE87               \r\n$AE6C> A4 0D:  
    LDY $0D         \r\n$AE6E> 20 33F5: JSR InitObjectDefaultSpeed       \r\n$AE71>
    98:      TYA             \r\n$AE72> 18:      CLC             \r\n$AE73> 69 10:  
    ADC #$10        \r\n$AE75> 29 40:   AND #$40        \r\n$AE77> 5D 2004: EOR ObjectFlags,X    
    \r\n$AE7A> 9D 2004: STA ObjectFlags,X     \r\n$AE7D> C8:      INY            
    \r\n$AE7E> C8:      INY             \r\n$AE7F> C8:      INY             \r\n$AE80>
    C8:      INY             \r\n$AE81> 84 0D:   STY $0D         \r\n$AE83> C0 3C:  
    CPY #$3c        \r\n$AE85> 90 DE:   BCC $AE65               \r\n$AE87> 60:     
    RTS             \r\n\r\n\r\n$AE88> C9 58:   CMP #$58        \r\n$AE8A> 90 11:  
    BCC $AE9D               \r\n$AE8C> A9 20:   LDA #$20        \r\n$AE8E> 9D E004:
    STA ObjectXSpeedFraction,X     \r\n$AE91> A9 01:   LDA #$01        \r\n$AE93>
    9D C004: STA ObjectXSpeed,X     \r\n$AE96> A9 00:   LDA #$00        \r\n$AE98>
    9D 4006: STA ObjectFireDelay,X     \r\n$AE9B> F0 05:   BEQ $AEA2              
    \r\n$AE9D> BD 4004: LDA ObjectUnknown440,X     \r\n$AEA0> 29 F0:   AND #$f0       
    \r\n$AEA2> 9D 4004: STA ObjectUnknown440,X     \r\n$AEA5> 60:      RTS            
    \r\n\r\n\r\nCloneObject\r\n; Creates a small explosion, big explosion, or hamburger's
    shots\r\n;\r\n$AEA6> B5 6B:   LDA Meters+1,X               \r\n$AEA8> 48:     
    PHA             \r\n$AEA9> BD E006:  LDA ObjectType,X     \r\n$AEAC> 48:      
    PHA             \r\n$AEAD> 20 49BE:   JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$AEB0> BD 2004:   LDA ObjectFlags,X     \r\n$AEB3> 29 08:     AND #$08       
    \r\n$AEB5> D0 37:     BNE $AEEE               \r\n$AEB7> B0 1D:     BCS $AED6              
    \r\n$AEB9> BD E006:   LDA ObjectType,X     \r\n$AEBC> C9 1B:     CMP #$1b       
    \r\n$AEBE> D0 2E:     BNE $AEEE               \r\n$AEC0> 68:       PLA            
    \r\n$AEC1> 48:       PHA             \r\n$AEC2> C9 08:     CMP #$08        \r\n$AEC4>
    F0 31:     BEQ $AEF7               ; Create explosion, then resume next line\r\n$AEC6>
    A9 00:     LDA #$00\r\n$AEC8> 20 63F6:   JSR CreateEnemy                                      
    ; $F663       \r\n$AECB> B0 25:     BCS $AEF2\r\n$AECD> A9 20:     LDA #$20       
    \r\n$AECF> 9D 2004:   STA ObjectFlags,X     \r\n$AED2> A9 48:     LDA #$48       
    \r\n$AED4> D0 02:     BNE $AED8               \r\n$AED6> A9 01:     LDA #$01       
    \r\n$AED8> 9D 4006:   STA ObjectFireDelay,X     \r\n$AEDB> A9 00:     LDA #$00       
    \r\n$AEDD> 9D A006:   STA ObjectLifeCycleCounter,X     \r\n$AEE0> 68:       PLA            
    \r\n$AEE1> 9D E006:  STA ObjectType,X     \r\n$AEE4> 68:      PLA            
    \r\n$AEE5> 95 6B:   STA Meters+1,X               \r\n$AEE7> A9 14:   LDA #$14       
    \r\n$AEE9> 9D C006: STA ObjectLifeMeter,X     \r\n$AEEC> 38:      SEC            
    \r\n$AEED> 60:      RTS             \r\n$AEEE> 68:      PLA             \r\n$AEEF>
    68:      PLA             \r\n$AEF0> 18:      CLC             \r\n$AEF1> 60:     
    RTS             \r\n$AEF2> 68:      PLA             \r\n$AEF3> 68:      PLA            
    \r\n$AEF4> 68:      PLA             \r\n$AEF5> 68:      PLA             \r\n$AEF6>
    60:      RTS             \r\n$AEF7> 20 FDAE: JSR ReplaceObjectWithExplosion\r\n$AEFA>
    4C C6AE: JMP $AEC6       \r\n\r\nReplaceObjectWithExplosion\r\n$AEFD> A9 0B:  
    LDA #$0b        \r\n$AEFF> 85 0C:   STA $0C         \r\n$AF01> A9 FF:   LDA #$ff       
    \r\n$AF03> 85 0D:   STA $0D         \r\n$AF05> A9 02:   LDA #$02        \r\n$AF07>
    85 0E:   STA $0E         \r\n$AF09> D0 07:   BNE $AF12               \r\n-\r\n$AF0B>
    A2 10:   LDX #$10\r\n$AF0D> 20 76C5: JSR FindFreeObject       \r\n$AF10> B0 0E:  
    BCS +\r\n$AF12> A4 2F:   LDY RefObjectNumber         \r\n$AF14> 20 41F8: JSR
    CreateExplosionObject       \r\n$AF17> A9 28:   LDA #$28        \r\n$AF19> 9D
    E006: STA ObjectType,X     \r\n$AF1C> A5 0C:   LDA $0C         \r\n$AF1E> 10
    EB:   BPL -                                               ; $AF0B              
    \r\n+\r\n$AF20> A9 12:   LDA #$12        ; Explosion\r\n$AF22> 20 77C4: JSR IssueSound                                     
    ; $C477       \r\n$AF25> 60:      RTS             \r\n\r\nAI_Beak\r\n$AF26> 20
    A5B3: JSR $B3A5\r\n$AF29> 20 A3AF: JSR $AFA3       \r\n$AF2C> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$AF2F> FE 4006: INC ObjectFireDelay,X     \r\n$AF32> BD 4004: LDA ObjectUnknown440,X    
    \r\n$AF35> C9 40:   CMP #$40        \r\n$AF37> B0 51:   BCS $AF8A              
    \r\n$AF39> C9 30:   CMP #$30        \r\n$AF3B> B0 09:   BCS $AF46              
    \r\n$AF3D> BD 4006: LDA ObjectFireDelay,X     \r\n$AF40> C9 4D:   CMP #$4d       
    \r\n$AF42> 90 59:   BCC $AF9D               \r\n$AF44> B0 5C:   BCS $AFA2              
    \r\n$AF46> D0 05:   BNE $AF4D               \r\n$AF48> A9 00:   LDA #$00       
    \r\n$AF4A> 9D 4006: STA ObjectFireDelay,X     \r\n$AF4D> BD 4006: LDA ObjectFireDelay,X    
    \r\n$AF50> 85 0C:   STA $0C         \r\n$AF52> 29 1F:   AND #$1f        \r\n$AF54>
    D0 2E:   BNE $AF84               \r\n$AF56> A9 2D:   LDA #$2d        \r\n$AF58>
    20 63F6: JSR CreateEnemy                                       ; $F663      
    \r\n$AF5B> B0 1E:   BCS $AF7B               \r\n$AF5D> A0 F9:   LDY #$f9       
    \r\n$AF5F> BD 2004: LDA ObjectFlags,X     \r\n$AF62> 29 40:   AND #$40       
    \r\n$AF64> F0 02:   BEQ $AF68               \r\n$AF66> A0 07:   LDY #$07       
    \r\n\r\n$AF68> 18:      CLC\r\n$AF69> 98:      TYA             \r\n$AF6A> 7D
    8004: ADC ObjectPosX,X     \r\n$AF6D> 9D 8004: STA ObjectPosX,X     \r\n$AF70>
    A5 0C:   LDA $0C         \r\n$AF72> 4A:      LSR A           \r\n$AF73> 4A:     
    LSR A           \r\n$AF74> 4A:      LSR A           \r\n$AF75> 69 0C:   ADC #$0c       
    \r\n$AF77> A8:      TAY             \r\n$AF78> 20 33F5: JSR InitObjectDefaultSpeed      
    \r\n$AF7B> A6 2F:   LDX RefObjectNumber         \r\n$AF7D> BD 4006: LDA ObjectFireDelay,X    
    \r\n$AF80> C9 60:   CMP #$60        \r\n$AF82> F0 13:   BEQ $AF97              
    \r\n$AF84> A9 31:   LDA #$31        \r\n$AF86> 9D 4004: STA ObjectUnknown440,X    
    \r\n$AF89> 60:      RTS             \r\n\r\n\r\n\r\n$AF8A> C9 60:   CMP #$60\r\n$AF8C>
    90 14:   BCC $AFA2               \r\n$AF8E> A9 00:   LDA #$00        \r\n$AF90>
    9D 4004: STA ObjectUnknown440,X     \r\n$AF93> 9D 4006: STA ObjectFireDelay,X    
    \r\n$AF96> 60:      RTS             \r\n\r\n\r\n\r\n$AF97> A9 40:   LDA #$40\r\n$AF99>
    9D 4004: STA ObjectUnknown440,X     \r\n$AF9C> 60:      RTS             \r\n\r\n$AF9D>
    A9 00:   LDA #$00\r\n$AF9F> 9D 4004: STA ObjectUnknown440,X     \r\n$AFA2> 60:     
    RTS             \r\n\r\n$AFA3> BD 4004: LDA ObjectUnknown440,X\r\n$AFA6> 29 F0:  
    AND #$f0        \r\n$AFA8> D0 0A:   BNE $AFB4               \r\n$AFAA> BD 2004:
    LDA ObjectFlags,X     \r\n$AFAD> 29 80:   AND #$80        \r\n$AFAF> F0 03:  
    BEQ $AFB4               \r\n$AFB1> 20 52BF: JSR $BF52       \r\n$AFB4> 60:     
    RTS             \r\n\r\n\r\nAI_Bombomb\r\n$AFB5> BD 4006: LDA ObjectFireDelay,X\r\n$AFB8>
    D0 4F:   BNE $B009               \r\n$AFBA> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$AFBD> BD 8006: LDA ObjectYSpeed,X     \r\n$AFC0> 10 46:   BPL $B008              
    \r\n\r\n$AFC2> A9 1B:   LDA #$1b\r\n$AFC4> 20 63F6: JSR CreateEnemy                                      
    ; $F663       \r\n$AFC7> B0 06:   BCS +                                              
    ; $AFCF               \r\n$AFC9> FE 4004: INC ObjectUnknown440,X\r\n$AFCC> 20
    45B0: JSR ClearObjectMem                                  ; $B045       \r\n+\r\n$AFCF>
    A6 2F:   LDX RefObjectNumber\r\n$AFD1> A9 03:   LDA #$03        \r\n$AFD3> 85
    0C:   STA $0C         \r\n$AFD5> A9 26:   LDA #$26        \r\n$AFD7> 20 63F6:
    JSR CreateEnemy                                       ; $F663       \r\n$AFDA>
    20 45B0: JSR ClearObjectMem                                  ; $B045       \r\n$AFDD>
    A5 0C:   LDA $0C         \r\n$AFDF> 29 0E:   AND #$0e        \r\n$AFE1> 0A:     
    ASL A           \r\n$AFE2> 69 44:   ADC #$44        \r\n$AFE4> A8:      TAY            
    \r\n$AFE5> 20 33F5: JSR InitObjectDefaultSpeed       \r\n$AFE8> A5 0C:   LDA
    $0C         \r\n$AFEA> 29 01:   AND #$01        \r\n$AFEC> A8:      TAY            
    \r\n$AFED> B9 43B0: LDA $B043,Y     \r\n$AFF0> 9D 2004: STA ObjectFlags,X    
    \r\n$AFF3> C6 0C:   DEC $0C         \r\n$AFF5> 10 DE:   BPL $AFD5              
    \r\n$AFF7> A6 2F:   LDX RefObjectNumber         \r\n$AFF9> A9 BB:   LDA #$bb       
    \r\n$AFFB> 9D 4006: STA ObjectFireDelay,X     \r\n$AFFE> A9 22:   LDA #$22       
    \r\n$B000> 9D 2004: STA ObjectFlags,X     \r\n$B003> A9 D8:   LDA #$d8       
    \r\n$B005> 9D 0006: STA ObjectPosY,X     \r\n$B008> 60:      RTS            
    \r\n$B009> DE 4006: DEC ObjectFireDelay,X     \r\n$B00C> D0 28:   BNE $B036              
    \r\n$B00E> A9 0D:   LDA #$0d        \r\n$B010> 85 0C:   STA $0C         \r\n$B012>
    A2 10:   LDX #$10        \r\n$B014> 20 16F5: JSR FindObjectOfSelectedType      
    \r\n$B017> B0 0C:   BCS $B025               \r\n$B019> BD 2004: LDA ObjectFlags,X    
    \r\n$B01C> 29 20:   AND #$20        \r\n$B01E> F0 1A:   BEQ $B03A              
    \r\n$B020> E8:      INX             \r\n$B021> E0 20:   CPX #$20        \r\n$B023>
    D0 EF:   BNE $B014               \r\n$B025> A6 2F:   LDX RefObjectNumber        
    \r\n$B027> A9 13:   LDA #$13        \r\n$B029> 9D 2004: STA ObjectFlags,X    
    \r\n$B02C> A9 F1:   LDA #$f1        \r\n$B02E> 9D 6006: STA ObjectYSpeedFraction,X    
    \r\n$B031> A9 08:   LDA #$08        \r\n$B033> 9D 8006: STA ObjectYSpeed,X    
    \r\n$B036> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$B039> 60:     
    RTS             \r\n$B03A> A6 2F:   LDX RefObjectNumber         \r\n$B03C> FE
    4006: INC ObjectFireDelay,X     \r\n$B03F> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$B042> 60:      RTS             \r\n\r\n\r\n$B043> 13:      .byte $13\r\n$B044>
    53:      .byte $53                \r\n\r\n\r\nClearObjectMem\r\n$B045> A9 00:  
    LDA #$00\r\n$B047> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$B04A> 9D 8006:
    STA ObjectYSpeed,X     \r\n$B04D> 9D E004: STA ObjectXSpeedFraction,X     \r\n$B050>
    9D C004: STA ObjectXSpeed,X     \r\n$B053> 60:      RTS             \r\n\r\n\r\nAI_SniperJoe\r\n$B054>
    BD 4004: LDA ObjectUnknown440,X\r\n$B057> 29 F0:   AND #$f0        \r\n$B059>
    C9 30:   CMP #$30        \r\n$B05B> D0 15:   BNE $B072               \r\n$B05D>
    BD 2004: LDA ObjectFlags,X     \r\n$B060> 29 80:   AND #$80        \r\n$B062>
    F0 08:   BEQ $B06C               \r\n$B064> A9 20:   LDA #$20        \r\n$B066>
    9D 4006: STA ObjectFireDelay,X     \r\n$B069> 20 52BF: JSR $BF52       \r\n$B06C>
    20 E0B0: JSR $B0E0       \r\n$B06F> 4C 92B0: JMP $B092       \r\n$B072> C9 00:  
    CMP #$00        \r\n$B074> F0 25:   BEQ $B09B               \r\n$B076> C9 20:  
    CMP #$20        \r\n$B078> 08:      PHP             \r\n$B079> 20 E0B0: JSR $B0E0      
    \r\n$B07C> 28:      PLP             \r\n$B07D> D0 5A:   BNE $B0D9              
    \r\n$B07F> BD 4006: LDA ObjectFireDelay,X     \r\n$B082> C9 10:   CMP #$10       
    \r\n$B084> D0 0C:   BNE $B092               \r\n$B086> A9 1A:   LDA #$1a       
    \r\n$B088> 20 63F6: JSR CreateEnemy                                       ; $F663      
    \r\n$B08B> B0 05:   BCS $B092               \r\n$B08D> A0 24:   LDY #$24       
    \r\n$B08F> 20 33F5: JSR InitObjectDefaultSpeed       \r\n$B092> A6 2F:   LDX
    RefObjectNumber         \r\n$B094> DE 4006: DEC ObjectFireDelay,X     \r\n$B097>
    D0 38:   BNE $B0D1               \r\n$B099> F0 0F:   BEQ $B0AA              
    \r\n$B09B> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$B09E> A5 2B:  
    LDA $2B         \r\n$B0A0> F0 2F:   BEQ $B0D1               \r\n$B0A2> A9 00:  
    LDA #$00        \r\n$B0A4> 9D C004: STA ObjectXSpeed,X     \r\n$B0A7> 9D E004:
    STA ObjectXSpeedFraction,X     \r\n$B0AA> A9 06:   LDA #$06        \r\n$B0AC>
    20 A0C5: JSR RandomFunc       \r\n$B0AF> A6 2F:   LDX RefObjectNumber        
    \r\n$B0B1> A0 00:   LDY #$00        \r\n$B0B3> 4A:      LSR A           \r\n$B0B4>
    B0 0F:   BCS $B0C5               \r\n$B0B6> C8:      INY             \r\n$B0B7>
    4A:      LSR A           \r\n$B0B8> 90 0B:   BCC $B0C5               \r\n$B0BA>
    C8:      INY             \r\n$B0BB> A9 CC:   LDA #$cc        \r\n$B0BD> 9D 6006:
    STA ObjectYSpeedFraction,X     \r\n$B0C0> A9 04:   LDA #$04        \r\n$B0C2>
    9D 8006: STA ObjectYSpeed,X     \r\n$B0C5> B9 DAB0: LDA $B0DA,Y     \r\n$B0C8>
    9D 4004: STA ObjectUnknown440,X     \r\n$B0CB> B9 DDB0: LDA $B0DD,Y     \r\n$B0CE>
    9D 4006: STA ObjectFireDelay,X     \r\n$B0D1> BD 4004: LDA ObjectUnknown440,X    
    \r\n$B0D4> 29 F0:   AND #$f0        \r\n$B0D6> 9D 4004: STA ObjectUnknown440,X    
    \r\n$B0D9> 60:      RTS             \r\n\r\n\r\n\r\n$B0DA> 30 10:   BMI $B0EC\r\n$B0DC>
    00:      BRK             \r\n$B0DD> 20 2020: JSR $2020       \r\n$B0E0> 20 3BF6:
    JSR EnemySearchMegaman       \r\n$B0E3> 18:      CLC             \r\n$B0E4> 69
    38:   ADC #$38        \r\n$B0E6> 85 0C:   STA $0C         \r\n$B0E8> BD 2004:
    LDA ObjectFlags,X     \r\n$B0EB> 29 40:   AND #$40        \r\n$B0ED> F0 24:  
    BEQ $B113               \r\n$B0EF> A9 00:   LDA #$00        \r\n$B0F1> 9D 4004:
    STA ObjectUnknown440,X     \r\n$B0F4> A9 85:   LDA #$85        \r\n$B0F6> 9D
    6006: STA ObjectYSpeedFraction,X     \r\n$B0F9> A9 05:   LDA #$05        \r\n$B0FB>
    9D 8006: STA ObjectYSpeed,X     \r\n$B0FE> A6 0C:   LDX $0C         \r\n$B100>
    A0 00:   LDY #$00        \r\n$B102> A9 2A:   LDA #$2a        \r\n$B104> 20 ACC5:
    JSR EnemyCalculateJumpCurveToHitMegaman       \r\n$B107> A6 2F:   LDX RefObjectNumber        
    \r\n$B109> A5 04:   LDA $04         \r\n$B10B> 9D E004: STA ObjectXSpeedFraction,X    
    \r\n$B10E> A5 05:   LDA $05         \r\n$B110> 9D C004: STA ObjectXSpeed,X    
    \r\n$B113> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$B116> 60:     
    RTS             \r\n\r\n\r\nAI_FootHolder\r\n$B117> BD 4006: LDA ObjectFireDelay,X\r\n$B11A>
    29 3F:   AND #$3f        \r\n$B11C> D0 78:   BNE +++               \r\n$B11E>
    A9 03:   LDA #$03        \r\n$B120> 20 A0C5: JSR RandomFunc       \r\n$B123>
    A6 2F:   LDX RefObjectNumber         \r\n$B125> 85 0C:   STA $0C         \r\n$B127>
    BD 0006: LDA ObjectPosY,X     \r\n$B12A> C9 58:   CMP #$58        \r\n$B12C>
    B0 0B:   BCS +\r\n$B12E> A5 0C:   LDA $0C         \r\n$B130> C9 02:   CMP #$02       
    \r\n$B132> F0 11:   BEQ ++\r\n$B134> 06 0C:   ASL $0C         \r\n$B136> 4C 45B1:
    JMP ++\r\n+\r\n$B139> C9 C0:   CMP #$c0        \r\n$B13B> 90 08:   BCC ++\r\n$B13D>
    A5 0C:   LDA $0C         \r\n$B13F> C9 01:   CMP #$01        \r\n$B141> F0 02:  
    BEQ ++\r\n$B143> 46 0C:   LSR $0C         \r\n++\r\n$B145> A4 0C:   LDY $0C        
    \r\n$B147> B9 A2B1: LDA $B1A2,Y     \r\n$B14A> 9D 8006: STA ObjectYSpeed,X    
    \r\n$B14D> B9 A5B1: LDA $B1A5,Y     \r\n$B150> 9D 6006: STA ObjectYSpeedFraction,X    
    \r\n$B153> BD 4006: LDA ObjectFireDelay,X     \r\n$B156> D0 3E:   BNE +++              
    \r\n$B158> A9 80:   LDA #$80        \r\n$B15A> 9D 4006: STA ObjectFireDelay,X    
    \r\n$B15D> BD 2004: LDA ObjectFlags,X     \r\n$B160> 49 40:   EOR #$40       
    \r\n$B162> 9D 2004: STA ObjectFlags,X     \r\n$B165> A9 01:   LDA #$01       
    \r\n$B167> 85 0C:   STA $0C         \r\n-\r\n$B169> A9 2D:    LDA #$2d       
    \r\n$B16B> 20 63F6:  JSR CreateEnemy                                       ;
    $F663       \r\n$B16E> B0 24:    BCS +\r\n$B170> A4 0C:    LDY $0C         \r\n$B172>
    B9 A8B1:  LDA $B1A8,Y     \r\n$B175> 9D 2004:  STA ObjectFlags,X     \r\n$B178>
    18:       CLC             \r\n$B179> BD 8004:  LDA ObjectPosX,X     \r\n$B17C>
    79 AAB1:  ADC $B1AA,Y     \r\n$B17F> 9D 8004:  STA ObjectPosX,X     \r\n$B182>
    BD 6004:  LDA ObjectPosScreen,X     \r\n$B185> 79 ACB1:  ADC $B1AC,Y     \r\n$B188>
    9D 6004:  STA ObjectPosScreen,X     \r\n$B18B> A0 D0:    LDY #$d0        \r\n$B18D>
    20 33F5:  JSR InitObjectDefaultSpeed       \r\n$B190> C6 0C:   DEC $0C        
    \r\n$B192> 10 D5:   BPL -\r\n+\r\n$B194> A6 2F:   LDX RefObjectNumber        
    \r\n+++\r\n$B196> DE 4006: DEC ObjectFireDelay,X     \r\n$B199> 20 49BE: JSR
    EnemyAI_MovementsAndDamageCheck       \r\n$B19C> B0 03:   BCS +\r\n$B19E> 20
    AEB1: JSR StoreLiftData       \r\n+\r\n$B1A1> 60:      RTS             \r\n\r\n$B1A2:\r\n   
    .byte $00,$00,$FF\r\n$B1A5:\r\n    .byte $00,$60,$A0\r\n$B1A8:\r\n    .byte $02,$42\r\n$B1AA:\r\n   
    .byte $0C,$F4\r\n$B1AC:\r\n    .byte $00,$FF\r\n\r\nStoreLiftData\r\n;\r\n; Input:\r\n;  
    LiftIndex = index into $0700\r\n; Output:\r\n;   LiftPosScreen,Y <- screen\r\n;  
    LiftPosX,Y      <- Xpos\r\n;   LiftPosY,Y      <- Ypos-8\r\n;   LiftDirection,Y
    <- Direction (zero=left, nonzero=right)\r\n;   LiftXSpeedFraction <- XSpeedFraction\r\n;  
    LiftXSpeed <- XSpeed\r\n;   LiftIndex++\r\n;\r\n; Lift width is always assumed
    to be 20 pix (this constant is at $9673)\r\n;\r\n$B1AE> A4 9A:   LDY LiftIndex        
    \r\n$B1B0> BD 6004: LDA ObjectPosScreen,X     \r\n$B1B3> 99 0007: STA LiftPosScreen,Y    
    \r\n$B1B6> BD 8004: LDA ObjectPosX,X     \r\n$B1B9> 99 0807: STA LiftPosX,Y    
    \r\n$B1BC> 38:      SEC             \r\n$B1BD> BD 0006: LDA ObjectPosY,X    
    \r\n$B1C0> E9 08:   SBC #$08        \r\n$B1C2> 99 1007: STA LiftPosY,Y     \r\n$B1C5>
    BD E004: LDA ObjectXSpeedFraction,X     \r\n$B1C8> 85 9C:   STA LiftXSpeedFraction        
    \r\n$B1CA> BD C004: LDA ObjectXSpeed,X     \r\n$B1CD> 85 9D:   STA LiftXSpeed        
    \r\n$B1CF> BD 2004: LDA ObjectFlags,X     \r\n$B1D2> 29 40:   AND #$40       
    \r\n$B1D4> 99 1807: STA LiftDirection,Y     \r\n$B1D7> E6 9A:   INC LiftIndex        
    \r\n$B1D9> 60:      RTS             \r\n\r\nAI_HeadLosingRobot\r\n$B1DA> 20 3BF6:
    JSR EnemySearchMegaman       \r\n$B1DD> A9 1E:   LDA #$1e        \r\n$B1DF> 9D
    E006: STA ObjectType,X       ;Object1E\r\n$B1E2> 18:      CLC             \r\n$B1E3>
    BD 0006: LDA ObjectPosY,X     \r\n$B1E6> 69 04:   ADC #$04        \r\n$B1E8>
    9D 0006: STA ObjectPosY,X     \r\n$B1EB> A9 1D:   LDA #$1d        \r\n$B1ED>
    20 63F6: JSR CreateEnemy                                       ; $F663      
    \r\n$B1F0> B0 3E:   BCS $B230               \r\n$B1F2> A4 2F:   LDY RefObjectNumber        
    \r\n$B1F4> B9 6B00: LDA Meters+1,Y     \r\n$B1F7> 95 6B:   STA Meters+1,X              
    \r\n$B1F9> BD 2004: LDA ObjectFlags,X     \r\n$B1FC> 09 04:   ORA #$04       
    \r\n$B1FE> 9D 2004: STA ObjectFlags,X     \r\n$B201> 38:      SEC            
    \r\n$B202> BD 0006: LDA ObjectPosY,X     \r\n$B205> E9 10:   SBC #$10       
    \r\n$B207> 9D 0006: STA ObjectPosY,X     \r\n$B20A> 20 45B0: JSR ClearObjectMem                                 
    ; $B045       \r\n$B20D> A4 2F:   LDY RefObjectNumber         \r\n$B20F> B9 2004:
    LDA ObjectFlags,Y     \r\n$B212> 29 40:   AND #$40        \r\n$B214> F0 19:  
    BEQ $B22F               \r\n$B216> A9 29:   LDA #$29          ;Object29\r\n$B218>
    99 E006: STA ObjectType,Y     \r\n$B21B> A9 1F:   LDA #$1f        \r\n$B21D>
    99 4006: STA ObjectFireDelay,Y     \r\n$B220> A9 1D:   LDA #$1d        \r\n$B222>
    9D E006: STA ObjectType,X     \r\n$B225> A9 09:   LDA #$09        \r\n$B227>
    9D 4006: STA ObjectFireDelay,X     \r\n$B22A> A9 04:   LDA #$04        \r\n$B22C>
    9D 8006: STA ObjectYSpeed,X     \r\n$B22F> 60:      RTS             \r\n$B230>
    A6 2F:   LDX RefObjectNumber         \r\n$B232> A9 F8:   LDA #$f8        \r\n$B234>
    9D 0006: STA ObjectPosY,X     \r\n$B237> A9 FF:   LDA #$ff        \r\n$B239>
    95 6B:   STA Meters+1,X               \r\n$B23B> 60:      RTS             \r\n\r\n\r\nAI_PicketMan\r\n$B23C>
    20 3BF6: JSR EnemySearchMegaman\r\n$B23F> 85 0C:   STA $0C         \r\n$B241>
    BD 4004: LDA ObjectUnknown440,X     \r\n$B244> 29 F0:   AND #$f0        \r\n$B246>
    F0 58:   BEQ $B2A0               \r\n$B248> BD 4004: LDA ObjectUnknown440,X    
    \r\n$B24B> C9 20:   CMP #$20        \r\n$B24D> D0 32:   BNE $B281              
    \r\n$B24F> A9 2E:   LDA #$2e        \r\n$B251> 20 63F6: JSR CreateEnemy                                      
    ; $F663       \r\n$B254> B0 24:   BCS $B27A               \r\n$B256> BD 2004:
    LDA ObjectFlags,X     \r\n$B259> 09 10:   ORA #$10        \r\n$B25B> 9D 2004:
    STA ObjectFlags,X     \r\n$B25E> A0 70:   LDY #$70        \r\n$B260> 20 33F5:
    JSR InitObjectDefaultSpeed       \r\n$B263> 8A:      TXA             \r\n$B264>
    48:      PHA             \r\n$B265> A6 0C:   LDX $0C         \r\n$B267> A0 00:  
    LDY #$00        \r\n$B269> A9 27:   LDA #$27        \r\n$B26B> 20 ACC5: JSR EnemyCalculateJumpCurveToHitMegaman      
    \r\n$B26E> 68:      PLA             \r\n$B26F> AA:      TAX             \r\n$B270>
    A5 04:   LDA $04         \r\n$B272> 9D E004: STA ObjectXSpeedFraction,X     \r\n$B275>
    A5 05:   LDA $05         \r\n$B277> 9D C004: STA ObjectXSpeed,X     \r\n$B27A>
    A6 2F:   LDX RefObjectNumber         \r\n$B27C> DE 4006: DEC ObjectFireDelay,X    
    \r\n$B27F> D0 37:   BNE $B2B8               \r\n$B281> C9 30:   CMP #$30       
    \r\n$B283> D0 33:   BNE $B2B8               \r\n$B285> BD 4006: LDA ObjectFireDelay,X    
    \r\n$B288> D0 0F:   BNE $B299               \r\n$B28A> A5 46:   LDA RandomSeed        
    \r\n$B28C> 29 01:   AND #$01        \r\n$B28E> A8:      TAY             \r\n$B28F>
    B9 C8B2: LDA $B2C8,Y     \r\n$B292> 9D 4006: STA ObjectFireDelay,X     \r\n$B295>
    A9 00:   LDA #$00        \r\n$B297> F0 07:   BEQ $B2A0               \r\n$B299>
    A9 10:   LDA #$10        \r\n$B29B> 9D 4004: STA ObjectUnknown440,X     \r\n$B29E>
    D0 18:   BNE $B2B8               \r\n$B2A0> 9D 4004: STA ObjectUnknown440,X    
    \r\n$B2A3> DE 4006: DEC ObjectFireDelay,X     \r\n$B2A6> D0 10:   BNE $B2B8              
    \r\n$B2A8> A9 10:   LDA #$10        \r\n$B2AA> 9D 4004: STA ObjectUnknown440,X    
    \r\n$B2AD> A5 46:   LDA RandomSeed         \r\n$B2AF> 29 01:   AND #$01       
    \r\n$B2B1> A8:      TAY             \r\n$B2B2> B9 C6B2: LDA $B2C6,Y     \r\n$B2B5>
    9D 4006: STA ObjectFireDelay,X     \r\n$B2B8> 20 A3AF: JSR $AFA3       \r\n$B2BB>
    20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$B2BE> A5 2B:   LDA $2B        
    \r\n$B2C0> F0 03:   BEQ $B2C5               \r\n$B2C2> 20 45B0: JSR ClearObjectMem                                 
    ; $B045       \r\n$B2C5> 60:      RTS             \r\n$B2C6> 05 0A:   ORA $0A        
    \r\n$B2C8> 3F:      .byte $3f                \r\n\r\n$B2C9> BB:      .byte $bb               
    \r\n\r\n\r\nAI_ScrewBomberFloor\r\n$B2CA> A9 08:   LDA #$08\r\n$B2CC> 85 0D:  
    STA $0D         \r\n$B2CE> 85 0E:   STA $0E         \r\n$B2D0> A9 04:   LDA #$04       
    \r\n$B2D2> 85 0F:   STA $0F         \r\n$B2D4> D0 0C:   BNE +                                              
    ; $B2E2               \r\n\r\n\r\nAI_ScrewBomberCeiling\r\n$B2D6> A9 F8:   LDA
    #$f8\r\n$B2D8> 85 0D:   STA $0D         \r\n$B2DA> A9 09:   LDA #$09        \r\n$B2DC>
    85 0E:   STA $0E         \r\n$B2DE> A9 FC:   LDA #$fc        \r\n$B2E0> 85 0F:  
    STA $0F         \r\n+\r\n$B2E2> 20 A5B3: JSR $B3A5\r\n$B2E5> BD 4004: LDA ObjectUnknown440,X    
    \r\n$B2E8> F0 04:   BEQ $B2EE               \r\n$B2EA> C9 01:   CMP #$01       
    \r\n$B2EC> D0 39:   BNE $B327               \r\n$B2EE> BD 4006: LDA ObjectFireDelay,X    
    \r\n$B2F1> F0 07:   BEQ $B2FA               \r\n$B2F3> A9 00:   LDA #$00       
    \r\n$B2F5> 9D 4004: STA ObjectUnknown440,X     \r\n$B2F8> F0 7D:   BEQ $B377              
    \r\n$B2FA> 20 3BF6: JSR EnemySearchMegaman       \r\n$B2FD> 48:      PHA            
    \r\n$B2FE> BD 2004: LDA ObjectFlags,X     \r\n$B301> 29 BF:   AND #$bf       
    \r\n$B303> 9D 2004: STA ObjectFlags,X     \r\n$B306> 68:      PLA            
    \r\n$B307> C9 50:   CMP #$50        \r\n$B309> 90 07:   BCC $B312              
    \r\n$B30B> A9 00:   LDA #$00        \r\n$B30D> 9D 4004: STA ObjectUnknown440,X    
    \r\n$B310> F0 78:   BEQ $B38A               \r\n$B312> A9 10:   LDA #$10       
    \r\n$B314> 9D 4004: STA ObjectUnknown440,X     \r\n$B317> 38:      SEC            
    \r\n$B318> BD 0006: LDA ObjectPosY,X     \r\n$B31B> E5 0D:   SBC $0D        
    \r\n$B31D> 9D 0006: STA ObjectPosY,X     \r\n$B320> A9 60:   LDA #$60       
    \r\n$B322> 9D 4006: STA ObjectFireDelay,X     \r\n$B325> D0 50:   BNE $B377              
    \r\n$B327> C9 50:   CMP #$50        \r\n$B329> D0 05:   BNE $B330              
    \r\n$B32B> A9 20:   LDA #$20        \r\n$B32D> 9D 4004: STA ObjectUnknown440,X    
    \r\n$B330> B0 45:   BCS $B377               \r\n$B332> BD 4006: LDA ObjectFireDelay,X    
    \r\n$B335> F0 2D:   BEQ $B364               \r\n$B337> 29 1F:   AND #$1f       
    \r\n$B339> D0 4C:   BNE $B387               \r\n$B33B> A9 2D:   LDA #$2d       
    \r\n$B33D> 20 63F6: JSR CreateEnemy                                       ; $F663      
    \r\n$B340> B0 1E:   BCS $B360               \r\n$B342> 38:      SEC            
    \r\n$B343> BD 0006: LDA ObjectPosY,X     \r\n$B346> E5 0F:   SBC $0F        
    \r\n$B348> 9D 0006: STA ObjectPosY,X     \r\n$B34B> A4 0E:   LDY $0E        
    \r\n$B34D> B9 9BB3: LDA B39B_table,Y     \r\n$B350> 9D 2004: STA ObjectFlags,X    
    \r\n$B353> B9 91B3: LDA B391_table,Y     \r\n$B356> A8:      TAY  \r\n$B357>
    20 33F5: JSR InitObjectDefaultSpeed       \r\n$B35A> C6 0E:   DEC $0E        
    \r\n$B35C> C6 0E:   DEC $0E         \r\n$B35E> 10 DB:   BPL $B33B              
    \r\n$B360> A6 2F:   LDX RefObjectNumber         \r\n$B362> D0 23:   BNE $B387              
    \r\n$B364> A9 03:   LDA #$03        \r\n$B366> 20 A0C5: JSR RandomFunc      
    \r\n$B369> AA:      TAX             \r\n$B36A> BD 8EB3: LDA Table_B38E,X    
    \r\n$B36D> A6 2F:   LDX RefObjectNumber         \r\n$B36F> 9D 4006: STA ObjectFireDelay,X    
    \r\n$B372> A9 50:   LDA #$50        \r\n$B374> 9D 4004: STA ObjectUnknown440,X    
    \r\n$B377> BD 4004: LDA ObjectUnknown440,X     \r\n$B37A> C9 60:   CMP #$60       
    \r\n$B37C> D0 09:   BNE $B387               \r\n$B37E> 18:      CLC            
    \r\n$B37F> BD 0006: LDA ObjectPosY,X     \r\n$B382> 65 0D:   ADC $0D        
    \r\n$B384> 9D 0006: STA ObjectPosY,X     \r\n$B387> DE 4006: DEC ObjectFireDelay,X    
    \r\n$B38A> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$B38D> 60:     
    RTS             \r\n\r\nTable_838E: .byte $20, $3F, $7D\r\n\r\nB391_table: .byte
    $60,$60,$5C,$64, $58,$68,$5C,$64, $60,$60\r\nB39B_table: .byte $42,$42,$42,$42,
    $02,$02,$02,$02, $02,$02\r\n\r\n$B3A5> BD A006: LDA ObjectLifeCycleCounter,X    
    \r\n$B3A8> F0 05:   BEQ $B3AF               \r\n$B3AA> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$B3AD> 68:      PLA             \r\n$B3AE> 68:      PLA             \r\n$B3AF>
    60:      RTS             \r\n\r\n\r\nAI_Electricity\r\n$B3B0> BD 2004: LDA ObjectFlags,X\r\n$B3B3>
    29 20:   AND #$20        \r\n$B3B5> D0 18:   BNE ++                                             
    ; $B3CF               \r\n$B3B7> DE 4006: DEC ObjectFireDelay,X     \r\n$B3BA>
    D0 0F:   BNE +                                               ; $B3CB              
    \r\n$B3BC> BD 2004: LDA ObjectFlags,X     \r\n$B3BF> 09 20:   ORA #$20       
    \r\n$B3C1> 29 F0:   AND #$f0        \r\n$B3C3> 9D 2004: STA ObjectFlags,X    
    \r\n$B3C6> A9 50:   LDA #$50        \r\n$B3C8> 9D 4006: STA ObjectFireDelay,X    
    \r\n+\r\n-\r\n$B3CB> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck\r\n$B3CE> 60:     
    RTS             \r\n\r\n++\r\n$B3CF> DE 4006: DEC ObjectFireDelay,X\r\n$B3D2>
    D0 F7:   BNE -                                               ; $B3CB              
    \r\n$B3D4> BD 2004: LDA ObjectFlags,X     \r\n$B3D7> 29 0F:   AND #$0f       
    \r\n$B3D9> 09 02:   ORA #$02        \r\n$B3DB> 9D 2004: STA ObjectFlags,X    
    \r\n$B3DE> A9 3F:   LDA #$3f        \r\n$B3E0> 9D 4006: STA ObjectFireDelay,X    
    \r\n$B3E3> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$B3E6> BD E006:
    LDA ObjectType,X     \r\n$B3E9> 29 01:   AND #$01        \r\n$B3EB> D0 0B:  
    BNE +                                               ; $B3F8               \r\n$B3ED>
    A5 31:   LDA CurrentStage         \r\n$B3EF> C9 04:   CMP #$04        \r\n$B3F1>
    D0 05:   BNE +                                               ; $B3F8              
    \r\n$B3F3> A9 13:   LDA #$13        ; Electricity (at Elecman stage)\r\n$B3F5>
    20 77C4: JSR IssueSound                                      ; $C477       \r\n+\r\n$B3F8>
    60:      RTS\r\n\r\n\r\n\r\nAI_TemporaryBlockManager\r\n$B3F9> BD 4006: LDA ObjectFireDelay,X\r\n$B3FC>
    C9 BB:   CMP #$BB\r\n$B3FE> D0 05:   BNE +\r\n$B400> A9 00:   LDA #$00       
    \r\n$B402> 9D C006: STA ObjectLifeMeter,X     \r\n+\r\n$B405> DE 4006: DEC ObjectFireDelay,X    
    \r\n$B408> D0 78:   BNE +++\r\n$B40A> A0 00:   LDY #$00        \r\n$B40C> A5
    31:   LDA CurrentStage         \r\n$B40E> C9 01:   CMP #$01          ;Iceman
    stage?\r\n$B410> D0 0A:   BNE +\r\n$B412> A5 1B:   LDA ScrollPosScreen        
    \r\n$B414> C9 0A:   CMP #$0A\r\n$B416> F0 0E:   BEQ ++\r\n$B418> A0 02:   LDY
    #$02        \r\n$B41A> D0 0A:   BNE ++\r\n+\r\n$B41C> A0 04:   LDY #$04       
    \r\n$B41E> A5 1B:   LDA ScrollPosScreen         \r\n$B420> C9 05:   CMP #$05       
    \r\n$B422> F0 02:   BEQ ++\r\n$B424> A0 06:   LDY #$06        \r\n++\r\n$B426>
    B9 86B4: LDA TemporaryBlockControlTable+0,Y\r\n$B429> 85 04:   STA $04        
    \r\n$B42B> B9 87B4: LDA TemporaryBlockControlTable+1,Y\r\n$B42E> 85 05:   STA
    $05         \r\n$B430> BD C006: LDA ObjectLifeMeter,X     ;ObjectLifeMeter is
    the index\r\n$B433> 0A:      ASL A                     ;into the block table.\r\n$B434>
    A8:      TAY             \r\n$B435> FE C006: INC ObjectLifeMeter,X     \r\n$B438>
    B1 04:   LDA ($04),Y             \r\n$B43A> D0 00:   BNE +\r\n+\r\n$B43C> C9
    FF:   CMP #$ff        \r\n$B43E> D0 07:   BNE +\r\n$B440> A9 00:   LDA #$00                
    ;Reset the loop\r\n$B442> 9D C006: STA ObjectLifeMeter,X     \r\n$B445> A9 3F:  
    LDA #$3F        \r\n+\r\n$B447> 9D 4006: STA ObjectFireDelay,X     \r\n$B44A>
    C8:      INY             \r\n$B44B> B1 04:   LDA ($04),Y             \r\n$B44D>
    85 0E:   STA $0E         \r\n$B44F> A9 01:   LDA #$01        \r\n$B451> 85 0C:  
    STA $0C         \r\n$B453> A5 0E:   LDA $0E         \r\n$B455> 20 25C6: JSR LoadActiveByIndexAndSetBlockingness
    \r\n$B458> A9 27:   LDA #$27         ;Create the temporary block\r\n$B45A> 20
    63F6: JSR CreateEnemy                                       ; $F663       \r\n$B45D>
    B0 21:   BCS +\r\n$B45F> 20 45B0:  JSR ClearObjectMem                                 
    ; $B045       \r\n$B462> A9 00:    LDA #$00        \r\n$B464> 9D 2004:  STA ObjectFlags,X    
    \r\n$B467> A9 70:    LDA #$70        \r\n$B469> 9D 4006:  STA ObjectFireDelay,X    
    \r\n$B46C> A5 0C:    LDA $0C         \r\n$B46E> 9D 8004:  STA ObjectPosX,X    
    \r\n$B471> A5 0D:    LDA $0D         \r\n$B473> 9D 0006:  STA ObjectPosY,X    
    \r\n$B476> A5 0E:    LDA $0E         \r\n$B478> 9D C006:  STA ObjectLifeMeter,X    
    \r\n\r\n$B47B> A9 2C:   LDA #$2C        ; Temporary block appearing\r\n$B47D>
    20 77C4: JSR IssueSound                                      ; $C477       \r\n+\r\n$B480>
    A6 2F:   LDX RefObjectNumber\r\n+++\r\n$B482> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$B485> 60:      RTS             \r\n\r\nTemporaryBlockControlTable: ;At B486\r\n   
    .word TemporaryBlockControl0 ; Iceman stage room 10\r\n    .word TemporaryBlockControl1
    ; Iceman stage other room\r\n    .word TemporaryBlockControl2 ; Other stage room
    5\r\n    .word TemporaryBlockControl3 ; Other stage other room\r\n\r\n; Format:
    delay, index into the active table (times 6).\r\nTemporaryBlockControl0: ;Iceman
    stage room 10 (at B48E)\r\n    .byte $3F,$12\r\n    .byte $3F,$00\r\n    .byte
    $3F,$1E\r\n    .byte $3F,$24\r\n    .byte $3F,$0C\r\n    .byte $3F,$18\r\nx  
    .byte $FF,$06\r\nTemporaryBlockControl1: ;Iceman stage other room (at B49C)\r\n   
    .byte $01,$2A\r\n    .byte $3F,$30\r\n    .byte $01,$3C\r\n    .byte $3F,$48\r\n   
    .byte $01,$42\r\n    .byte $3F,$54\r\n    .byte $01,$60\r\n    .byte $3F,$66\r\n   
    .byte $3F,$5A\r\n    .byte $3F,$4E\r\n    .byte $FF,$36\r\nTemporaryBlockControl2:
    ; Other stage room 5 (at B4B2)\r\n    .byte $3F,$0C\r\n    .byte $3F,$06\r\n   
    .byte $3F,$12\r\n    .byte $FF,$00\r\nTemporaryBlockControl3: ; Other stage other
    room (at B4BA)\r\n    .byte $3F,$2A\r\n    .byte $2F,$24\r\n    .byte $3F,$1E\r\n   
    .byte $FF,$18\r\n\r\nAI_TemporaryBlock\r\n$B4C2> BD 4004: LDA ObjectUnknown440,X\r\n$B4C5>
    29 F0:   AND #$f0        \r\n$B4C7> C9 50:   CMP #$50        \r\n$B4C9> D0 03:  
    BNE +                                               ; $B4CE               \r\n$B4CB>
    9D 4004: STA ObjectUnknown440,X     \r\n+\r\n$B4CE> DE 4006: DEC ObjectFireDelay,X\r\n$B4D1>
    F0 06:   BEQ +                                               ; $B4D9              
    \r\n$B4D3> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$B4D6> B0 01:  
    BCS +                                               ; $B4D9\r\n$B4D8> 60:     
    RTS             \r\n+\r\n$B4D9> A9 00:   LDA #$00\r\n$B4DB> 85 0C:   STA $0C        
    \r\n$B4DD> BD C006: LDA ObjectLifeMeter,X     \r\n$B4E0> 20 25C6: JSR LoadActiveByIndexAndSetBlockingness      
    \r\n$B4E3> 4C B1BE: JMP RemoveObject                                    ; $BEB1      
    \r\n\r\n\r\nAI_ZigzagFire\r\n$B4E6> BD 6004: LDA ObjectPosScreen,X\r\n$B4E9>
    C9 0A:   CMP #$0a        \r\n$B4EB> D0 05:   BNE $B4F2               \r\n$B4ED>
    A9 06:   LDA #$06        \r\n$B4EF> 9D 4006: STA ObjectFireDelay,X     \r\n$B4F2>
    BD 4006: LDA ObjectFireDelay,X     \r\n$B4F5> 29 01:   AND #$01        \r\n$B4F7>
    F0 41:   BEQ $B53A               \r\n$B4F9> BD 4004: LDA ObjectUnknown440,X    
    \r\n$B4FC> D0 05:   BNE $B503               \r\n$B4FE> A9 30:   LDA #$30       
    \r\n$B500> 9D 4004: STA ObjectUnknown440,X     \r\n$B503> BD 4006: LDA ObjectFireDelay,X    
    \r\n$B506> A8:      TAY             \r\n$B507> BD 2004: LDA ObjectFlags,X    
    \r\n$B50A> 29 40:   AND #$40        \r\n$B50C> F0 0A:   BEQ $B518              
    \r\n$B50E> B9 92B5: LDA $B592,Y     \r\n$B511> DD 8004: CMP ObjectPosX,X    
    \r\n$B514> B0 56:   BCS $B56C               \r\n$B516> 90 08:   BCC $B520              
    \r\n$B518> B9 92B5: LDA $B592,Y     \r\n$B51B> DD 8004: CMP ObjectPosX,X    
    \r\n$B51E> 90 4C:   BCC $B56C               \r\n$B520> 9D 8004: STA ObjectPosX,X    
    \r\n$B523> A9 00:   LDA #$00        \r\n$B525> 9D 4004: STA ObjectUnknown440,X    
    \r\n$B528> BD 2004: LDA ObjectFlags,X     \r\n$B52B> 09 10:   ORA #$10       
    \r\n$B52D> 9D 2004: STA ObjectFlags,X     \r\n$B530> A0 68:   LDY #$68       
    \r\n$B532> 20 33F5: JSR InitObjectDefaultSpeed       \r\n$B535> FE 4006: INC
    ObjectFireDelay,X     \r\n$B538> D0 32:   BNE $B56C               \r\n$B53A>
    BD 4004: LDA ObjectUnknown440,X     \r\n$B53D> C9 30:   CMP #$30        \r\n$B53F>
    D0 05:   BNE $B546               \r\n$B541> A9 00:   LDA #$00        \r\n$B543>
    9D 4004: STA ObjectUnknown440,X     \r\n$B546> BD 4006: LDA ObjectFireDelay,X    
    \r\n$B549> A8:      TAY             \r\n$B54A> B9 92B5: LDA B592_table,Y    
    \r\n$B54D> DD 0006: CMP ObjectPosY,X     \r\n$B550> B0 1A:   BCS +\r\n$B552>
    9D 0006: STA ObjectPosY,X     \r\n$B555> A9 30:   LDA #$30        \r\n$B557>
    9D 4004: STA ObjectUnknown440,X     \r\n$B55A> BD 2004: LDA ObjectFlags,X    
    \r\n$B55D> 49 40:   EOR #$40        \r\n$B55F> 29 EF:   AND #$ef        \r\n$B561>
    9D 2004: STA ObjectFlags,X     \r\n$B564> A0 60:   LDY #$60        \r\n$B566>
    20 33F5: JSR InitObjectDefaultSpeed       \r\n$B569> FE 4006: INC ObjectFireDelay,X    
    \r\n+\r\n$B56C> BD 0006: LDA ObjectPosY,X     \r\n$B56F> C9 D8:   CMP #$d8       
    \r\n$B571> 90 1B:   BCC $B58E               \r\n$B573> BD 6004: LDA ObjectPosScreen,X    
    \r\n$B576> E9 0A:   SBC #$0a        \r\n$B578> A8:      TAY             \r\n$B579>
    B9 99B5: LDA B599_table,Y     \r\n$B57C> 9D 8004: STA ObjectPosX,X     \r\n$B57F>
    A9 04:   LDA #$04        \r\n$B581> 9D 0006: STA ObjectPosY,X     \r\n$B584>
    A9 00:   LDA #$00        \r\n$B586> 9D 4006: STA ObjectFireDelay,X     \r\n$B589>
    A0 2C:   LDY #$2c        \r\n$B58B> 20 33F5: JSR InitObjectDefaultSpeed      
    \r\n$B58E> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$B591> 60:     
    RTS             \r\n\r\nB592_table: .byte $60,$50,$A0,$D0,$FF,$FF,$FF\r\nB599_table:
    .byte $D0,$B0\r\n\r\n\r\nAI_VerticalFire\r\n$B59B> BD 2004: LDA ObjectFlags,X\r\n$B59E>
    29 20:   AND #$20        \r\n$B5A0> D0 4D:   BNE $B5EF               \r\n$B5A2>
    BD 2004: LDA ObjectFlags,X     \r\n$B5A5> 29 80:   AND #$80        \r\n$B5A7>
    D0 66:   BNE $B60F               \r\n$B5A9> BD A006: LDA ObjectLifeCycleCounter,X    
    \r\n$B5AC> F0 03:   BEQ $B5B1               \r\n$B5AE> 4C 57B6: JMP $B657      
    \r\n$B5B1> A9 06:   LDA #$06        \r\n$B5B3> 9D 2004: STA ObjectFlags,X    
    \r\n$B5B6> BD 4004: LDA ObjectUnknown440,X     \r\n$B5B9> C9 30:   CMP #$30       
    \r\n$B5BB> D0 05:   BNE $B5C2               \r\n$B5BD> A9 00:   LDA #$00       
    \r\n$B5BF> 9D 4004: STA ObjectUnknown440,X     \r\n$B5C2> DE 4006: DEC ObjectFireDelay,X    
    \r\n$B5C5> D0 3C:   BNE $B603               \r\n$B5C7> BD 8006: LDA ObjectYSpeed,X    
    \r\n$B5CA> F0 17:   BEQ $B5E3               \r\n$B5CC> 10 0E:   BPL $B5DC              
    \r\n$B5CE> A9 00:   LDA #$00        \r\n$B5D0> 9D 8006: STA ObjectYSpeed,X    
    \r\n$B5D3> A9 20:   LDA #$20        \r\n$B5D5> 9D 2004: STA ObjectFlags,X    
    \r\n$B5D8> A9 18:   LDA #$18        \r\n$B5DA> D0 0E:   BNE $B5EA              
    \r\n$B5DC> A9 00:   LDA #$00        \r\n$B5DE> 9D 8006: STA ObjectYSpeed,X    
    \r\n$B5E1> F0 05:   BEQ $B5E8               \r\n$B5E3> A9 FE:   LDA #$fe       
    \r\n$B5E5> 9D 8006: STA ObjectYSpeed,X     \r\n$B5E8> A9 20:   LDA #$20       
    \r\n$B5EA> 9D 4006: STA ObjectFireDelay,X     \r\n$B5ED> D0 14:   BNE $B603              
    \r\n$B5EF> DE 4006: DEC ObjectFireDelay,X     \r\n$B5F2> D0 0F:   BNE $B603              
    \r\n$B5F4> A9 06:   LDA #$06        \r\n$B5F6> 9D 2004: STA ObjectFlags,X    
    \r\n$B5F9> A9 02:   LDA #$02        \r\n$B5FB> 9D 8006: STA ObjectYSpeed,X    
    \r\n$B5FE> A9 20:   LDA #$20        \r\n$B600> 9D 4006: STA ObjectFireDelay,X    
    \r\n$B603> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$B606> 90 06:  
    BCC $B60E               \r\n$B608> 20 6BB6: JSR $B66B       \r\n$B60B> 20 4AC6:
    JSR $C64A       \r\n$B60E> 60:      RTS             \r\n\r\n\r\n\r\n$B60F> A9
    00:   LDA #$00\r\n$B611> 9D 2004: STA ObjectFlags,X     \r\n$B614> A5 5F:   LDA
    WeaponSelect         \r\n$B616> C9 02:   CMP #$02        \r\n$B618> D0 8F:  
    BNE $B5A9               \r\n$B61A> BD 0006: LDA ObjectPosY,X     \r\n$B61D> 48:     
    PHA             \r\n$B61E> 29 F0:   AND #$f0        \r\n$B620> 9D 0006: STA ObjectPosY,X    
    \r\n$B623> BD 8006: LDA ObjectYSpeed,X     \r\n$B626> 10 14:   BPL $B63C              
    \r\n$B628> 68:      PLA             \r\n$B629> 29 0F:   AND #$0f        \r\n$B62B>
    F0 1E:   BEQ $B64B               \r\n$B62D> 18:      CLC             \r\n$B62E>
    49 0F:   EOR #$0f        \r\n$B630> 69 01:   ADC #$01        \r\n$B632> 48:     
    PHA             \r\n$B633> 18:      CLC             \r\n$B634> BD 0006: LDA ObjectPosY,X    
    \r\n$B637> 69 10:   ADC #$10        \r\n$B639> 9D 0006: STA ObjectPosY,X    
    \r\n$B63C> 68:      PLA             \r\n$B63D> 29 0F:   AND #$0f        \r\n$B63F>
    4A:      LSR A           \r\n$B640> 85 0C:   STA $0C         \r\n$B642> 38:     
    SEC             \r\n$B643> BD 4006: LDA ObjectFireDelay,X     \r\n$B646> E5 0C:  
    SBC $0C         \r\n$B648> 9D 4006: STA ObjectFireDelay,X     \r\n$B64B> 20 6BB6:
    JSR $B66B       \r\n$B64E> 38:      SEC             \r\n$B64F> BD 0006: LDA ObjectPosY,X    
    \r\n$B652> E9 20:   SBC #$20        \r\n$B654> 20 3FC6: JSR $C63F       \r\n$B657>
    BD A006: LDA ObjectLifeCycleCounter,X     \r\n$B65A> C9 01:   CMP #$01       
    \r\n$B65C> D0 06:   BNE $B664               \r\n$B65E> 20 6BB6: JSR $B66B      
    \r\n$B661> 20 4AC6: JSR $C64A       \r\n$B664> A9 30:   LDA #$30        \r\n$B666>
    9D 4004: STA ObjectUnknown440,X     \r\n$B669> D0 98:   BNE $B603              
    \r\n$B66B> BD 8004: LDA ObjectPosX,X     \r\n$B66E> 29 F0:   AND #$f0       
    \r\n$B670> 1D 6004: ORA ObjectPosScreen,X     \r\n$B673> A0 00:   LDY #$00       
    \r\n$B675> 48:      PHA             \r\n$B676> A5 31:   LDA CurrentStage        
    \r\n$B678> C9 06:   CMP #$06        \r\n$B67A> F0 13:   BEQ $B68F              
    \r\n$B67C> 68:      PLA             \r\n$B67D> D9 98B6: CMP $B698,Y     \r\n$B680>
    F0 03:   BEQ $B685               \r\n$B682> C8:      INY             \r\n$B683>
    D0 F8:   BNE $B67D               \r\n$B685> 98:      TYA             \r\n$B686>
    0A:      ASL A           \r\n$B687> 85 0C:   STA $0C         \r\n$B689> 0A:     
    ASL A           \r\n$B68A> 65 0C:   ADC $0C         \r\n$B68C> 85 0C:   STA $0C        
    \r\n$B68E> 60:      RTS             \r\n$B68F> 68:      PLA             \r\n$B690>
    D9 A7B6: CMP $B6A7,Y     \r\n$B693> F0 F0:   BEQ $B685               \r\n$B695>
    C8:      INY             \r\n$B696> D0 F8:   BNE $B690               \r\n$B698>
    72:      .byte $72                \r\n\r\n$B699> 33:      .byte $33               
    \r\n\r\n$B69A> 53:      .byte $53                \r\n\r\n$B69B> 74:      .byte
    $74                \r\n\r\n$B69C> 94 56:   STY $56,X               \r\n$B69E>
    76 97:   ROR $97,X               \r\n$B6A0> D7:      .byte $d7               
    \r\n\r\n$B6A1> 58:      CLI             \r\n$B6A2> 98:      TYA             \r\n$B6A3>
    F9 3ABF: SBC $BF3A,Y     \r\n$B6A6> DF:      .byte $df                \r\n\r\n$B6A7>
    00:      BRK             \r\n$B6A8> 00:      BRK             \r\n$B6A9> 00:     
    BRK             \r\n$B6AA> 00:      BRK             \r\n$B6AB> 00:      BRK            
    \r\n$B6AC> 7E 9EDE: ROR $DE9E,X     \r\n\r\n\r\nAI_GenericWithLifeTimer\r\n\r\n;
    Remove object is passed certain time, else jsr EnemyAI_MovementsAndDamageCheck\r\n$B6AF>
    BD 2004: LDA ObjectFlags,X\r\n$B6B2> 29 10:   AND #$10        \r\n$B6B4> F0 0D:  
    BEQ AI_Generic\r\n$B6B6> FE 4006: INC ObjectFireDelay,X     \r\n$B6B9> BD 4006:
    LDA ObjectFireDelay,X     \r\n$B6BC> C9 F0:   CMP #$f0        \r\n$B6BE> D0 03:  
    BNE AI_Generic\r\n$B6C0> 4C B1BE: JMP RemoveObject                                   
    ; $BEB1       \r\n\r\nAI_Generic\r\n$B6C3> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck\r\n$B6C6>
    60:      RTS             \r\n\r\nAI_Object1B ;small explosion?\r\n$B6C7> BD 4004:
    LDA ObjectUnknown440,X\r\n$B6CA> D0 F7:   BNE AI_Generic               \r\n$B6CC>
    4C B1BE: JMP RemoveObject                                    ; $BEB1       \r\n\r\nAI_Object1C\r\n$B6CF>
    BD 4006: LDA ObjectFireDelay,X\r\n$B6D2> D0 34:   BNE ++\r\n$B6D4> 20 3BF6: JSR
    EnemySearchMegaman       \r\n$B6D7> C9 50:   CMP #$50        \r\n$B6D9> B0 30:  
    BCS +++\r\n$B6DB> AA:      TAX             \r\n$B6DC> A0 00:   LDY #$00       
    \r\n$B6DE> A9 33:   LDA #$33        \r\n$B6E0> 20 ACC5: JSR EnemyCalculateJumpCurveToHitMegaman      
    \r\n$B6E3> A9 11:   LDA #$11        \r\n$B6E5> 20 63F6: JSR CreateEnemy                                      
    ; $F663       \r\n$B6E8> B0 17:   BCS +\r\n$B6EA> BD 2004: LDA ObjectFlags,X    
    \r\n$B6ED> 09 14:   ORA #$14        \r\n$B6EF> 9D 2004: STA ObjectFlags,X    
    \r\n$B6F2> A0 70:   LDY #$70        \r\n$B6F4> 20 33F5: JSR InitObjectDefaultSpeed      
    \r\n$B6F7> A5 05:   LDA $05         \r\n$B6F9> 9D C004: STA ObjectXSpeed,X    
    \r\n$B6FC> A5 04:   LDA $04         \r\n$B6FE> 9D E004: STA ObjectXSpeedFraction,X    
    \r\n+\r\n$B701> A6 2F:   LDX RefObjectNumber         \r\n$B703> A9 20:   LDA
    #$20        \r\n$B705> 9D 4006: STA ObjectFireDelay,X     \r\n++\r\n$B708> DE
    4006: DEC ObjectFireDelay,X     \r\n+++\r\n$B70B> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$B70E> 60:      RTS             \r\n\r\nAI_Object1D\r\n$B70F> B5 6B:   LDA
    Meters+1,X\r\n$B711> 48:      PHA\r\n$B712> 20 49BE:  JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$B715> 68:      PLA             \r\n$B716> 85 0D:   STA $0D\r\n$B718> BD
    4006: LDA ObjectFireDelay,X     \r\n$B71B> D0 1F:   BNE +++\r\n$B71D> BD E006:
    LDA ObjectType,X     \r\n$B720> C9 1B:   CMP #$1b        \r\n$B722> D0 17:  
    BNE ++                                              ; $B73B               \r\n$B724>
    A9 1E:   LDA #$1e        \r\n$B726> 85 0C:   STA $0C         \r\n$B728> A2 10:  
    LDX #$10        \r\n-\r\n$B72A> 20 16F5: JSR FindObjectOfSelectedType\r\n$B72D>
    B0 0C:   BCS ++                                              ; $B73B              
    \r\n$B72F> B5 6B:   LDA Meters+1,X               \r\n$B731> C5 0D:   CMP $0D        
    \r\n$B733> F0 03:   BEQ +                                               ; $B738              
    \r\n$B735> E8:      INX             \r\n$B736> D0 F2:   BNE -                                              
    ; $B72A               \r\n+\r\n$B738> 20 E9BE: JSR EnemyKilled                                    
    ; $BEE9\r\n++\r\n$B73B> 60:      RTS\r\n+++\r\n$B73C> DE 4006: DEC ObjectFireDelay,X\r\n$B73F>
    D0 FA:   BNE $B73B               \r\n$B741> A9 00:   LDA #$00        \r\n$B743>
    9D 8006: STA ObjectYSpeed,X     \r\n$B746> A9 01:   LDA #$01        \r\n$B748>
    9D C004: STA ObjectXSpeed,X     \r\n$B74B> A9 20:   LDA #$20        \r\n$B74D>
    9D E004: STA ObjectXSpeedFraction,X     \r\n$B750> A9 1F:   LDA #$1f        \r\n$B752>
    9D E006: STA ObjectType,X     \r\n$B755> 60:      RTS             \r\n\r\n\r\nAI_Object1E\r\n$B756>
    20 3BF6: JSR EnemySearchMegaman\r\n$B759> BD 2004: LDA ObjectFlags,X     \r\n$B75C>
    29 40:   AND #$40        \r\n$B75E> F0 0F:   BEQ +\r\n$B760> A9 29:   LDA #$29       
    \r\n$B762> 9D E006: STA ObjectType,X     \r\n$B765> A9 1F:   LDA #$1f       
    \r\n$B767> 9D 4006: STA ObjectFireDelay,X     \r\n$B76A> A9 17:   LDA #$17       
    \r\n$B76C> 9D 2004: STA ObjectFlags,X     \r\n+\r\n$B76F> B5 6B:   LDA Meters+1,X              
    \r\n$B771> 48:      PHA             \r\n$B772> 20 49BE:  JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$B775> 68:      PLA             \r\n$B776> 85 0D:   STA $0D         \r\n$B778>
    A9 1D:   LDA #$1d        \r\n$B77A> 85 0C:   STA $0C         \r\n$B77C> A2 10:  
    LDX #$10        \r\n-\r\n$B77E> 20 16F5: JSR FindObjectOfSelectedType       \r\n$B781>
    B0 5B:   BCS ++\r\n$B783> B5 6B:   LDA Meters+1,X               \r\n$B785> C5
    0D:   CMP $0D         \r\n$B787> F0 03:   BEQ +\r\n$B789> E8:      INX            
    \r\n$B78A> D0 F2:   BNE -\r\n+\r\n$B78C> A4 2F:   LDY RefObjectNumber        
    \r\n$B78E> 38:      SEC             \r\n$B78F> B9 0006: LDA ObjectPosY,Y     
    ;Put this object 16 pixels above the ref object\r\n$B792> E9 10:   SBC #$10       
    \r\n$B794> 9D 0006: STA ObjectPosY,X     \r\n$B797> B9 8004: LDA ObjectPosX,Y     
    ;At same X coordinate\r\n$B79A> 9D 8004: STA ObjectPosX,X     \r\n$B79D> B9 6004:
    LDA ObjectPosScreen,Y     \r\n$B7A0> 9D 6004: STA ObjectPosScreen,X     \r\n$B7A3>
    BD A006: LDA ObjectLifeCycleCounter,X     \r\n$B7A6> F0 03:   BEQ +\r\n$B7A8>
    99 A006: STA ObjectLifeCycleCounter,Y     \r\n+\r\n$B7AB> B9 A006: LDA ObjectLifeCycleCounter,Y    
    \r\n$B7AE> F0 03:   BEQ +\r\n$B7B0> 9D A006: STA ObjectLifeCycleCounter,X    
    \r\n+\r\n$B7B3> B9 E006: LDA ObjectType,Y     \r\n$B7B6> C9 1B:   CMP #$1b       
    \r\n$B7B8> F0 07:   BEQ +\r\n$B7BA> B9 E006: LDA ObjectType,Y     \r\n$B7BD>
    C9 29:   CMP #$29        \r\n$B7BF> D0 1D:   BNE ++\r\n+\r\n$B7C1> A9 1D:   LDA
    #$1d        \r\n$B7C3> 9D E006: STA ObjectType,X     \r\n$B7C6> A9 09:   LDA
    #$09        \r\n$B7C8> 9D 4006: STA ObjectFireDelay,X     \r\n$B7CB> A9 00:  
    LDA #$00        \r\n$B7CD> 9D 4004: STA ObjectUnknown440,X     \r\n$B7D0> 9D
    E004: STA ObjectXSpeedFraction,X     \r\n$B7D3> 9D C004: STA ObjectXSpeed,X    
    \r\n$B7D6> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$B7D9> A9 04:   LDA #$04       
    \r\n$B7DB> 9D 8006: STA ObjectYSpeed,X     \r\n++\r\n$B7DE> A6 2F:   LDX RefObjectNumber        
    \r\n$B7E0> FE 4006: INC ObjectFireDelay,X     \r\n$B7E3> BD 4006: LDA ObjectFireDelay,X    
    \r\n$B7E6> C9 3F:   CMP #$3f        \r\n$B7E8> D0 1F:   BNE +\r\n$B7EA> A9 00:  
    LDA #$00        \r\n$B7EC> 9D 4006: STA ObjectFireDelay,X     \r\n$B7EF> BD A006:
    LDA ObjectLifeCycleCounter,X     \r\n$B7F2> D0 15:   BNE +\r\n$B7F4> A9 1A:  
    LDA #$1A\r\n$B7F6> 20 63F6: JSR CreateEnemy ;bullet sound?\r\n$B7F9> B0 0E:  
    BCS +\r\n$B7FB> 38:      SEC             \r\n$B7FC> BD 0006: LDA ObjectPosY,X    
    \r\n$B7FF> E9 0C:   SBC #$0c        \r\n$B801> 9D 0006: STA ObjectPosY,X    
    \r\n$B804> A0 24:   LDY #$24        \r\n$B806> 20 33F5: JSR InitObjectDefaultSpeed      
    \r\n+\r\n$B809> 60:      RTS             \r\n\r\nAI_RogueRobotHead\r\n$B80A>
    BD 2004: LDA ObjectFlags,X     \r\n$B80D> 29 08:   AND #$08        \r\n$B80F>
    F0 07:   BEQ +\r\n$B811> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$B814>
    A9 00:   LDA #$00        \r\n$B816> F0 48:   BEQ +++\r\n+\r\n$B818> 20 D1AA:
    JSR AI_Blader\r\n$B81B> BD 4006: LDA ObjectFireDelay,X     \r\n$B81E> C9 32:  
    CMP #$32        \r\n$B820> D0 05:   BNE +\r\n$B822> A9 10:   LDA #$10       
    \r\n$B824> 9D 4004: STA ObjectUnknown440,X     \r\n+\r\n$B827> BD 4004: LDA ObjectUnknown440,X    
    \r\n$B82A> 29 F0:   AND #$f0        \r\n$B82C> F0 32:   BEQ +++\r\n$B82E> C9
    20:   CMP #$20        \r\n$B830> D0 2D:   BNE ++\r\n$B832> A9 20:   LDA #$20       
    \r\n$B834> 20 63F6: JSR CreateEnemy                                       ; $F663      
    \r\n$B837> B0 26:   BCS ++\r\n$B839> 18:      CLC             \r\n$B83A> BD 0006:
    LDA ObjectPosY,X     \r\n$B83D> 69 10:   ADC #$10        \r\n$B83F> 9D 0006:
    STA ObjectPosY,X     \r\n$B842> A0 00:   LDY #$00        \r\n$B844> BD 2004:
    LDA ObjectFlags,X     \r\n$B847> 29 40:   AND #$40        \r\n$B849> F0 01:  
    BEQ +\r\n$B84B> C8:      INY             \r\n+\r\n$B84C> 18:      CLC            
    \r\n$B84D> BD 8004: LDA ObjectPosX,X     \r\n$B850> 79 66B8: ADC RogueRobotHead_XloTable,Y    
    \r\n$B853> 9D 8004: STA ObjectPosX,X     \r\n$B856> BD 6004: LDA ObjectPosScreen,X    
    \r\n$B859> 79 64B8: ADC RogueRobotHead_XhiTable,Y     \r\n$B85C> 9D 6004: STA
    ObjectPosScreen,X     \r\n++\r\n$B85F> 60:      RTS             \r\n+++\r\n$B860>
    9D 4004: STA ObjectUnknown440,X     \r\n$B863> 60:      RTS             \r\n\r\nRogueRobotHead_XhiTable:
    .byte  -1,0\r\nRogueRobotHead_XloTable: .byte -11,11\r\n\r\nAI_Object20\r\n$B868>
    BD 4004: LDA ObjectUnknown440,X     \r\n$B86B> F0 05:   BEQ +\r\n$B86D> A9 F8:  
    LDA #$f8        \r\n$B86F> 9D 0006: STA ObjectPosY,X     \r\n+\r\n$B872> 20 49BE:
    JSR EnemyAI_MovementsAndDamageCheck       \r\n$B875> 60:      RTS            
    \r\n\r\n\r\n\r\nAI_BombombCluster\r\n$B876> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck\r\n\r\n$B879>
    A5 2A:   LDA $2A\r\n$B87B> 05 2B:   ORA $2B         \r\n$B87D> F0 18:   BEQ +                                              
    ; $B897               \r\n$B87F> A9 02:   LDA #$02        \r\n$B881> 9D 2004:
    STA ObjectFlags,X     \r\n$B884> A9 1B:   LDA #$1b        \r\n$B886> 9D E006:
    STA ObjectType,X     \r\n\r\n$B889> 20 45B0: JSR ClearObjectMem                                 
    ; $B045\r\n$B88C> 9D 4004: STA ObjectUnknown440,X     \r\n$B88F> 9D 4006: STA
    ObjectFireDelay,X     \r\n$B892> A9 12:   LDA #$12        ; Explosion sound\r\n$B894>
    20 77C4: JSR IssueSound                                      ; $C477       \r\n+\r\n$B897>
    60:      RTS\r\n\r\n\r\nAI_Object28 ; Individual explosion part\r\n$B898> FE
    4006: INC ObjectFireDelay,X\r\n$B89B> BD 4006: LDA ObjectFireDelay,X     \r\n$B89E>
    C9 0E:   CMP #$0e        \r\n$B8A0> D0 D0:   BNE $B872               ; If life
    is less than 14 frames, just idle\r\n$B8A2> A9 F8:   LDA #$f8        \r\n$B8A4>
    9D 0006: STA ObjectPosY,X        ; Then die.\r\n$B8A7> 60:      RTS            
    \r\n\r\nAI_Object29\r\n$B8A8> DE 4006: DEC ObjectFireDelay,X     \r\n$B8AB> D0
    C5:   BNE $B872               \r\n$B8AD> F0 D0:   BEQ $B87F               \r\nAI_Object2A\r\n$B8AF>
    20 3BF6: JSR EnemySearchMegaman       \r\n$B8B2> 38:      SEC             \r\n$B8B3>
    AD 0006: LDA ObjectPosY+0      \r\n$B8B6> FD 0006: SBC ObjectPosY,X     \r\n$B8B9>
    B0 04:   BCS $B8BF               \r\n$B8BB> 49 FF:   EOR #$ff        \r\n$B8BD>
    69 01:   ADC #$01        \r\n$B8BF> 85 0C:   STA $0C         \r\n$B8C1> C9 28:  
    CMP #$28        \r\n$B8C3> B0 4F:   BCS $B914               \r\n$B8C5> BD 4006:
    LDA ObjectFireDelay,X     \r\n$B8C8> C9 10:   CMP #$10        \r\n$B8CA> D0 41:  
    BNE $B90D               \r\n$B8CC> A5 0C:   LDA $0C         \r\n$B8CE> C9 1C:  
    CMP #$1c        \r\n$B8D0> B0 3E:   BCS $B910               \r\n$B8D2> A9 01:  
    LDA #$01        \r\n$B8D4> 85 0C:   STA $0C         \r\n$B8D6> A9 2B:   LDA #$2b       
    \r\n$B8D8> 20 63F6: JSR CreateEnemy                                       ; $F663      
    \r\n$B8DB> B0 18:   BCS $B8F5               \r\n$B8DD> 20 45B0: JSR ClearObjectMem      
    \r\n$B8E0> A4 0C:   LDY $0C         \r\n$B8E2> 18:      CLC             \r\n$B8E3>
    BD 0006: LDA ObjectPosY,X     \r\n$B8E6> 79 1FB9: ADC $B91F,Y     \r\n$B8E9>
    9D 0006: STA ObjectPosY,X     \r\n$B8EC> A9 04:   LDA #$04        \r\n$B8EE>
    9D C004: STA ObjectXSpeed,X     \r\n$B8F1> C6 0C:   DEC $0C         \r\n$B8F3>
    10 E1:   BPL $B8D6               \r\n$B8F5> A6 2F:   LDX RefObjectNumber        
    \r\n$B8F7> BD 4006: LDA ObjectFireDelay,X     \r\n$B8FA> 20 63AB: JSR ObjectFlipYmovement      
    \r\n$B8FD> 1E 6006: ASL ObjectYSpeedFraction,X     \r\n$B900> 3E 8006: ROL ObjectYSpeed,X    
    \r\n$B903> BD 2004: LDA ObjectFlags,X     \r\n$B906> 09 08:   ORA #$08       
    \r\n$B908> 9D 2004: STA ObjectFlags,X     \r\n$B90B> D0 07:   BNE $B914              
    \r\n$B90D> FE 4006: INC ObjectFireDelay,X     \r\n$B910> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$B913> 60:      RTS             \r\n\r\n\r\n\r\n$B914> A9 30:   LDA #$30\r\n$B916>
    9D 4004: STA ObjectUnknown440,X     \r\n$B919> A9 06:   LDA #$06        \r\n$B91B>
    9D E006: STA ObjectType,X     \r\n$B91E> 60:      RTS             \r\n\r\n\r\n\r\n$B91F>
    14:      .byte $14\r\n\r\n$B920> EC:      .db $EC\r\n\r\nAI_LiftAnimator\r\n$B921>
    A0 00:   LDY #$00          ;moves left\r\n$B923> BD 4006: LDA ObjectFireDelay,X\r\n$B926>
    29 40:   AND #$40        \r\n$B928> 08:      PHP             \r\n$B929> F0 02:   
    BEQ +\r\n$B92B> A0 03:    LDY #$03         ;moves right\r\n+\r\n$B92D> 18:      
    CLC             \r\n$B92E> BD A004:  LDA ObjectPosXfraction,X     \r\n$B931>
    79 2CBA:  ADC LiftMovementData+0,Y     \r\n$B934> 9D A004:  STA ObjectPosXfraction,X    
    \r\n$B937> BD 8004:  LDA ObjectPosX,X     \r\n$B93A> 79 2DBA:  ADC LiftMovementData+1,Y    
    \r\n$B93D> 9D 8004:  STA ObjectPosX,X     \r\n$B940> BD 6004:  LDA ObjectPosScreen,X    
    \r\n$B943> 79 2EBA:  ADC LiftMovementData+2,Y     \r\n$B946> 9D 6004:  STA ObjectPosScreen,X    
    \r\n$B949> 38:       SEC             \r\n$B94A> BD 8004:  LDA ObjectPosX,X    
    \r\n$B94D> E5 1A:    SBC ScrollPosX         \r\n$B94F> A8:       TAY            
    \r\n$B950> BD 6004:  LDA ObjectPosScreen,X     \r\n$B953> E5 1B:    SBC ScrollPosScreen
    ;Disappearing on another screen?\r\n$B955> D0 0C:    BNE +\r\n$B957> C0 F8:   
    CPY #$F8      ;Disappearing on the right?   \r\n$B959> B0 08:    BCS +\r\n$B95B>
    C0 10:    CPY #$10      ;Disappearing on the left?\r\n$B95D> 90 04:    BCC +\r\n$B95F>
    A9 00:    LDA #$00      ;Make visible\r\n$B961> F0 02:    BEQ ++\r\n+\r\n$B963>
    A9 20:    LDA #$20      ;Make invisible\r\n++\r\n$B965> 9D 2004:  STA ObjectFlags,X    
    \r\n$B968> BD C006:  LDA ObjectLifeMeter,X    ;Load lift index\r\n$B96B> 0A:      
    ASL A           \r\n$B96C> A8:       TAY             ;lift index*2\r\n$B96D>
    48:       PHA             \r\n$B96E> B9 42BA:   LDA BA42_table+0,Y     \r\n$B971>
    85 04:     STA $04         \r\n$B973> B9 43BA:   LDA BA42_table+1,Y     \r\n$B976>
    85 05:     STA $05         \r\n$B978> 68:       PLA             \r\n$B979> 0A:      
    ASL A           ;lift index*4\r\n$B97A> 28:      PLP             \r\n$B97B> 48:     
    PHA             \r\n$B97C> D0 3D:    BNE AI_Lift_MovesRight\r\nAI_Lift_MovesLeft\r\n$B97E>
    BD 6006:  LDA ObjectYSpeedFraction,X      ;8 for lift 3, 0 for others\r\n$B981>
    F0 25:    BEQ ++\r\n$B983> 38:       SEC             \r\n$B984> E9 01:    SBC
    #$01        \r\n$B986> 0A:       ASL A           \r\n$B987> A8:       TAY            
    \r\n$B988> B1 04:    LDA ($04),Y             \r\n$B98A> 85 07:    STA LiftXScreenMovement\r\n$B98C>
    C8:       INY             \r\n$B98D> B1 04:    LDA ($04),Y             \r\n$B98F>
    85 06:    STA LiftXMovement         \r\n$B991> 20 20BA:  JSR LiftMove       \r\n$B994>
    90 12:    BCC ++\r\n$B996> BD 6006:  LDA ObjectYSpeedFraction,X     \r\n$B999>
    DE 6006:  DEC ObjectYSpeedFraction,X     \r\n$B99C> A0 10:    LDY #$10       
    \r\n$B99E> 29 01:    AND #$01        \r\n$B9A0> F0 02:    BEQ +\r\n$B9A2> A0
    30:    LDY #$30        \r\n+\r\n$B9A4> 98:       TYA             \r\n$B9A5> 9D
    4004:  STA ObjectUnknown440,X     \r\n++\r\n$B9A8> 68:      PLA             \r\n$B9A9>
    A8:      TAY             \r\n$B9AA> B9 32BA: LDA BA32_table+0,Y     \r\n$B9AD>
    85 06:   STA LiftXMovement+0\r\n$B9AF> B9 33BA: LDA BA32_table+1,Y     \r\n$B9B2>
    85 07:   STA LiftXScreenMovement\r\n$B9B4> 20 20BA: JSR LiftMove       \r\n$B9B7>
    B0 38:   BCS AI_Lift_Reverse\r\n$B9B9> 90 3E:   BCC AI_Lift_Common\r\nAI_Lift_MovesRight\r\n$B9BB>
    BD 6006:  LDA ObjectYSpeedFraction,X     \r\n$B9BE> 0A:       ASL A          
    \r\n$B9BF> A8:       TAY             \r\n$B9C0> B1 04:    LDA ($04),Y            
    \r\n$B9C2> 85 07:    STA LiftXScreenMovement\r\n$B9C4> C8:       INY            
    \r\n$B9C5> B1 04:    LDA ($04),Y             \r\n$B9C7> 85 06:    STA LiftXMovement\r\n$B9C9>
    20 20BA:  JSR LiftMove       \r\n$B9CC> B0 12:    BCS ++\r\n$B9CE> A0 10:   
    LDY #$10        \r\n$B9D0> BD 6006:  LDA ObjectYSpeedFraction,X     \r\n$B9D3>
    FE 6006:  INC ObjectYSpeedFraction,X     \r\n$B9D6> 29 01:    AND #$01       
    \r\n$B9D8> F0 02:    BEQ +\r\n$B9DA> A0 30:    LDY #$30        \r\n+\r\n$B9DC>
    98:       TYA             \r\n$B9DD> 9D 4004:  STA ObjectUnknown440,X     \r\n++\r\n$B9E0>
    68:      PLA             \r\n$B9E1> A8:      TAY             \r\n$B9E2> B9 34BA:
    LDA BA34_table+0,Y     \r\n$B9E5> 85 06:   STA LiftXMovement+0\r\n$B9E7> B9 35BA:
    LDA BA34_table+1,Y     \r\n$B9EA> 85 07:   STA LiftXScreenMovement\r\n$B9EC>
    20 20BA: JSR LiftMove       \r\n$B9EF> B0 08:   BCS AI_Lift_Common\r\nAI_Lift_Reverse\r\n$B9F1>
    BD 4006: LDA ObjectFireDelay,X      ;changes the direction\r\n$B9F4> 49 40:  
    EOR #$40        \r\n$B9F6> 9D 4006: STA ObjectFireDelay,X     \r\nAI_Lift_Common\r\n$B9F9>
    BD 4004: LDA ObjectUnknown440,X     \r\n$B9FC> 29 10:   AND #$10        \r\n$B9FE>
    D0 08:   BNE +\r\n$BA00> BD 4004: LDA ObjectUnknown440,X     \r\n$BA03> 29 F0:  
    AND #$f0        \r\n$BA05> 9D 4004: STA ObjectUnknown440,X     \r\n+\r\n$BA08>
    BD 4004: LDA ObjectUnknown440,X     \r\n$BA0B> 29 F0:   AND #$f0        \r\n$BA0D>
    D0 10:   BNE +\r\n$BA0F> BD 2004: LDA ObjectFlags,X\r\n$BA12> 29 20:   AND #$20        
    \r\n$BA14> D0 09:   BNE +             ;Don't store lift data if it's invisible\r\n$BA16>
    20 AEB1: JSR StoreLiftData       \r\n$BA19> BD 4006: LDA ObjectFireDelay,X    
    \r\n$BA1C> 99 1807: STA LiftDirection,Y     \r\n+\r\n$BA1F> 60:      RTS            
    \r\n\r\nLiftMove\r\n$BA20> 38:      SEC             \r\n$BA21> A5 06:   LDA LiftXMovement\r\n$BA23>
    FD 8004: SBC ObjectPosX,X     \r\n$BA26> A5 07:   LDA LiftXScreenMovement\r\n$BA28>
    FD 6004: SBC ObjectPosScreen,X     \r\n$BA2B> 60:      RTS             \r\n\r\n;
    Various Lift data, not quite analyzed yet\r\n\r\nLiftMovementData: ;at BA2C\r\n   
    ; byte 0: added to ObjectPosXfraction\r\n    ; byte 1: added to ObjectPosX\r\n   
    ; byte 2: added to ObjectPosScreen\r\n    .byte $00,$FF,$FF ;moving left\r\n   
    .byte $00,$01,$00 ;moving right\r\nBA32_table: ;stored into CurrentRoomPointer\r\n   
    .word $0208,$0318\r\nBA34_table: ;stored into CurrentRoomPointer\r\n    .word
    $0288,$0398\r\n    .word $0398,$0308\r\n    .word $0468,$1B58\r\n    .word $1CF0\r\nBA42_table:
    ;pointers... at BA42\r\n    .word BA4A\r\n    .word BA4B\r\n    .word BA54\r\n   
    .word BA69\r\nBA4A:\r\n    .byte $FF\r\nBA4B:\r\n    .byte $02\r\n     .word
    $03F0\r\n     .word $0300\r\n     .word $0370\r\n     .word $FF80\r\nBA54:\r\n   
    .byte $03\r\n    .word $0340\r\n    .word $0350\r\n    .word $0380\r\n    .word
    $0390\r\n    .word $03C0\r\n    .word $04D0\r\n    .word $0400\r\n    .word $0410\r\n   
    .word $0440\r\n    .word $FF50\r\nBA69:\r\n    .word $C01B\r\n    .word $201C\r\n   
    .word $FF20\r\n\r\nAI_Object2F:\r\n$BA6E> A5 31:   lda CurrentStage\r\n$BA70>
    C9 05:   CMP #$05\r\n$BA72> F0 52:   BEQ Object2F_liftsound\r\n\r\n$BA74> BD
    4006: LDA ObjectFireDelay,X     \r\n$BA77> D0 0B:   BNE +\r\n\r\n$BA79> A9 30:  
    LDA #$30        ; Wind starting(?)\r\n$BA7B> 20 77C4: JSR IssueSound                                     
    ; $C477       \r\n\r\n$BA7E> A6 2F:   LDX RefObjectNumber\r\n$BA80> A9 00:  
    LDA #$00        \r\n$BA82> F0 04:   BEQ ++\r\n+\r\n$BA84> C9 20:   CMP #$20       
    \r\n$BA86> F0 31:   BEQ +++\r\n++\r\n$BA88> 48:      PHA             \r\n$BA89>
    29 F0:   AND #$f0        \r\n$BA8B> 4A:      LSR A           \r\n$BA8C> 4A:     
    LSR A           \r\n$BA8D> 09 23:   ORA #$23        \r\n$BA8F> 8D 8003: STA RawPPUtransferAddress+0      
    \r\n$BA92> 68:      PLA             \r\n$BA93> 29 0F:   AND #$0f        \r\n$BA95>
    4A:      LSR A           \r\n$BA96> 90 04:   BCC +                                              
    ; $BA9C               \r\n$BA98> 09 D8:   ORA #$d8        \r\n$BA9A> D0 02:  
    BNE ++                                              ; $BA9E               \r\n+\r\n$BA9C>
    09 E0:   ORA #$e0\r\n++\r\n$BA9E> 8D 8103: STA RawPPUtransferAddress+1\r\n$BAA1>
    A9 AA:   LDA #$aa        \r\n$BAA3> 8D 8203: STA RawPPUtransferBuf       \r\n\r\n$BAA6>
    A9 01:   LDA #$01\r\n$BAA8> 85 5E:   STA RawPPUtransferSize         \r\n\r\n$BAAA>
    FE 4006: INC ObjectFireDelay,X\r\n$BAAD> BD 4006: LDA ObjectFireDelay,X     \r\n$BAB0>
    C9 0A:   CMP #$0A\r\n$BAB2> F0 49:   BEQ Object2F_createWaterFront\r\n$BAB4>
    C9 10:   CMP #$10        \r\n$BAB6> B0 01:   BCS +++\r\n$BAB8> 60:      RTS            
    \r\n+++\r\n$BAB9> A9 01:   LDA #$01        \r\n$BABB> 85 9D:   STA LiftXSpeed        
    \r\n$BABD> A9 80:   LDA #$80        \r\n$BABF> 85 9C:   STA LiftXSpeedFraction        
    \r\n$BAC1> A9 C0:   LDA #$c0        \r\n$BAC3> 85 9E:   STA LiftUnknown9E        
    \r\n$BAC5> 60:      RTS             \r\n\r\nObject2F_liftsound\r\n$BAC6> A9 23:  
    LDA #$23        ; Moving platform (Gutsman stage)\r\n$BAC8> 20 77C4: JSR IssueSound                                     
    ; $C477       \r\n\r\n$BACB> A6 2F:   LDX RefObjectNumber\r\n$BACD> 4C B1BE:
    JMP RemoveObject                                    ; $BEB1       \r\n\r\nAI_Object30\r\n$BAD0>
    A5 31:   LDA CurrentStage\r\n$BAD2> C9 05:   CMP #$05        \r\n$BAD4> F0 23:  
    BEQ Object30_stopSFX\r\n$BAD6> A2 02:   LDX #$02        \r\n-\r\n$BAD8> BD F6BA:
    LDA Wily3colorsetup,X     \r\n$BADB> 9D D503: STA BGPalettes + 5,X     \r\n$BADE>
    CA:      DEX             \r\n$BADF> 10 F7:   BPL -\r\n$BAE1> 20 3FC7: JSR PaletteSetupForBG      
    \r\n$BAE4> A6 2F:   LDX RefObjectNumber         \r\n$BAE6> A5 AB:   LDA LastRestartPointType        
    \r\n$BAE8> F0 09:   BEQ +\r\n$BAEA> DE E006: DEC ObjectType,X     \r\n$BAED>
    A9 20:   LDA #$20        \r\n$BAEF> 9D 4006: STA ObjectFireDelay,X     \r\n$BAF2>
    60:      RTS             \r\n+\r\n$BAF3> 4C B1BE: JMP RemoveObject                                   
    ; $BEB1\r\n\r\nWily3colorsetup: ;BAF6\r\n    .byte $2C,$1C,$07\r\nObject30_stopSFX\r\n$BAF9>
    A9 FE:   LDA #$fE\r\n$BAFB> D0 CB:   BNE $BAC8    ;stop special effects\r\n\r\nObject2F_createWaterFront\r\n$BAFD>
    A9 04:   LDA #$04        \r\n$BAFF> 85 0C:   STA $0C         \r\n$BB01> DE 6004:
    DEC ObjectPosScreen,X     \r\n\r\n$BB04> A9 88:   LDA #$88\r\n$BB06> 9D 8004:
    STA ObjectPosX,X     \r\n$BB09> A9 68:   LDA #$68        \r\n$BB0B> 9D 0006:
    STA ObjectPosY,X     \r\n-\r\n$BB0E> A9 00:   LDA #$00\r\n$BB10> 20 63F6: JSR
    CreateEnemy                                       ; $F663       \r\n$BB13> B0
    29:   BCS +\r\n$BB15> A9 7B:   LDA #$7b        \r\n$BB17> 9D 0004: STA ObjectSpriteNum,X    
    \r\n$BB1A> A9 40:   LDA #$40        \r\n$BB1C> 9D 2004: STA ObjectFlags,X    
    \r\n$BB1F> 20 45B0: JSR ClearObjectMem       \r\n$BB22> A9 10:   LDA #$10       
    \r\n$BB24> 9D C004: STA ObjectXSpeed,X     \r\n$BB27> A6 2F:   LDX RefObjectNumber        
    \r\n$BB29> 18:      CLC             \r\n\r\n; Move object right by 8 pixels,
    down by 16 pixels\r\n$BB2A> BD 8004: LDA ObjectPosX,X\r\n$BB2D> 69 08:   ADC
    #$08        \r\n$BB2F> 9D 8004: STA ObjectPosX,X     \r\n\r\n$BB32> BD 0006:
    LDA ObjectPosY,X\r\n$BB35> 69 10:   ADC #$10        \r\n$BB37> 9D 0006: STA ObjectPosY,X    
    \r\n\r\n$BB3A> C6 0C:   DEC $0C\r\n$BB3C> D0 D0:   BNE -\r\n+\r\n$BB3E> 60:     
    RTS             \r\n\r\n\r\nAI_TackleFire\r\n$BB3F> BD 4006: LDA ObjectFireDelay,X\r\n$BB42>
    F0 38:   BEQ $BB7C               \r\n$BB44> BD 8006: LDA ObjectYSpeed,X     \r\n$BB47>
    10 03:   BPL $BB4C               \r\n$BB49> 4C E9BB: JMP $BBE9       \r\n$BB4C>
    BD 4006: LDA ObjectFireDelay,X     \r\n$BB4F> C9 FF:   CMP #$ff        \r\n$BB51>
    F0 2D:   BEQ $BB80               \r\n$BB53> C9 83:   CMP #$83        \r\n$BB55>
    B0 46:   BCS $BB9D               \r\n$BB57> C9 08:   CMP #$08        \r\n$BB59>
    D0 0C:   BNE $BB67               \r\n$BB5B> A9 00:   LDA #$00        \r\n$BB5D>
    9D 4006: STA ObjectFireDelay,X     \r\n$BB60> A9 02:   LDA #$02        \r\n$BB62>
    9D 2004: STA ObjectFlags,X     \r\n$BB65> D0 0B:   BNE $BB72               \r\n$BB67>
    29 07:   AND #$07        \r\n$BB69> D0 0C:   BNE $BB77               \r\n$BB6B>
    A9 31:   LDA #$31        \r\n$BB6D> 20 63F6: JSR CreateEnemy                                      
    ; $F663       \r\n$BB70> B0 05:   BCS $BB77               \r\n$BB72> A0 1C:  
    LDY #$1c        \r\n$BB74> 20 33F5: JSR InitObjectDefaultSpeed       \r\n$BB77>
    A6 2F:   LDX RefObjectNumber         \r\n$BB79> DE 4006: DEC ObjectFireDelay,X    
    \r\n$BB7C> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$BB7F> 60:     
    RTS             \r\n\r\n\r\n\r\n$BB80> BD 0006: LDA ObjectPosY,X\r\n$BB83> C9
    07:   CMP #$07        \r\n$BB85> B0 12:   BCS $BB99               \r\n$BB87>
    20 45B0: JSR ClearObjectMem       \r\n$BB8A> A9 04:   LDA #$04        \r\n$BB8C>
    9D 0006: STA ObjectPosY,X     \r\n$BB8F> A9 20:   LDA #$20        \r\n$BB91>
    9D 2004: STA ObjectFlags,X     \r\n$BB94> A9 83:   LDA #$83        \r\n$BB96>
    9D 4006: STA ObjectFireDelay,X     \r\n$BB99> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$BB9C> 60:      RTS             \r\n\r\n\r\n\r\n$BB9D> C9 FE:   CMP #$fe\r\n$BB9F>
    F0 05:   BEQ $BBA6               \r\n$BBA1> FE 4006: INC ObjectFireDelay,X    
    \r\n$BBA4> D0 D6:   BNE $BB7C               \r\n$BBA6> A9 FF:   LDA #$ff       
    \r\n$BBA8> 9D 8006: STA ObjectYSpeed,X     \r\n$BBAB> A9 10:   LDA #$10       
    \r\n$BBAD> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$BBB0> A9 02:   LDA #$02       
    \r\n$BBB2> 85 0C:   STA $0C         \r\n$BBB4> A5 46:   LDA RandomSeed        
    \r\n$BBB6> 85 0D:   STA $0D         \r\n$BBB8> A9 31:   LDA #$31        \r\n$BBBA>
    20 63F6: JSR CreateEnemy                                       ; $F663      
    \r\n$BBBD> B0 26:   BCS $BBE5               \r\n$BBBF> A0 74:   LDY #$74       
    \r\n$BBC1> 20 33F5: JSR InitObjectDefaultSpeed       \r\n$BBC4> A4 0C:   LDY
    $0C         \r\n$BBC6> 18:      CLC             \r\n$BBC7> A5 1A:   LDA ScrollPosX        
    \r\n$BBC9> 79 E6BB: ADC $BBE6,Y     \r\n$BBCC> 9D 8004: STA ObjectPosX,X    
    \r\n$BBCF> A5 1B:   LDA ScrollPosScreen         \r\n$BBD1> 69 00:   ADC #$00       
    \r\n$BBD3> 9D 6004: STA ObjectPosScreen,X     \r\n$BBD6> A9 00:   LDA #$00       
    \r\n$BBD8> 46 0D:   LSR $0D         \r\n$BBDA> 6A:      ROR A           \r\n$BBDB>
    4A:      LSR A           \r\n$BBDC> 09 06:   ORA #$06        \r\n$BBDE> 9D 2004:
    STA ObjectFlags,X     \r\n$BBE1> C6 0C:   DEC $0C         \r\n$BBE3> 10 D3:  
    BPL $BBB8               \r\n$BBE5> 60:      RTS             \r\n\r\n\r\n\r\n$BBE6>
    7E A8D2: ROR $D2A8,X\r\n$BBE9> BD 0006: LDA ObjectPosY,X     \r\n$BBEC> C9 DC:  
    CMP #$dc        \r\n$BBEE> 90 0D:   BCC $BBFD               \r\n$BBF0> A9 E0:  
    LDA #$e0        \r\n$BBF2> 9D 0006: STA ObjectPosY,X     \r\n$BBF5> 20 45B0:
    JSR ClearObjectMem       \r\n$BBF8> A9 1B:   LDA #$1b        \r\n$BBFA> 9D 4006:
    STA ObjectFireDelay,X     \r\n$BBFD> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$BC00> 60:      RTS             \r\n\r\n\r\nAI_Object33\r\n$BC01> BD 4006:
    LDA ObjectFireDelay,X\r\n$BC04> C9 2A:   CMP #$2a        \r\n$BC06> B0 18:  
    BCS $BC20               \r\n$BC08> FE 4006: INC ObjectFireDelay,X     \r\n$BC0B>
    38:      SEC             \r\n$BC0C> BD 6006: LDA ObjectYSpeedFraction,X     \r\n$BC0F>
    E9 1A:   SBC #$1a        \r\n$BC11> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$BC14>
    BD 8006: LDA ObjectYSpeed,X     \r\n$BC17> E9 00:   SBC #$00        \r\n$BC19>
    9D 8006: STA ObjectYSpeed,X     \r\n$BC1C> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$BC1F> 60:      RTS             \r\n\r\n\r\n\r\n$BC20> D0 0F:   BNE $BC31\r\n$BC22>
    A9 80:   LDA #$80        \r\n$BC24> 85 48:   STA $48         \r\n$BC26> 85 A8:  
    STA $A8         \r\n$BC28> A9 02:   LDA #$02        \r\n$BC2A> 85 49:   STA $49        
    \r\n$BC2C> 85 A9:   STA $A9         \r\n$BC2E> FE 4006: INC ObjectFireDelay,X    
    \r\n$BC31> AD 8004: LDA ObjectPosX+0       \r\n$BC34> 48:      PHA            
    \r\n$BC35> AD 0006: LDA ObjectPosY+0      \r\n$BC38> 48:      PHA            
    \r\n$BC39> AD 8104: LDA ObjectPosX+1       \r\n$BC3C> 8D 8004: STA ObjectPosX+0      
    \r\n$BC3F> AD 0106: LDA ObjectPosY+1       \r\n$BC42> 8D 0006: STA ObjectPosY+0     
    \r\n$BC45> 20 3BF6: JSR EnemySearchMegaman       \r\n$BC48> 85 0C:   STA $0C        
    \r\n$BC4A> 18:      CLC             \r\n$BC4B> A5 48:   LDA $48         \r\n$BC4D>
    69 08:   ADC #$08        \r\n$BC4F> 85 48:   STA $48         \r\n$BC51> 85 00:  
    STA $00         \r\n$BC53> A5 49:   LDA $49         \r\n$BC55> 69 00:   ADC #$00       
    \r\n$BC57> 85 49:   STA $49         \r\n$BC59> 85 01:   STA $01         \r\n$BC5B>
    20 28F6: JSR $F628       \r\n$BC5E> A5 03:   LDA $03         \r\n$BC60> C9 0C:  
    CMP #$0c        \r\n$BC62> B0 06:   BCS $BC6A               \r\n$BC64> A5 02:  
    LDA $02         \r\n$BC66> C9 0C:   CMP #$0c        \r\n$BC68> 90 32:   BCC $BC9C              
    \r\n$BC6A> A6 2F:   LDX RefObjectNumber         \r\n$BC6C> A5 A8:   LDA $A8        
    \r\n$BC6E> 05 A9:   ORA $A9         \r\n$BC70> F0 1E:   BEQ $BC90              
    \r\n$BC72> 38:      SEC             \r\n$BC73> A5 A8:   LDA $A8         \r\n$BC75>
    E9 20:   SBC #$20        \r\n$BC77> 85 A8:   STA $A8         \r\n$BC79> A5 A9:  
    LDA $A9         \r\n$BC7B> E9 00:   SBC #$00        \r\n$BC7D> 85 A9:   STA $A9        
    \r\n$BC7F> 38:      SEC             \r\n$BC80> BD 6006: LDA ObjectYSpeedFraction,X    
    \r\n$BC83> E5 A8:   SBC $A8         \r\n$BC85> 9D 6006: STA ObjectYSpeedFraction,X    
    \r\n$BC88> BD 8006: LDA ObjectYSpeed,X     \r\n$BC8B> E5 A9:   SBC $A9        
    \r\n$BC8D> 9D 8006: STA ObjectYSpeed,X     \r\n$BC90> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$BC93> 68:      PLA             \r\n$BC94> 8D 0006: STA ObjectPosY+0     
    \r\n$BC97> 68:      PLA             \r\n$BC98> 8D 8004: STA ObjectPosX+0      
    \r\n$BC9B> 60:      RTS             \r\n\r\n\r\n\r\n$BC9C> A6 2F:   LDX RefObjectNumber\r\n$BC9E>
    A9 F8:   LDA #$f8        \r\n$BCA0> 9D 0006: STA ObjectPosY,X     \r\n$BCA3>
    D0 EE:   BNE $BC93               \r\nAI_Object35\r\n$BCA5> DE 4006: DEC ObjectFireDelay,X    
    \r\n$BCA8> F0 1A:   BEQ $BCC4               \r\n$BCAA> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$BCAD> A5 2B:   LDA $2B         \r\n$BCAF> F0 12:   BEQ $BCC3              
    \r\n$BCB1> A5 49:   LDA $49         \r\n$BCB3> F0 02:   BEQ $BCB7              
    \r\n$BCB5> C6 49:   DEC $49         \r\n$BCB7> 9D 8006: STA ObjectYSpeed,X    
    \r\n$BCBA> 9D 6006: STA ObjectYSpeedFraction,X     \r\n$BCBD> 5E C004: LSR ObjectXSpeed,X    
    \r\n$BCC0> 7E E004: ROR ObjectXSpeedFraction,X     \r\n$BCC3> 60:      RTS            
    \r\n\r\n$BCC4> 20 FDAE: JSR ReplaceObjectWithExplosion\r\n$BCC7> 60:      RTS            
    \r\n\r\nAI_Object37\r\n$BCC8> DE 4006: DEC ObjectFireDelay,X\r\n$BCCB> F0 24:  
    BEQ $BCF1               \r\n$BCCD> BD 4006: LDA ObjectFireDelay,X     \r\n$BCD0>
    29 07:   AND #$07        \r\n$BCD2> A8:      TAY             \r\n$BCD3> 18:     
    CLC             \r\n$BCD4> AD 0106: LDA ObjectPosY+1       \r\n$BCD7> 79 FAA4:
    ADC FireShieldYPosTable,Y     \r\n$BCDA> 9D 0006: STA ObjectPosY,X     \r\n$BCDD>
    18:      CLC             \r\n$BCDE> AD 8104: LDA ObjectPosX+1       \r\n$BCE1>
    79 02A5: ADC FireShieldXPosTable,Y     \r\n$BCE4> 9D 8004: STA ObjectPosX,X    
    \r\n$BCE7> AD 6104: LDA ObjectPosScreen+1       \r\n$BCEA> 79 0AA5: ADC FireShieldPosScreenTable,Y    
    \r\n$BCED> 9D 6004: STA ObjectPosScreen,X     \r\n$BCF0> 60:      RTS            
    \r\n\r\n$BCF1> 4C B1BE: JMP RemoveObject                                    ;
    $BEB1\r\n\r\nAI_Object38\r\n$BCF4> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$BCF7> BD 4004: LDA ObjectUnknown440,X     \r\n$BCFA> C9 30:   CMP #$30       
    \r\n$BCFC> 90 7C:   BCC $BD7A               \r\n$BCFE> F0 26:   BEQ $BD26              
    \r\n$BD00> C9 70:   CMP #$70        \r\n$BD02> B0 39:   BCS $BD3D              
    \r\n$BD04> C9 64:   CMP #$64        \r\n$BD06> D0 05:   BNE $BD0D              
    \r\n$BD08> A9 30:   LDA #$30        \r\n$BD0A> 9D 4004: STA ObjectUnknown440,X    
    \r\n$BD0D> BD 2004: LDA ObjectFlags,X     \r\n$BD10> 29 40:   AND #$40       
    \r\n$BD12> F0 09:   BEQ $BD1D               \r\n$BD14> BD 8004: LDA ObjectPosX,X    
    \r\n$BD17> DD C006: CMP ObjectLifeMeter,X     \r\n$BD1A> B0 13:   BCS $BD2F              
    \r\n$BD1C> 60:      RTS             \r\n; same routine continued\r\n$BD1D> BD
    8004: LDA ObjectPosX,X\r\n$BD20> DD C006: CMP ObjectLifeMeter,X     \r\n$BD23>
    90 0A:   BCC $BD2F               \r\n$BD25> 60:      RTS             \r\n$BD26>
    A9 04:   LDA #$04        \r\n$BD28> 9D C004: STA ObjectXSpeed,X     \r\n$BD2B>
    20 C5E8: JSR $E8C5       \r\n$BD2E> 60:      RTS             \r\n; same routine
    continued\r\n$BD2F> BD C006: LDA ObjectLifeMeter,X\r\n$BD32> 9D 8004: STA ObjectPosX,X    
    \r\n$BD35> A9 70:   LDA #$70        \r\n$BD37> 9D 4004: STA ObjectUnknown440,X    
    \r\n$BD3A> 20 45B0: JSR ClearObjectMem       \r\n$BD3D> C9 93:   CMP #$93       
    \r\n$BD3F> D0 32:   BNE $BD73               \r\n$BD41> BD 4006: LDA ObjectFireDelay,X    
    \r\n$BD44> A0 07:   LDY #$07        \r\n$BD46> D9 7BBD: CMP $BD7B,Y     \r\n$BD49>
    F0 05:   BEQ $BD50               \r\n$BD4B> 88:      DEY             \r\n$BD4C>
    10 F8:   BPL $BD46               \r\n$BD4E> 30 1D:   BMI $BD6D              
    \r\n$BD50> 84 0C:   STY $0C         \r\n$BD52> A9 39:   LDA #$39        \r\n$BD54>
    20 63F6: JSR CreateEnemy                                       ; $F663      
    \r\n$BD57> B0 14:   BCS $BD6D               \r\n$BD59> A9 22:   LDA #$22       
    \r\n$BD5B> 9D 2004: STA ObjectFlags,X     \r\n$BD5E> A0 08:   LDY #$08       
    \r\n$BD60> 20 33F5: JSR InitObjectDefaultSpeed       \r\n$BD63> A9 78:   LDA
    #$78        \r\n$BD65> 9D 0006: STA ObjectPosY,X     \r\n$BD68> A5 0C:   LDA
    $0C         \r\n$BD6A> 9D 4006: STA ObjectFireDelay,X     \r\n$BD6D> A6 2F:  
    LDX RefObjectNumber         \r\n$BD6F> 20 73E8: JSR $E873       \r\n$BD72> 60:     
    RTS             \r\n; same routine continued\r\n$BD73> C9 94:   CMP #$94\r\n$BD75>
    D0 03:   BNE $BD7A               \r\n$BD77> 4C B1BE: JMP RemoveObject                                   
    ; $BEB1       \r\n$BD7A> 60:      RTS             \r\n\r\n$BD7B> 54:      .byte
    $54\r\n$BD7C> 64:      .byte $64                \r\n$BD7D> 70 84:   BVS $BD03              
    \r\n$BD7F> 04:      .byte $04                \r\n$BD80> 14:      .byte $14               
    \r\n$BD81> 24 99:   BIT $99         \r\n\r\nAI_Object39\r\n$BD83> BC 4006: LDY
    ObjectFireDelay,X     \r\n$BD86> A5 3F:   LDA BossVariable3F         \r\n$BD88>
    D9 90BD: CMP $BD90,Y     \r\n$BD8B> D0 ED:   BNE $BD7A               \r\n$BD8D>
    4C B1BE: JMP RemoveObject                                    ; $BEB1       \r\n\r\n$BD90>
    01 05:   ORA ($05,X)\r\n$BD92> 09 11:   ORA #$11        \r\n$BD94> 15 19:   ORA
    $19,X               \r\n$BD96> 1C:      .byte $1c                \r\n\r\n$BD97>
    1C:      .byte $1c                \r\n\r\nAI_Object3B\r\n$BD98> A5 31:   LDA
    CurrentStage         \r\n$BD9A> C9 07:   CMP #$07        \r\n$BD9C> D0 13:  
    BNE ++                                              ; $BDB1               \r\n$BD9E>
    A0 00:   LDY #$00        \r\n$BDA0> A5 1B:   LDA ScrollPosScreen         \r\n$BDA2>
    C9 1C:   CMP #$1c        \r\n$BDA4> F0 02:   BEQ +                                              
    ; $BDA8               \r\n$BDA6> A0 04:   LDY #$04        \r\n+\r\n$BDA8> 84
    AC:   STY FightingBossNum\r\n$BDAA> A9 02:   LDA #$02        \r\n$BDAC> 85 3E:  
    STA BossCurrentStrategy         \r\n$BDAE> 4C BCBD: JMP $BDBC       \r\n++\r\n$BDB1>
    C9 06:   CMP #$06\r\n$BDB3> F0 0E:   BEQ $BDC3               \r\n$BDB5> A6 1B:  
    LDX ScrollPosScreen         \r\n$BDB7> BC CABD: LDY $BDCA,X     \r\n$BDBA> D0
    EC:   BNE $BDA8               \r\n$BDBC> A9 01:   LDA #$01        \r\n$BDBE>
    85 68:   STA ForcedInputFlag         \r\n$BDC0> 4C B1BE: JMP RemoveObject                                   
    ; $BEB1       \r\n$BDC3> A9 42:   LDA #$42        \r\n$BDC5> 9D 2004: STA ObjectFlags,X    
    \r\n\r\n$BDC8> A0 CC:   LDY #$cc\r\n$BDCA> 20 33F5: JSR InitObjectDefaultSpeed      
    \r\n$BDCD> A9 13:   LDA #$13        \r\n$BDCF> 9D E006: STA ObjectType,X     
    ;Footholder\r\n$BDD2> 20 63F6: JSR CreateEnemy                                      
    ; $F663       \r\n\r\n$BDD5> B0 0F:   BCS $BDE6\r\n$BDD7> A9 02:   LDA #$02       
    \r\n$BDD9> 9D 2004: STA ObjectFlags,X     \r\n$BDDC> A0 CC:   LDY #$cc       
    \r\n$BDDE> 20 33F5: JSR InitObjectDefaultSpeed       \r\n$BDE1> A9 4C:   LDA
    #$4c        \r\n$BDE3> 9D 8004: STA ObjectPosX,X     \r\n$BDE6> 60:      RTS            
    \r\n\r\n\r\n\r\n$BDE7> 02:      .byte $02\r\n$BDE8> 03:      .byte $03               
    \r\n$BDE9> 01 05:   ORA ($05,X)             \r\n\r\nAI_Object48\r\n; Load the
    index of the $49 object from ObjectLifeMeter[]\r\n$BDEB> BC C006: LDY ObjectLifeMeter,X    
    \r\n$BDEE> B9 8004: LDA ObjectPosX,Y     \r\n$BDF1> 85 00:   STA $00        
    \r\n$BDF3> B9 6004: LDA ObjectPosScreen,Y     \r\n$BDF6> 85 01:   STA $01        
    \r\n$BDF8> B9 0006: LDA ObjectPosY,Y     \r\n$BDFB> 85 0D:   STA $0D        
    \r\n$BDFD> DE 4006: DEC ObjectFireDelay,X     \r\n$BE00> BD 4006: LDA ObjectFireDelay,X    
    \r\n$BE03> 4A:      LSR A           \r\n$BE04> 4A:      LSR A           \r\n$BE05>
    29 07:   AND #$07        \r\n$BE07> A8:      TAY             \r\n$BE08> 18:     
    CLC             \r\n$BE09> A5 0D:   LDA $0D         \r\n$BE0B> 79 FAA4: ADC FireShieldYPosTable,Y    
    \r\n$BE0E> 9D 0006: STA ObjectPosY,X     \r\n$BE11> 18:      CLC            
    \r\n$BE12> A5 00:   LDA $00         \r\n$BE14> 79 02A5: ADC FireShieldXPosTable,Y    
    \r\n$BE17> 9D 8004: STA ObjectPosX,X     \r\n$BE1A> A5 01:   LDA $01        
    \r\n$BE1C> 79 0AA5: ADC FireShieldPosScreenTable,Y     \r\n$BE1F> 9D 6004: STA
    ObjectPosScreen,X     \r\n$BE22> 20 49BE: JSR EnemyAI_MovementsAndDamageCheck      
    \r\n$BE25> 60:      RTS             \r\n\r\n\r\nAI_Object4A\r\n$BE26> BD 4004:
    LDA ObjectUnknown440,X\r\n$BE29> 29 F0:   AND #$f0        \r\n$BE2B> D0 11:  
    BNE $BE3E               \r\n$BE2D> 9D 4004: STA ObjectUnknown440,X     \r\n$BE30>
    20 49BE: JSR EnemyAI_MovementsAndDamageCheck       \r\n$BE33> A5 2B:   LDA $2B        
    \r\n$BE35> D0 01:   BNE $BE38               \r\n$BE37> 60:      RTS            
    \r\n\r\n\r\n\r\n$BE38> A9 10:   LDA #$10\r\n$BE3A> 9D 4004: STA ObjectUnknown440,X    
    \r\n$BE3D> 60:      RTS             \r\n$BE3E> C9 B0:   CMP #$b0        \r\n$BE40>
    F0 01:   BEQ $BE43               \r\n$BE42> 60:      RTS             \r\n\r\n$BE43>
    9D 4004: STA ObjectUnknown440,X\r\n$BE46> 4C 5AC0: JMP StageClear                                     
    ; $C05A       \r\n\r\n\r\nEnemyAI_MovementsAndDamageCheck\r\n\r\n$BE49> A6 2F:  
    LDX RefObjectNumber\r\n\r\n$BE4B> A9 00:   LDA #$00\r\n$BE4D> 85 2A:   STA $2A        
    \r\n$BE4F> 85 2B:   STA $2B         \r\n\r\n$BE51> BD 2004: LDA ObjectFlags,X\r\n$BE54>
    29 80:   AND #$80        \r\n$BE56> F0 03:   BEQ +                                              
    ; $BE5B               \r\n$BE58> 20 C2BE: JSR AI_ObjectHit                                   
    ; $BEC2       \r\n+\r\n$BE5B> 9D 8005: STA IssuedSoundsList,X\r\n\r\n$BE5E> BD
    A006: LDA ObjectLifeCycleCounter,X\r\n$BE61> D0 13:   BNE +++                                            
    ; $BE76               \r\n\r\n; if object is facing right then jsr ObjectUpdateMovementRight,
    else jsr ObjectUpdateMovementLeft\r\n$BE63> BD 2004: LDA ObjectFlags,X\r\n$BE66>
    29 40:   AND #$40        \r\n$BE68> F0 06:   BEQ +                                              
    ; $BE70               \r\n$BE6A> 20 EF9D: JSR ObjectUpdateMovementRight\r\n$BE6D>
    4C 73BE: JMP ++                                              ; $BE73       \r\n+\r\n$BE70>
    20 6D9E: JSR ObjectUpdateMovementLeft\r\n++\r\n$BE73> 20 D898: JSR ObjectRelocateHorizontally\r\n\r\n;
    if ObjectPosX,Hi - ScrollPosX,ScrollPosScreen != 0 then remove this object\r\n+++\r\n$BE76>
    38:      SEC\r\n$BE77> BD 8004: LDA ObjectPosX,X     \r\n$BE7A> E5 1A:   SBC
    ScrollPosX         \r\n$BE7C> BD 6004: LDA ObjectPosScreen,X\r\n$BE7F> E5 1B:  
    SBC ScrollPosScreen         \r\n$BE81> F0 03:   BEQ +                                              
    ; $BE86               \r\n; If it's too far to be seen, remove it.\r\n$BE83>
    4C B1BE: JMP RemoveObject                                    ; $BEB1       \r\n+\r\n\r\n;
    ObjectPosX,ObjectPosScreen = ScrollPosX,ScrollPosScreen\r\n$BE86> BD A006: LDA
    ObjectLifeCycleCounter,X\r\n$BE89> D0 24:   BNE +++                                            
    ; $BEAF               \r\n\r\n$BE8B> BD 2004: LDA ObjectFlags,X\r\n$BE8E> 29
    11:   AND #$11        \r\n$BE90> D0 11:   BNE +                                              
    ; $BEA3               \r\n; It's not a temporary object, or it doesn't collide
    with BG.\r\n$BE92> 20 A19C: JSR ObjectCheckIfOutScreenVertically\r\n$BE95> B0
    15:   BCS ++                                              ; $BEAC              
    \r\n$BE97> A5 24:   LDA $24         \r\n$BE99> 9D 2006: STA ObjectPosYfraction,X    
    \r\n$BE9C> A5 25:   LDA $25         \r\n$BE9E> 9D 0006: STA ObjectPosY,X    
    \r\n$BEA1> 90 0C:   BCC +++                                             ; $BEAF              
    \r\n+\r\n$BEA3> 20 C49B: JSR ObjectDoCollisionChecksAndAvoidWalls\r\n$BEA6> A5
    2B:   LDA $2B         \r\n$BEA8> C9 FF:   CMP #$ff        \r\n$BEAA> D0 03:  
    BNE +++                                             ; $BEAF               \r\n++\r\n$BEAC>
    4C B1BE: JMP RemoveObject                                    ; $BEB1\r\n+++\r\n$BEAF>
    18:      CLC\r\n$BEB0> 60:      RTS             \r\n\r\n\r\n\r\n; if Object#
    >= 16 then Meters+1,Object# = #$FF\r\n\r\nRemoveObject\r\n$BEB1> A6 2F:   LDX
    RefObjectNumber\r\n$BEB3> A9 F8:   LDA #$f8        \r\n$BEB5> 9D 0006: STA ObjectPosY,X    
    \r\n$BEB8> E0 10:   CPX #$10        \r\n$BEBA> 90 04:   BCC +                                              
    ; $BEC0               \r\n$BEBC> A9 FF:   LDA #$ff        \r\n$BEBE> 95 6B:  
    STA Meters+1,X               \r\n+\r\n$BEC0> 38:      SEC\r\n$BEC1> 60:     
    RTS             \r\n\r\n\r\nAI_ObjectHit\r\n$BEC2> BD 8005: LDA IssuedSoundsList,X\r\n$BEC5>
    F0 01:   BEQ +                                               ; $BEC8              
    \r\n$BEC7> 60:      RTS             \r\n+\r\n\r\n; Decrease enemy life meter\r\n$BEC8>
    A5 5F:   LDA WeaponSelect\r\n$BECA> 0A:      ASL A           \r\n$BECB> A8:     
    TAY             \r\n$BECC> B9 44BF: LDA WeaponDamageAddr,Y                             
    ; $BF44,Y     \r\n$BECF> 85 04:   STA $04         \r\n$BED1> B9 45BF: LDA WeaponDamageAddr+1,Y                           
    ; $BF45,Y     \r\n$BED4> 85 05:   STA $05         \r\n$BED6> BC E006: LDY ObjectType,X    
    \r\n\r\n$BED9> 38:      SEC\r\n$BEDA> BD C006: LDA ObjectLifeMeter,X\r\n$BEDD>
    F1 04:   SBC ($04),Y             \r\n$BEDF> 90 08:   BCC EnemyKilled                                    
    ; $BEE9               \r\n$BEE1> F0 06:   BEQ EnemyKilled                                    
    ; $BEE9               \r\n$BEE3> 9D C006: STA ObjectLifeMeter,X\r\n\r\n$BEE6>
    A9 01:   LDA #$01\r\n$BEE8> 60:      RTS             \r\n\r\n; EnemyKilled:\r\n;   
    Y = weapon number*2\r\n;    X = enemy number (object number)\r\nEnemyKilled\r\n$BEE9>
    BD E006: LDA ObjectType,X\r\n$BEEC> 48:      PHA             \r\n$BEED> A8:      
    TAY             \r\n$BEEE> A9 1B:    LDA #$1b        \r\n$BEF0> 9D E006:  STA
    ObjectType,X      \r\n\r\n$BEF3> A9 FF:    LDA #$ff\r\n$BEF5> 95 6B:    STA Meters+1,X              
    \r\n\r\n$BEF7> 20 45B0:  JSR ClearObjectMem\r\n\r\n$BEFA> 9D 4004:  STA ObjectUnknown440,X\r\n$BEFD>
    9D 4006:  STA ObjectFireDelay,X     \r\n$BF00> 9D 2004:  STA ObjectFlags,X    
    \r\n$BF03> 9D A006:  STA ObjectLifeCycleCounter,X     \r\n\r\n$BF06> B9 82FE: 
    LDA EnemyKillScoreTable,Y\r\n$BF09> 85 05:    STA $05\r\n$BF0B> 20 40D4:  JSR
    IncreaseScore                                   ; $D440\r\n$BF0E> 68:      PLA\r\n\r\n$BF0F>
    C9 3A:   CMP #$3a\r\n$BF11> F0 26:   BEQ $BF39               \r\n\r\n; CREATE
    A RANDOM DROP\r\n\r\n$BF13> A9 64:   LDA #$64        \r\n$BF15> 20 A0C5: JSR
    RandomFunc       \r\n\r\n; $3B = no drop\r\n$BF18> A0 3B:   LDY #$3b        \r\n$BF1A>
    A2 05:   LDX #$05        \r\n-\r\n$BF1C> DD 3EBF: CMP BonusProbabilityTable,X\r\n$BF1F>
    90 04:   BCC +                                               ; $BF25              
    \r\n$BF21> C8:      INY             \r\n$BF22> CA:      DEX             \r\n$BF23>
    10 F7:   BPL -                                               ; $BF1C              
    \r\n+\r\n$BF25> C0 3B:   CPY #$3b\r\n$BF27> F0 10:   BEQ +                                              
    ; $BF39               \r\n; Spawn the bonus drop\r\n$BF29> 98:      TYA            
    \r\n$BF2A> 20 63F6: JSR CreateEnemy                                       ; $F663      
    \r\n$BF2D> B0 0A:   BCS +                                               ; $BF39              
    \r\n$BF2F> A9 13:   LDA #$13        \r\n$BF31> 9D 2004: STA ObjectFlags,X    
    \r\n$BF34> A0 1C:   LDY #$1c        \r\n$BF36> 20 33F5: JSR InitObjectDefaultSpeed      
    \r\n+\r\n$BF39> A6 2F:   LDX RefObjectNumber\r\n$BF3B> A9 00:   LDA #$00       
    \r\n$BF3D> 60:      RTS             \r\n\r\nBonusProbabilityTable:\r\n.byte 99,
    97, 95, 80, 65, 12\r\n; Probabilities for\r\n; 1UP, Big Energy, Big Weapon, Small
    Energy, Small Weapon, Score Ball\r\n\r\n;ROCKMAN 1:\r\n;  none= 00-0B,64-6F      
    (24/128)\r\n;  bonus=0C-40,70-7F       (69/128)\r\n;  wpn2 =41-4F            
    (15/128)\r\n;  nrj2 =50-5E             (15/128)\r\n;  wpn10=5F-60            
    (2/128)\r\n;  nrj10=61-62             (2/128)\r\n;  1up  =63-63             (1/128)\r\n;ROCKMAN
    2: (code is at $F241)\r\n;  none =00-2F,61,63, 64-7F\r\n;  wpn2 =30-48\r\n; 
    nrj2 =49-57\r\n;  wpn10=58-5C\r\n;  nrj10=5D-60\r\n;  1up  =62-62\r\n;  [E] 
    =nothing (code exists the though)\r\n\r\n\r\n; 0 = \"P\" (just the old megablaster)\r\n;
    1 = Cutman\r\n; 2 = Iceman\r\n; 3 = Bombman\r\n; 4 = Fireman\r\n; 5 = Elecman\r\n;
    6 = Gutsman\r\n; 7 = Magnet beam\r\n\r\n\r\nWeaponDamageAddr\r\n.word WeaponDamageP  
    ; P\r\n.word WeaponDamageC   ; C\r\n.word WeaponDamageI   ; I\r\n.word WeaponDamageB  
    ; B\r\n.word WeaponDamageF   ; F\r\n.word WeaponDamageE   ; E\r\n.word WeaponDamageG  
    ; G\r\n\r\n\r\n\r\n\r\n$BF51> 20:      .byte $20\r\n$BF54> 04:      .byte $04               
    \r\n\r\n\r\n$BF55> 29 7F:   AND #$7f\r\n$BF57> 9D 2004: STA ObjectFlags,X    
    \r\n$BF5A> A6 45:   LDX NumIssuedSounds\r\n$BF5C> F0 0D:   BEQ $BF6B              
    \r\n$BF5E> CA:      DEX             \r\n$BF5F> A9 1B:   LDA #$1b        \r\n$BF61>
    DD 8005: CMP IssuedSoundsList,X     \r\n$BF64> F0 05:   BEQ $BF6B              
    \r\n$BF66> CA:      DEX             \r\n$BF67> 10 F8:   BPL $BF61              
    \r\n$BF69> A6 45:   LDX $45         \r\n$BF6B> A9 1D:   LDA #$1d        \r\n$BF6D>
    9D 8005: STA IssuedSoundsList,X     \r\n$BF70> E8:      INX             \r\n$BF71>
    86 45:   STX NumIssuedSounds         \r\n$BF73> A6 2F:   LDX RefObjectNumber        
    \r\n$BF75> 60:      RTS             \r\n\r\n\r\n\r\n$BF76: ;; empty space to
    the end of the bank, filled with $00\r\n    .db 138 dup $00\r\n\r\n;;;;;;;;;;;;
    BANK 5 ENDS HERE ;;;;;;;;;;;;;;;;\r\n\r\n;;;;;;;;;;;; BANK 6 BEGINS HERE ;;;;;;;;;;;;;;;;\r\n\r\n\r\n   
    .export Lbl_8000, Lbl_82aa, Lbl_82ab, Lbl_833a, Lbl_843a, Lbl_853a, Lbl_863a,
    Lbl_8644\r\n    .export Lbl_864a, Lbl_8650, Lbl_8651, Lbl_8750, Lbl_8751, Lbl_8770,
    Lbl_8771, DefaultObjectFlags\r\n    .export DefaultObjectSpeedCtrl, DefaultObjectFireDelay,
    Lbl_a452, Lbl_a453, Lbl_ab00, Lbl_ab57, Lbl_ab72, Lbl_ab8d\r\n    .export Lbl_aba4,
    Lbl_ac26, Lbl_ac45, Lbl_ac97, Lbl_ace6, Lbl_ad63, Lbl_add3, Lbl_ae0f\r\n    .export
    Lbl_ae2b, Lbl_ae36, Lbl_ae4b, Lbl_b0ab, Lbl_b0cb, Lbl_b12b, Lbl_b12d, Lbl_b250\r\n   
    .export Lbl_b2e1, Lbl_b2ec, Lbl_b39f, Lbl_b3a7, ChangeMegamanPalette, Lbl_b3d1,
    Lbl_b44e, Lbl_b4c6\r\n    .export Lbl_b4e4, Lbl_b4ef, Lbl_b4f0, Lbl_b503, WeaponSelectTab,
    WeaponsOwnedMask, WeaponSelectTab2, Lbl_b527\r\n    .export Lbl_b52f, StageSelectionScreenMain,
    Lbl_b5a2, Lbl_b721, Lbl_b7f6, Lbl_b88a, Lbl_b953, Lbl_bb02\r\n    .export Lbl_bb4a,
    Lbl_bb81, Lbl_bb88, Lbl_bbad, Lbl_bbfb, Lbl_bc00, Lbl_bc15, Lbl_bc39\r\n    .export
    Lbl_bc5a, Lbl_bc90, Lbl_bcf1, Lbl_bd27, Lbl_bd40, Lbl_bd5b, Lbl_bd76, Lbl_be1b\r\n   
    .export Lbl_be3f, Lbl_be63, Lbl_be87, Lbl_be88, Lbl_be95, Lbl_be9c, Lbl_bea6,
    Lbl_beaa\r\n    .export Lbl_beb0, Lbl_beca, Lbl_bee6,\r\n    .export Lbl_bf02,
    Lbl_bf09, Lbl_bf10, Lbl_bf17, BossPoseTable, Lbl_bf1f, TextTable\r\n    .export
    Lbl_bf6f, Lbl_bfac, Lbl_bfcc, Lbl_bff0, DoWeaponSelectDialog, RunStageSelectionScreen\r\n\r\n.segment
    \"BANK_6\"\r\n\r\nLbl_8000:\r\n    .byte $06,$88,$1c,$88,$32,$88,$48,$88,$5e,$88,$72,$88,$84,$88,$9c,$88\r\n   
    .byte $b2,$88,$c8,$88,$de,$88,$f4,$88,$08,$89,$1a,$89,$2c,$89,$42,$89\r\n   
    .byte $5a,$89,$70,$89,$86,$89,$9a,$89,$ae,$89,$c6,$89,$d0,$89,$e6,$89\r\n   
    .byte $f0,$89,$00,$8a,$10,$8a,$24,$8a,$38,$8a,$44,$8a,$50,$8a,$58,$8a\r\n   
    .byte $60,$8a,$68,$8a,$6c,$8a,$84,$8a,$98,$8a,$b0,$8a,$c4,$8a,$dc,$8a\r\n   
    .byte $f0,$8a,$08,$8b,$1c,$8b,$34,$8b,$48,$8b,$5e,$8b,$70,$8b,$84,$8b\r\n   
    .byte $94,$8b,$aa,$8b,$c0,$8b,$de,$8b,$f4,$8b,$16,$8c,$32,$8c,$56,$8c\r\n   
    .byte $6c,$8c,$82,$8c,$98,$8c,$ae,$8c,$c4,$8c,$da,$8c,$f2,$8c,$0c,$8d\r\n   
    .byte $26,$8d,$40,$8d,$5a,$8d,$74,$8d,$8c,$8d,$a2,$8d,$be,$8d,$da,$8d\r\n   
    .byte $f0,$8d,$06,$8e,$1e,$8e,$34,$8e,$4a,$8e,$62,$8e,$7c,$8e,$90,$8e\r\n   
    .byte $b2,$8e,$d4,$8e,$f6,$8e,$38,$8f,$5a,$8f,$7c,$8f,$9e,$8f,$a8,$8f\r\n   
    .byte $c6,$8f,$e4,$8f,$08,$90,$12,$90,$34,$90,$4c,$90,$68,$90,$72,$90\r\n   
    .byte $7c,$90,$80,$90,$8a,$90,$94,$90,$9e,$90,$b0,$90,$c2,$90,$d4,$90\r\n   
    .byte $de,$90,$e8,$90,$f2,$90,$fc,$90,$06,$91,$10,$91,$16,$91,$1c,$91\r\n   
    .byte $22,$91,$28,$91,$2e,$91,$34,$91,$3a,$91,$40,$91,$62,$91,$66,$91\r\n   
    .byte $70,$91,$8a,$91,$94,$91,$9e,$91,$a8,$91,$b2,$91,$bc,$91,$c6,$91\r\n   
    .byte $d0,$91,$d6,$91,$e0,$91,$f2,$91,$04,$92,$0e,$92,$18,$92,$22,$92\r\n   
    .byte $2c,$92,$36,$92,$40,$92,$46,$92,$4c,$92,$52,$92,$58,$92,$5e,$92\r\n   
    .byte $64,$92,$6a,$92,$70,$92,$82,$92,$94,$92,$a6,$92,$c8,$92,$da,$92\r\n   
    .byte $f2,$92,$0a,$93,$1e,$93,$32,$93,$46,$93,$5a,$93,$74,$93,$8e,$93\r\n   
    .byte $a8,$93,$c2,$93,$e0,$93,$f2,$93,$f8,$93,$fe,$93,$04,$94,$0e,$94\r\n   
    .byte $18,$94,$1c,$94,$20,$94,$2a,$94,$34,$94,$3e,$94,$52,$94,$58,$94\r\n   
    .byte $5e,$94,$62,$94,$66,$94,$6a,$94,$7c,$94,$8e,$94,$a0,$94,$a6,$94\r\n   
    .byte $aa,$94,$c4,$94,$dc,$94,$e4,$94,$e8,$94,$ee,$94,$08,$95,$2a,$95\r\n   
    .byte $4c,$95,$62,$95,$76,$95,$66,$a0,$72,$a0,$7e,$a0,$8a,$a0,$8e,$a0\r\n   
    .byte $92,$a0,$96,$a0,$9b,$a0,$a0,$a0,$a5,$a0,$a7,$a0,$a9,$a0,$ab,$a0\r\n   
    .byte $ae,$a0,$b1,$a0,$b4,$a0,$b7,$a0,$ba,$a0,$bd,$a0,$c8,$a0,$cf,$a0\r\n   
    .byte $d4,$a0,$d7,$a0,$da,$a0,$dd,$a0,$e0,$a0,$e4,$a0,$e6,$a0,$e9,$a0\r\n   
    .byte $eb,$a0,$ed,$a0,$f4,$a0,$f6,$a0,$fa,$a0,$fe,$a0,$02,$a1,$04,$a1\r\n   
    .byte $08,$a1,$0b,$a1,$0d,$a1,$10,$a1,$12,$a1,$14,$a1,$16,$a1,$18,$a1\r\n   
    .byte $1a,$a1,$1c,$a1,$1e,$a1,$20,$a1,$22,$a1,$24,$a1,$28,$a1,$2c,$a1\r\n   
    .byte $31,$a1,$35,$a1,$39,$a1,$3d,$a1,$4a,$a1,$54,$a1,$57,$a1,$5a,$a1\r\n   
    .byte $5c,$a1,$5e,$a1,$60,$a1,$65,$a1,$6a,$a1,$6c,$a1,$6e,$a1,$71,$a1\r\n   
    .byte $74,$a1,$79,$a1,$7c,$a1,$7f,$a1,$82,$a1,$84,$a1,$86,$a1,$88,$a1\r\n   
    .byte $8e,$a1,$94,$a1,$9a,$a1,$a0,$a1,$a6,$a1,$ac,$a1,$b2,$a1,$b8,$a1\r\n   
    .byte $c1,$a1,$c3,$a1,$c5,$a1,$c7,$a1,$c9,$a1,$cb,$a1,$ce,$a1,$d3,$a1\r\n   
    .byte $d6,$a1,$d8,$a1,$da,$a1,$e0,$a1,$e4,$a1,$e9,$a1,$ef,$a1,$f5,$a1\r\n   
    .byte $fb,$a1,$01,$a2,$07,$a2,$0d,$a2,$13,$a2,$19,$a2,$1d,$a2,$21,$a2\r\n   
    .byte $23,$a2,$25,$a2,$28,$a2,$2a,$a2,$2c,$a2,$2e,$a2,$31,$a2,$34,$a2\r\n   
    .byte $36,$a2,$3a,$a2,$3c,$a2,$40,$a2,$44,$a2,$46,$a2,$4c,$a2,$4f,$a2\r\n   
    .byte $51,$a2,$57,$a2,$59,$a2,$5c,$a2,$5e,$a2,$60,$a2,$62,$a2,$65,$a2\r\n   
    .byte $67,$a2,$69,$a2,$6b,$a2,$6d,$a2,$6f,$a2,$71,$a2,$73,$a2,$75,$a2\r\n   
    .byte $77,$a2,$79,$a2,$7b,$a2,$7d,$a2,$7f,$a2\r\n\r\n    ; Coordinates of something\r\nLbl_82aa:\r\n   
    .byte $72\r\nLbl_82ab:\r\n    .byte $9d,$7f,$9d,$89,$9d,$92,$9d,$9c,$9d,$a7,$9d,$b2,$9d,$bd,$9d,$c7\r\n   
    .byte $9d,$d0,$9d,$da,$9d,$e3,$9d,$ee,$9d,$f1,$9d,$fe,$9d,$09,$9e,$12\r\n   
    .byte $9e,$1d,$9e,$28,$9e,$32,$9e,$3b,$9e,$45,$9e,$56,$9e,$62,$9e,$6c\r\n   
    .byte $9e,$76,$9e,$80,$9e,$8b,$9e,$97,$9e,$a3,$9e,$af,$9e,$b9,$9e,$c3\r\n   
    .byte $9e,$cd,$9e,$d8,$9e,$e1,$9e,$ed,$9e,$fd,$9e,$1d,$9f,$2d,$9f,$3b\r\n   
    .byte $9f,$4c,$9f,$59,$9f,$5b,$9f,$69,$9f,$74,$9f,$80,$9f,$83,$9f,$86\r\n   
    .byte $9f,$8b,$9f,$91,$9f,$97,$9f,$a3,$9f,$ad,$9f,$bb,$9f,$be,$9f,$c1\r\n   
    .byte $9f,$cb,$9f,$d3,$9f,$de,$9f,$f4,$9f,$04,$a0,$09,$a0,$10,$a0,$16\r\n   
    .byte $a0,$26,$a0,$56,$a0,$58,$a0,$5a,$a0,$00,$00,$00,$00,$00,$00\r\n\r\nLbl_833a:\r\n   
    .byte $f4,$f4,$f4,$fc,$fc,$fc,$04,$04,$04,$fa,$f4,$f4,$fc,$fc,$fc,$fc\r\n   
    .byte $04,$04,$04,$fc,$f5,$f5,$04,$0c,$fb,$f8,$fa,$0c,$fb,$fb,$fb,$fa\r\n   
    .byte $ec,$0c,$0c,$ec,$e8,$ec,$f4,$ec,$ec,$ec,$ec,$ec,$ed,$ed,$ec,$ec\r\n   
    .byte $fd,$fc,$0c,$fc,$08,$fc,$0c,$f4,$f4,$fc,$fc,$fc,$04,$04,$04,$fb\r\n   
    .byte $f9,$f9,$fb,$fb,$f9,$fd,$fd,$fa,$fa,$f4,$f8,$f9,$fc,$f7,$f7,$f8\r\n   
    .byte $f7,$f0,$f0,$f0,$f0,$f8,$f8,$f8,$00,$00,$00,$00,$08,$08,$08,$08\r\n   
    .byte $f3,$f3,$f3,$f3,$fb,$03,$03,$03,$03,$0b,$0b,$0b,$0b,$f0,$f0,$f0\r\n   
    .byte $f0,$f8,$f8,$f8,$f8,$00,$00,$00,$00,$f7,$fa,$ec,$ec,$ed,$ed,$ee\r\n   
    .byte $ee,$ef,$ef,$f4,$ed,$f3,$f3,$e4,$e4,$ec,$ec,$ed,$eb,$eb,$eb,$eb\r\n   
    .byte $e3,$e3,$e3,$e3,$db,$db,$db,$db,$d3,$d3,$d3,$d3,$0c,$08,$08,$08\r\n   
    .byte $08,$f5,$f8,$00,$04,$f8,$f8,$f8,$f8,$f8,$00,$00,$00,$00,$f0,$f0\r\n   
    .byte $00,$00,$f8,$fc,$fc,$f8,$f8,$f8,$00,$00,$00,$f4,$f4,$f4,$f4,$fc\r\n   
    .byte $fc,$fc,$fc,$04,$04,$04,$04,$f9,$f0,$e8,$10,$08,$f9,$f8,$00,$f8\r\n   
    .byte $00,$f8,$00,$f8,$00,$f4,$04,$0c,$ec,$e4,$e4,$e4,$e4,$ec,$0c,$0c\r\n   
    .byte $10,$10,$18,$18,$e0,$e0,$e8,$e8,$e0,$e0,$e0,$e0,$e8,$e8,$e8,$e8\r\n   
    .byte $e8,$f0,$f0,$f0,$08,$08,$08,$10,$10,$10,$10,$10,$18,$18,$18,$18\r\n\r\nLbl_843a:\r\n   
    .byte $f4,$fc,$04,$f4,$fc,$04,$f4,$fc,$04,$fb,$f8,$00,$f0,$f8,$00,$08\r\n   
    .byte $f8,$00,$08,$fb,$f0,$08,$f0,$ff,$08,$f0,$f0,$fe,$f0,$ec,$04,$f7\r\n   
    .byte $fc,$f8,$00,$f0,$fc,$08,$08,$f9,$01,$04,$f8,$00,$f4,$fc,$f6,$fe\r\n   
    .byte $ed,$fd,$fc,$0b,$09,$0c,$f2,$f5,$fd,$f5,$fd,$05,$f5,$fd,$05,$fa\r\n   
    .byte $fc,$f9,$f9,$f8,$ff,$0c,$fc,$fd,$fa,$ec,$fb,$fa,$ec,$fa,$f9,$f6\r\n   
    .byte $fd,$f0,$f8,$00,$08,$f8,$00,$08,$f0,$f8,$00,$08,$f0,$f8,$00,$08\r\n   
    .byte $f0,$f8,$00,$08,$00,$f0,$f8,$00,$08,$f0,$f8,$00,$08,$ea,$f2,$fa\r\n   
    .byte $02,$ea,$f2,$fa,$02,$ea,$f2,$fa,$02,$fc,$fc,$fb,$03,$fc,$04,$f8\r\n   
    .byte $00,$f6,$fe,$f0,$f0,$f0,$f8,$f2,$fa,$f2,$fa,$f8,$fa,$02,$0a,$12\r\n   
    .byte $fa,$02,$0a,$12,$fa,$02,$0a,$12,$fa,$02,$0a,$12,$ff,$ea,$f2,$fa\r\n   
    .byte $02,$04,$fc,$fc,$ec,$ec,$f4,$04,$0c,$14,$ec,$f4,$04,$0c,$ec,$0c\r\n   
    .byte $e4,$14,$e4,$f9,$01,$f7,$ff,$07,$f7,$ff,$07,$f2,$fa,$02,$0a,$f2\r\n   
    .byte $fa,$02,$0a,$f2,$fa,$02,$0a,$0a,$fc,$fc,$fc,$fc,$10,$e8,$e8,$10\r\n   
    .byte $10,$e0,$e0,$18,$18,$0c,$ef,$ef,$f4,$f4,$fc,$04,$0c,$0c,$f4,$04\r\n   
    .byte $f8,$00,$f8,$00,$f8,$00,$f8,$00,$e8,$f0,$08,$10,$e0,$e8,$f0,$10\r\n   
    .byte $18,$e0,$e8,$18,$e0,$e8,$18,$e0,$e8,$f0,$10,$18,$e8,$f0,$08,$10\r\n\r\nLbl_853a:\r\n   
    .byte $04,$fc,$f4,$04,$fc,$f4,$04,$fc,$f4,$fd,$00,$f8,$08,$00,$f8,$f0\r\n   
    .byte $00,$f8,$f0,$fd,$08,$f0,$08,$f9,$f0,$08,$08,$fa,$08,$0c,$f4,$01\r\n   
    .byte $fc,$00,$f8,$08,$fc,$f0,$f0,$ff,$f7,$f4,$00,$f8,$04,$fc,$02,$fa\r\n   
    .byte $0b,$fb,$fc,$ed,$ef,$ec,$06,$03,$fb,$03,$fb,$f3,$03,$fb,$f3,$fe\r\n   
    .byte $fc,$ff,$ff,$00,$f9,$ec,$fc,$fb,$fe,$0c,$fd,$fe,$0c,$fe,$ff,$02\r\n   
    .byte $fb,$08,$00,$f8,$f0,$00,$f8,$f0,$08,$00,$f8,$f0,$08,$00,$f8,$f0\r\n   
    .byte $08,$00,$f8,$f0,$f8,$08,$00,$f8,$f0,$08,$00,$f8,$f0,$0e,$06,$fe\r\n   
    .byte $f6,$0e,$06,$fe,$f6,$0e,$06,$fe,$f6,$fc,$fc,$fd,$f5,$fc,$f4,$00\r\n   
    .byte $f8,$02,$fa,$08,$08,$08,$00,$06,$fe,$06,$fe,$00,$fe,$f6,$ee,$e6\r\n   
    .byte $fe,$f6,$ee,$e6,$fe,$f6,$ee,$e6,$fe,$f6,$ee,$e6,$f9,$0e,$06,$fe\r\n   
    .byte $f6,$f4,$fc,$fc,$0c,$0c,$04,$f4,$ec,$e4,$0c,$04,$f4,$ec,$0c,$ec\r\n   
    .byte $14,$e4,$14,$ff,$f7,$01,$f9,$f1,$01,$f9,$f1,$06,$fe,$f6,$ee,$06\r\n   
    .byte $fe,$f6,$ee,$06,$fe,$f6,$ee,$ee,$fc,$fc,$fc,$fc,$e8,$10,$10,$e8\r\n   
    .byte $e8,$18,$18,$e0,$e0,$ec,$11,$11,$04,$04,$fc,$f4,$ec,$ec,$04,$f4\r\n   
    .byte $00,$f8,$00,$f8,$00,$f8,$00,$f8,$10,$08,$f0,$e8,$18,$10,$08,$e8\r\n   
    .byte $e0,$18,$10,$e0,$18,$10,$e0,$18,$10,$08,$e8,$e0,$10,$08,$f0,$e8\r\n\r\nLbl_863a:
    ; Used at C564 - gives values for ObjectXSpeed and ObjectXSpeedFraction\r\n   
    .byte $00,$20,$21,$80,$01,$04,$15,$51,$61,$90\r\n\r\nLbl_8644: ; Used at C549
    - sprite number compared to\r\n    .byte $19,$1A,$27,$34,$36,$37\r\n\r\nLbl_864a:
    ; Used at C556 - gives values for ObjectXSpeed and ObjectXSpeedFraction\r\n   
    .byte $00,$05,$00,$02,$01,$06\r\n\r\nLbl_8650:\r\n    .byte $8e\r\n\r\nLbl_8651:\r\n   
    .byte $95,$96,$95,$9c,$95,$a4,$95,$ac,$95,$b2,$95,$b8,$95,$c2,$95,$cc\r\n   
    .byte $95,$ee,$95,$10,$96,$14,$96,$22,$96,$30,$96,$3e,$96,$6c,$96,$9a\r\n   
    .byte $96,$a8,$96,$b6,$96,$c4,$96,$d2,$96,$d8,$96,$e2,$96,$ea,$96,$f2\r\n   
    .byte $96,$fa,$96,$1c,$97,$2e,$97,$40,$97,$88,$97,$92,$97,$94,$97,$a0\r\n   
    .byte $97,$aa,$97,$b4,$97,$be,$97,$c8,$97,$cc,$97,$d6,$97,$e4,$97,$f0\r\n   
    .byte $97,$fe,$97,$08,$98,$16,$98,$24,$98,$2a,$98,$30,$98,$4a,$98,$60\r\n   
    .byte $98,$52,$97,$64,$97,$76,$97,$74,$98,$7c,$98,$84,$98,$8c,$98,$94\r\n   
    .byte $98,$ac,$98,$c0,$98,$d4,$98,$ec,$98,$fe,$98,$14,$99,$26,$99,$3a\r\n   
    .byte $99,$4c,$99,$5a,$99,$64,$99,$6e,$99,$7c,$99,$8a,$99,$9c,$99,$be\r\n   
    .byte $99,$e0,$99,$02,$9a,$06,$9a,$0a,$9a,$1c,$9a,$26,$9a,$26,$9a,$26\r\n   
    .byte $9a,$30,$9a,$34,$9a,$38,$9a,$42,$9a,$4c,$9a,$56,$9a,$5c,$9a,$66\r\n   
    .byte $9a,$6e,$9a,$76,$9a,$7e,$9a,$7e,$9a,$86,$9a,$a4,$9a,$a8,$9a,$b0\r\n   
    .byte $9a,$c4,$9a,$d8,$9a,$ec,$9a,$00,$9b,$0c,$9b,$1c,$9b,$2a,$9b,$34\r\n   
    .byte $9b,$3e,$9b,$48,$9b,$52,$9b,$5c,$9b,$66,$9b,$70,$9b,$7a,$9b,$84\r\n   
    .byte $9b,$8e,$9b,$98,$9b,$a2,$9b,$ac,$9b,$b6,$9b,$c0,$9b,$ca,$9b,$d4\r\n   
    .byte $9b,$de,$9b,$e8,$9b,$02,$9c,$24,$9c,$56,$9c,$b8,$9c,$bc,$9c\r\n\r\nLbl_8750:\r\n   
    .byte $c2\r\n\r\nLbl_8751:\r\n    .byte $9c,$cc,$9c,$d6,$9c,$e0,$9c,$ea,$9c,$f4,$9c,$fe,$9c,$08,$9d,$12\r\n   
    .byte $9d,$1c,$9d,$26,$9d,$30,$9d,$3a,$9d,$4e,$9d,$60,$9d,$72,$9d\r\n\r\nLbl_8770:\r\n   
    .byte $81\r\n\r\nLbl_8771:\r\n    .byte $a2,$84,$a2,$87,$a2,$8a,$a2,$8d,$a2,$92,$a2,$9a,$a2,$9f,$a2,$a2\r\n   
    .byte $a2,$a4,$a2,$a7,$a2,$b0,$a2,$b8,$a2,$bb,$a2,$bd,$a2,$c4,$a2,$c9\r\n   
    .byte $a2,$d0,$a2,$d3,$a2,$d8,$a2,$e5,$a2,$e7,$a2,$ec,$a2,$b0,$a2,$aa\r\n   
    .byte $a2,$ad,$a2,$f4,$a2,$f6,$a2,$fb,$a2,$fd,$a2,$02,$a3,$07,$a3,$0b\r\n   
    .byte $a3,$8d,$a2,$b0,$a2,$b0,$a2,$b8,$a2,$ad,$a2,$0d,$a3,$c9,$a2,$f6\r\n   
    .byte $a2,$02,$a3,$0f,$a3,$11,$a3,$14,$a3,$19,$a3,$1b,$a3,$22,$a3,$22\r\n   
    .byte $a3,$24,$a3,$22,$a3,$27,$a3,$2c,$a3,$2f,$a3,$31,$a3,$35,$a3,$3a\r\n   
    .byte $a3,$22,$a3,$45,$a3,$22,$a3,$4a,$a3,$4c,$a3,$4e,$a3,$50,$a3,$53\r\n   
    .byte $a3,$56,$a3,$58,$a3,$22,$a3,$5a,$a3,$20,$a3,$22,$a3,$22,$a3,$5d\r\n   
    .byte $a3,$22,$a3,$5f,$a3,$0a,$00,$1a,$00,$29,$00,$2a,$00,$2b,$00,$09\r\n   
    .byte $00,$0a,$00,$0b,$00,$19,$00,$1b,$00,$20,$01,$0a,$00,$1a,$00,$29\r\n   
    .byte $00,$2a,$00,$2b,$00,$09,$00,$0a,$00,$0b,$00,$19,$00,$1b,$00,$00\r\n   
    .byte $01,$0a,$00,$1a,$00,$03,$00,$04,$00,$2b,$00,$09,$00,$0a,$00,$0b\r\n   
    .byte $00,$19,$00,$1b,$00,$00,$01,$0a,$01,$01,$00,$02,$00,$11,$00,$12\r\n   
    .byte $00,$21,$00,$22,$00,$23,$00,$00,$01,$13,$00,$10,$00,$09,$01,$01\r\n   
    .byte $00,$05,$00,$14,$00,$15,$00,$24,$00,$25,$00,$26,$00,$00,$01,$16\r\n   
    .byte $00,$08,$02,$07,$00,$08,$00,$17,$00,$18,$00,$27,$00,$28,$00,$06\r\n   
    .byte $00,$00,$01,$0b,$04,$31,$00,$32,$00,$41,$00,$42,$00,$51,$00,$52\r\n   
    .byte $00,$30,$40,$50,$00,$40,$00,$2f,$01,$30,$00,$0a,$03,$0c,$00,$0d\r\n   
    .byte $00,$47,$00,$1d,$00,$57,$00,$38,$00,$2e,$01,$1e,$00,$46,$00,$56\r\n   
    .byte $00,$0a,$00,$1a,$00,$49,$00,$2a,$00,$2b,$00,$48,$00,$0a,$00,$0b\r\n   
    .byte $00,$58,$00,$1b,$00,$20,$01,$0a,$00,$1a,$00,$49,$00,$2a,$00,$2b\r\n   
    .byte $00,$48,$00,$0a,$00,$0b,$00,$58,$00,$1b,$00,$00,$01,$0a,$00,$1a\r\n   
    .byte $00,$39,$00,$04,$00,$2b,$00,$48,$00,$0a,$00,$0b,$00,$58,$00,$1b\r\n   
    .byte $00,$00,$01,$09,$01,$5b,$00,$02,$00,$5c,$00,$12,$00,$4b,$00,$22\r\n   
    .byte $00,$23,$00,$00,$01,$13,$00,$08,$01,$5b,$00,$05,$00,$5a,$00,$3b\r\n   
    .byte $00,$24,$00,$25,$00,$4d,$00,$00,$01,$08,$02,$3c,$00,$08,$00,$4c\r\n   
    .byte $00,$18,$00,$27,$00,$28,$00,$06,$00,$00,$01,$0a,$04,$3c,$00,$32\r\n   
    .byte $00,$3d,$00,$42,$00,$51,$00,$52,$00,$30,$40,$50,$00,$40,$00,$2f\r\n   
    .byte $01,$0b,$05,$0c,$00,$0d,$00,$1c,$00,$1d,$00,$2c,$00,$2d,$00,$1e\r\n   
    .byte $00,$50,$00,$0e,$00,$2e,$01,$1e,$40,$0a,$07,$07,$00,$0d,$00,$43\r\n   
    .byte $00,$44,$00,$53,$00,$54,$00,$55,$00,$45,$00,$0f,$00,$00,$01,$0a\r\n   
    .byte $01,$01,$00,$02,$00,$4a,$00,$12,$00,$4b,$00,$22,$00,$23,$00,$00\r\n   
    .byte $01,$13,$00,$0f,$00,$09,$08,$01,$00,$05,$00,$3a,$00,$3b,$00,$24\r\n   
    .byte $00,$25,$00,$00,$01,$0f,$00,$4d,$00,$09,$02,$07,$00,$08,$00,$59\r\n   
    .byte $00,$18,$00,$27,$00,$28,$00,$06,$00,$00,$01,$0f,$00,$0b,$06,$07\r\n   
    .byte $00,$32,$00,$6c,$00,$42,$00,$51,$00,$52,$00,$30,$40,$50,$00,$40\r\n   
    .byte $00,$2f,$01,$0f,$00,$04,$09,$33,$00,$33,$00,$33,$00,$33,$00,$0a\r\n   
    .byte $09,$1f,$00,$36,$00,$36,$00,$37,$00,$35,$00,$35,$00,$34,$00,$35\r\n   
    .byte $40,$35,$40,$34,$40,$04,$00,$1f,$00,$34,$00,$37,$00,$34,$40,$07\r\n   
    .byte $0b,$3e,$00,$3f,$00,$4e,$00,$4f,$00,$5f,$00,$5e,$00,$5d,$00,$07\r\n   
    .byte $0a,$3f,$40,$3e,$40,$4f,$40,$4e,$40,$5f,$40,$5e,$40,$5d,$40,$09\r\n   
    .byte $00,$7b,$01,$79,$01,$7a,$81,$79,$41,$77,$01,$7a,$01,$77,$41,$78\r\n   
    .byte $01,$78,$41,$09,$0a,$6d,$00,$6e,$00,$7d,$00,$7e,$00,$6f,$00,$5e\r\n   
    .byte $40,$5d,$40,$0f,$00,$7c,$01,$05,$0b,$60,$00,$60,$40,$62,$40,$61\r\n   
    .byte $40,$63,$40,$05,$0a,$60,$00,$60,$40,$61,$00,$62,$00,$63,$00,$03\r\n   
    .byte $0c,$74,$01,$74,$01,$74,$01,$03,$0c,$75,$01,$75,$01,$75,$01,$03\r\n   
    .byte $0c,$76,$01,$76,$01,$76,$01,$01,$00,$69,$01,$0b,$0d,$82,$42,$81\r\n   
    .byte $42,$80,$42,$85,$42,$84,$42,$83,$42,$88,$42,$87,$42,$86,$42,$95\r\n   
    .byte $02,$95,$42,$09,$0d,$82,$42,$81,$42,$80,$42,$85,$42,$84,$42,$83\r\n   
    .byte $42,$88,$42,$87,$42,$86,$42,$0b,$0e,$82,$42,$81,$42,$80,$42,$8b\r\n   
    .byte $42,$8a,$42,$89,$42,$88,$42,$87,$42,$86,$42,$97,$42,$96,$42,$09\r\n   
    .byte $0e,$82,$42,$81,$42,$80,$42,$8b,$42,$8a,$42,$89,$42,$88,$42,$87\r\n   
    .byte $42,$86,$42,$0b,$0d,$b2,$42,$b1,$42,$b0,$42,$b4,$42,$84,$42,$b3\r\n   
    .byte $42,$88,$42,$87,$42,$86,$42,$95,$02,$95,$42,$09,$0f,$b7,$42,$b6\r\n   
    .byte $42,$b9,$42,$b8,$42,$bd,$42,$bc,$42,$ba,$42,$b5,$42,$bb,$42,$0b\r\n   
    .byte $10,$8c,$02,$8d,$02,$8e,$02,$8f,$02,$90,$02,$91,$02,$93,$02,$92\r\n   
    .byte $02,$94,$02,$95,$02,$95,$42,$09,$10,$8c,$02,$8d,$02,$8e,$02,$8f\r\n   
    .byte $02,$90,$02,$91,$02,$93,$02,$92,$02,$94,$02,$0b,$11,$a4,$02,$a5\r\n   
    .byte $02,$10,$02,$ae,$02,$af,$02,$13,$02,$21,$02,$22,$02,$23,$02,$95\r\n   
    .byte $02,$95,$42,$09,$11,$a4,$02,$a5,$02,$10,$02,$ae,$02,$af,$02,$13\r\n   
    .byte $02,$21,$02,$22,$02,$23,$02,$0a,$12,$a2,$02,$a3,$02,$ac,$02,$ad\r\n   
    .byte $02,$16,$02,$24,$02,$25,$02,$26,$02,$95,$02,$95,$42,$08,$12,$a2\r\n   
    .byte $02,$a3,$02,$ac,$02,$ad,$02,$16,$02,$24,$02,$25,$02,$26,$02,$09\r\n   
    .byte $13,$a0,$02,$a1,$02,$aa,$02,$ab,$02,$06,$02,$27,$02,$28,$02,$96\r\n   
    .byte $02,$97,$02,$07,$13,$a0,$02,$a1,$02,$aa,$02,$ab,$02,$06,$02,$27\r\n   
    .byte $02,$28,$02,$0a,$00,$84,$02,$86,$02,$87,$02,$88,$02,$80,$02,$81\r\n   
    .byte $02,$82,$02,$83,$02,$85,$02,$8f,$01,$0a,$00,$84,$02,$86,$02,$87\r\n   
    .byte $02,$88,$02,$89,$02,$81,$02,$82,$02,$8a,$02,$85,$02,$8f,$01,$0e\r\n   
    .byte $27,$8b,$02,$8c,$02,$8d,$02,$92,$02,$93,$02,$94,$02,$90,$02,$87\r\n   
    .byte $02,$91,$02,$8e,$01,$9d,$01,$9e,$01,$9f,$01,$9f,$41,$0a,$14,$a5\r\n   
    .byte $02,$a6,$02,$a7,$02,$a8,$02,$a9,$02,$aa,$02,$b7,$02,$b6,$02,$a4\r\n   
    .byte $02,$8f,$01,$10,$28,$80,$02,$81,$02,$9c,$02,$83,$02,$84,$02,$b8\r\n   
    .byte $02,$a0,$02,$a1,$02,$a2,$02,$8f,$01,$9d,$01,$9e,$01,$9f,$01,$9f\r\n   
    .byte $41,$95,$02,$a3,$02,$0d,$00,$84,$02,$97,$02,$98,$02,$99,$02,$80\r\n   
    .byte $02,$81,$02,$9c,$02,$83,$02,$96,$02,$8f,$01,$95,$02,$9a,$02,$9b\r\n   
    .byte $02,$11,$15,$ab,$02,$ac,$02,$ad,$02,$ae,$02,$af,$02,$b0,$02,$95\r\n   
    .byte $02,$b1,$02,$b2,$02,$b3,$02,$8f,$01,$9d,$01,$9e,$01,$9f,$01,$9f\r\n   
    .byte $41,$b4,$02,$b5,$02,$0a,$16,$80,$02,$81,$02,$82,$02,$83,$02,$84\r\n   
    .byte $02,$85,$02,$86,$02,$87,$02,$88,$02,$98,$01,$0a,$16,$89,$02,$8a\r\n   
    .byte $02,$8b,$02,$8c,$02,$8d,$02,$8e,$02,$8f,$02,$90,$02,$91,$02,$99\r\n   
    .byte $01,$0a,$16,$92,$02,$81,$02,$82,$02,$93,$02,$94,$02,$95,$02,$96\r\n   
    .byte $02,$87,$02,$97,$02,$9a,$01,$0a,$17,$b7,$02,$b8,$02,$b9,$02,$ba\r\n   
    .byte $02,$bb,$02,$bc,$02,$bd,$02,$be,$02,$bf,$02,$9a,$01,$0a,$18,$9b\r\n   
    .byte $02,$9c,$02,$9d,$02,$9e,$02,$9f,$02,$a0,$02,$a1,$02,$a2,$02,$a3\r\n   
    .byte $02,$98,$01,$0a,$19,$a4,$02,$a5,$02,$a6,$02,$a7,$02,$a8,$02,$a9\r\n   
    .byte $02,$aa,$02,$ab,$02,$ac,$02,$98,$01,$0b,$1a,$a6,$42,$ae,$02,$af\r\n   
    .byte $02,$b0,$02,$b1,$02,$b2,$02,$b3,$02,$b4,$02,$b5,$02,$98,$01,$b6\r\n   
    .byte $02,$0c,$16,$80,$02,$81,$02,$82,$02,$83,$02,$84,$02,$85,$02,$86\r\n   
    .byte $02,$87,$02,$88,$02,$8a,$01,$8c,$03,$8d,$03,$0c,$16,$80,$02,$81\r\n   
    .byte $02,$82,$02,$83,$02,$84,$02,$85,$02,$86,$02,$87,$02,$88,$02,$8a\r\n   
    .byte $01,$8e,$03,$8f,$03,$0c,$1b,$99,$02,$9a,$02,$9b,$02,$9c,$02,$9d\r\n   
    .byte $02,$9e,$02,$9f,$02,$87,$02,$90,$02,$8b,$01,$8e,$03,$8f,$03,$0c\r\n   
    .byte $1c,$91,$02,$92,$02,$93,$02,$94,$02,$95,$02,$96,$02,$97,$02,$98\r\n   
    .byte $02,$89,$02,$8a,$01,$8c,$03,$8d,$03,$0c,$1d,$9a,$02,$9b,$02,$9c\r\n   
    .byte $02,$9d,$02,$9e,$02,$9f,$02,$a0,$02,$a1,$02,$b8,$01,$bb,$03,$bc\r\n   
    .byte $03,$ba,$02,$0b,$1d,$9a,$02,$a2,$02,$a3,$02,$a4,$02,$a5,$02,$a6\r\n   
    .byte $02,$a7,$02,$a8,$02,$b9,$01,$bb,$03,$bc,$03,$0a,$1e,$a9,$02,$aa\r\n   
    .byte $02,$ab,$02,$ac,$02,$af,$02,$ad,$02,$ae,$02,$b8,$01,$bd,$03,$be\r\n   
    .byte $03,$0d,$0d,$90,$02,$91,$02,$92,$02,$93,$02,$94,$02,$95,$02,$96\r\n   
    .byte $02,$97,$02,$98,$02,$8c,$03,$8d,$03,$8a,$01,$99,$02,$0d,$0d,$90\r\n   
    .byte $02,$91,$02,$92,$02,$93,$02,$94,$02,$95,$02,$96,$02,$97,$02,$98\r\n   
    .byte $02,$8e,$03,$8f,$03,$8a,$01,$99,$02,$0a,$1f,$80,$02,$81,$02,$82\r\n   
    .byte $02,$83,$02,$84,$02,$85,$02,$86,$02,$87,$02,$88,$02,$97,$01,$0a\r\n   
    .byte $1f,$80,$02,$81,$02,$89,$02,$8a,$02,$84,$02,$8b,$02,$ae,$42,$87\r\n   
    .byte $02,$96,$02,$97,$01,$0b,$21,$8d,$02,$8e,$02,$8f,$02,$90,$02,$91\r\n   
    .byte $02,$92,$02,$93,$02,$94,$02,$95,$02,$97,$01,$8c,$02,$0a,$1f,$80\r\n   
    .byte $02,$81,$02,$82,$02,$b8,$02,$84,$02,$85,$02,$98,$02,$99,$02,$9a\r\n   
    .byte $02,$97,$01,$0a,$20,$9b,$02,$9c,$02,$9d,$02,$9e,$02,$9f,$02,$a0\r\n   
    .byte $02,$a1,$02,$a2,$02,$a3,$02,$97,$01,$0b,$0b,$a5,$02,$a6,$02,$a8\r\n   
    .byte $02,$a9,$02,$ac,$02,$ab,$02,$ad,$02,$97,$01,$a4,$02,$a7,$02,$aa\r\n   
    .byte $02,$0c,$23,$b0,$02,$b1,$02,$b2,$02,$b3,$02,$b4,$02,$b5,$02,$b6\r\n   
    .byte $02,$b7,$02,$bd,$42,$97,$01,$bf,$02,$bf,$02,$09,$22,$b9,$02,$ba\r\n   
    .byte $02,$bb,$02,$bc,$02,$bd,$02,$be,$02,$97,$01,$af,$02,$ae,$02,$10\r\n   
    .byte $24,$95,$01,$96,$01,$99,$02,$9a,$02,$91,$02,$92,$02,$9d,$02,$9e\r\n   
    .byte $02,$90,$02,$93,$02,$94,$02,$97,$02,$98,$02,$9b,$02,$9c,$02,$9f\r\n   
    .byte $02,$10,$24,$83,$01,$84,$01,$87,$02,$9a,$02,$91,$02,$92,$02,$9d\r\n   
    .byte $02,$9e,$02,$80,$02,$81,$02,$82,$02,$85,$02,$86,$02,$88,$02,$89\r\n   
    .byte $02,$8a,$02,$10,$24,$95,$01,$96,$01,$99,$02,$9a,$02,$91,$02,$8b\r\n   
    .byte $02,$9d,$02,$9e,$02,$90,$02,$8c,$02,$94,$02,$8d,$02,$98,$02,$8e\r\n   
    .byte $02,$9c,$02,$8f,$02,$20,$25,$95,$01,$96,$01,$99,$02,$a7,$02,$90\r\n   
    .byte $02,$91,$02,$8b,$02,$8c,$02,$94,$02,$8d,$02,$98,$02,$a8,$02,$a9\r\n   
    .byte $02,$aa,$02,$ab,$02,$ac,$02,$c9,$03,$cb,$03,$cd,$03,$cf,$03,$c8\r\n   
    .byte $03,$ca,$03,$cc,$03,$ce,$03,$c1,$03,$c3,$03,$c5,$03,$c7,$03,$c0\r\n   
    .byte $03,$c2,$03,$c4,$03,$c6,$03,$10,$24,$83,$01,$84,$01,$a1,$02,$a2\r\n   
    .byte $02,$91,$02,$92,$02,$a4,$02,$a5,$02,$80,$02,$81,$02,$82,$02,$85\r\n   
    .byte $02,$a0,$02,$88,$02,$a3,$02,$a6,$02,$10,$26,$bb,$02,$bc,$02,$b0\r\n   
    .byte $02,$b1,$02,$b6,$02,$b7,$02,$b8,$02,$b9,$02,$ba,$02,$bd,$02,$be\r\n   
    .byte $02,$b2,$02,$bf,$02,$b3,$02,$b4,$02,$b5,$02,$10,$25,$95,$01,$96\r\n   
    .byte $01,$99,$02,$9a,$02,$90,$02,$91,$02,$92,$02,$93,$02,$94,$02,$97\r\n   
    .byte $02,$98,$02,$9b,$02,$a9,$02,$aa,$02,$ab,$02,$ac,$02,$04,$24,$dd\r\n   
    .byte $02,$de,$02,$df,$02,$df,$42,$0e,$28,$80,$02,$81,$02,$82,$02,$83\r\n   
    .byte $02,$84,$02,$85,$02,$86,$02,$87,$02,$88,$02,$8f,$01,$9d,$01,$9e\r\n   
    .byte $01,$9f,$01,$9f,$41,$0e,$27,$89,$02,$81,$02,$82,$02,$8a,$02,$84\r\n   
    .byte $02,$85,$02,$86,$02,$87,$02,$88,$02,$8f,$01,$9d,$01,$9e,$01,$9f\r\n   
    .byte $01,$9f,$41,$11,$28,$80,$02,$81,$02,$9c,$02,$83,$02,$84,$02,$96\r\n   
    .byte $02,$97,$02,$98,$02,$99,$02,$8f,$01,$9d,$01,$9e,$01,$9f,$01,$9f\r\n   
    .byte $41,$95,$02,$9a,$02,$9b,$02,$04,$24,$ca,$01,$cb,$01,$cc,$01,$cc\r\n   
    .byte $41,$10,$24,$c3,$03,$c5,$03,$ca,$03,$cc,$03,$c2,$03,$c4,$03,$cb\r\n   
    .byte $03,$cd,$03,$c0,$03,$c6,$03,$c1,$03,$c7,$03,$c8,$03,$ce,$03,$c9\r\n   
    .byte $03,$cf,$03,$0b,$29,$80,$02,$81,$02,$82,$02,$83,$02,$84,$02,$85\r\n   
    .byte $02,$7c,$02,$7d,$02,$7e,$02,$98,$01,$7f,$02,$0d,$29,$80,$02,$81\r\n   
    .byte $02,$82,$02,$83,$02,$84,$02,$85,$02,$38,$02,$39,$02,$3a,$02,$8a\r\n   
    .byte $01,$3b,$02,$8c,$03,$8d,$03,$04,$24,$b0,$03,$b1,$03,$b2,$03,$b3\r\n   
    .byte $03,$04,$24,$b4,$03,$b5,$03,$b6,$03,$b7,$03,$01,$00,$d6,$01,$04\r\n   
    .byte $24,$d7,$01,$d7,$41,$d7,$81,$d7,$c1,$04,$24,$d8,$01,$d8,$41,$d8\r\n   
    .byte $81,$d8,$c1,$04,$24,$d9,$01,$d9,$41,$d9,$81,$d9,$c1,$08,$24,$c2\r\n   
    .byte $03,$c3,$03,$c2,$83,$c3,$83,$c0,$03,$c1,$03,$c0,$83,$c1,$83,$08\r\n   
    .byte $24,$c6,$03,$c7,$03,$c6,$83,$c7,$83,$c4,$03,$c5,$03,$c4,$83,$c5\r\n   
    .byte $83,$08,$24,$ca,$03,$cb,$03,$ca,$83,$cb,$83,$c8,$03,$c9,$03,$c8\r\n   
    .byte $83,$c9,$83,$04,$24,$c0,$02,$c1,$02,$c2,$02,$c3,$02,$04,$24,$c4\r\n   
    .byte $02,$c5,$02,$c6,$02,$c7,$02,$04,$24,$cc,$02,$cc,$42,$cd,$02,$cd\r\n   
    .byte $42,$04,$24,$cf,$42,$ce,$42,$cf,$c2,$ce,$c2,$04,$24,$cd,$82,$cd\r\n   
    .byte $c2,$cc,$82,$cc,$c2,$04,$24,$cf,$42,$ce,$42,$cf,$c2,$ce,$c2,$02\r\n   
    .byte $2b,$c0,$01,$c1,$01,$02,$2a,$c3,$01,$c2,$01,$02,$2b,$c4,$81,$c4\r\n   
    .byte $01,$02,$2b,$c2,$81,$c5,$01,$02,$2b,$c3,$81,$c6,$81,$02,$2a,$c8\r\n   
    .byte $01,$c2,$01,$02,$2a,$c9,$01,$c7,$01,$02,$2b,$c1,$01,$c6,$01,$10\r\n   
    .byte $24,$7b,$01,$7b,$01,$7b,$01,$7b,$01,$7a,$01,$7a,$01,$7a,$81,$7a\r\n   
    .byte $81,$77,$01,$77,$41,$78,$01,$78,$41,$78,$01,$78,$41,$79,$01,$79\r\n   
    .byte $41,$01,$00,$ff,$03,$04,$24,$ff,$03,$ff,$03,$ff,$03,$ff,$03,$0c\r\n   
    .byte $1c,$91,$02,$92,$02,$93,$02,$94,$02,$95,$02,$96,$02,$97,$02,$98\r\n   
    .byte $02,$89,$02,$8a,$01,$8e,$03,$8f,$03,$04,$24,$ec,$00,$ec,$40,$ed\r\n   
    .byte $00,$ed,$40,$04,$24,$ee,$00,$ef,$00,$ee,$80,$ef,$80,$04,$24,$ed\r\n   
    .byte $80,$ed,$c0,$ec,$80,$ec,$c0,$04,$24,$ef,$40,$ee,$40,$ef,$c0,$ee\r\n   
    .byte $c0,$04,$24,$e0,$00,$e1,$00,$e2,$00,$e3,$00,$04,$24,$e4,$00,$e5\r\n   
    .byte $00,$e6,$00,$e7,$00,$04,$24,$ea,$00,$eb,$00,$ec,$00,$ec,$40,$02\r\n   
    .byte $2a,$e8,$00,$e8,$00,$04,$24,$ff,$01,$ff,$01,$ff,$01,$ff,$01,$08\r\n   
    .byte $24,$ce,$01,$cf,$01,$ca,$01,$cb,$01,$cc,$01,$cd,$01,$cc,$01,$cd\r\n   
    .byte $01,$04,$24,$cc,$01,$cd,$01,$ce,$01,$cf,$01,$ca,$01,$cb,$01,$ca\r\n   
    .byte $01,$cb,$01,$04,$24,$e0,$00,$e1,$00,$e0,$80,$e1,$80,$04,$24,$e4\r\n   
    .byte $00,$e5,$00,$e4,$80,$e5,$80,$04,$24,$e8,$00,$e9,$00,$e8,$80,$e9\r\n   
    .byte $80,$04,$24,$ec,$00,$ec,$40,$ec,$80,$ec,$c0,$04,$24,$ed,$00,$ed\r\n   
    .byte $40,$ed,$80,$ed,$c0,$04,$24,$ee,$00,$ee,$40,$ee,$80,$ee,$c0,$02\r\n   
    .byte $2b,$e0,$01,$e1,$01,$02,$2a,$e3,$01,$e2,$01,$02,$2b,$e4,$81,$e4\r\n   
    .byte $01,$02,$2b,$e2,$81,$e5,$01,$02,$2b,$e3,$81,$e6,$01,$02,$2a,$e8\r\n   
    .byte $01,$e2,$01,$02,$2a,$e9,$01,$e7,$01,$02,$2b,$e1,$01,$e6,$01,$08\r\n   
    .byte $24,$ee,$01,$ef,$01,$ea,$01,$eb,$01,$ec,$01,$ed,$01,$ec,$01,$ed\r\n   
    .byte $01,$08,$24,$ec,$01,$ed,$01,$ee,$01,$ef,$01,$ea,$01,$eb,$01,$ea\r\n   
    .byte $01,$eb,$01,$08,$24,$ea,$01,$eb,$01,$ec,$01,$ed,$01,$ee,$01,$ef\r\n   
    .byte $01,$ee,$01,$ef,$01,$10,$24,$e3,$01,$e5,$01,$ea,$01,$ec,$01,$e2\r\n   
    .byte $01,$e4,$01,$eb,$01,$ed,$01,$e0,$01,$e6,$01,$e1,$01,$e7,$01,$e8\r\n   
    .byte $01,$ee,$01,$e9,$01,$ef,$01,$01,$00,$ca,$01,$cb,$01,$cc,$01,$cd\r\n   
    .byte $01,$ce,$01,$cf,$01,$ce,$01,$cf,$01,$0b,$2c,$07,$00,$08,$00,$70\r\n   
    .byte $00,$44,$00,$71,$00,$54,$00,$55,$00,$45,$00,$72,$00,$00,$01,$73\r\n   
    .byte $00,$0b,$06,$07,$00,$32,$00,$6c,$00,$42,$00,$51,$00,$52,$00,$30\r\n   
    .byte $40,$50,$00,$40,$00,$2f,$01,$64,$00,$09,$0a,$6d,$00,$6e,$00,$7d\r\n   
    .byte $00,$7e,$00,$6f,$00,$5e,$40,$5d,$40,$7f,$00,$7c,$01,$09,$00,$84\r\n   
    .byte $01,$86,$02,$87,$02,$88,$02,$80,$01,$81,$01,$82,$01,$83,$01,$85\r\n   
    .byte $01,$09,$00,$84,$01,$86,$02,$87,$02,$88,$02,$89,$01,$8a,$01,$82\r\n   
    .byte $01,$83,$01,$85,$01,$09,$00,$84,$01,$86,$02,$87,$02,$9b,$02,$89\r\n   
    .byte $01,$8a,$01,$8b,$01,$83,$01,$8c,$01,$0c,$2d,$9c,$02,$9d,$02,$9e\r\n   
    .byte $02,$9d,$42,$9c,$42,$9f,$02,$a0,$02,$a1,$02,$a0,$02,$a1,$02,$a0\r\n   
    .byte $02,$9f,$42,$0c,$2b,$a4,$01,$a7,$01,$a4,$01,$a6,$01,$a4,$01,$a6\r\n   
    .byte $41,$a3,$01,$a5,$01,$a3,$41,$a5,$41,$a2,$01,$a2,$41,$0c,$2b,$aa\r\n   
    .byte $01,$a7,$01,$aa,$01,$a6,$01,$aa,$01,$a6,$41,$a9,$01,$a5,$01,$ab\r\n   
    .byte $01,$a5,$41,$a8,$01,$ac,$01,$0c,$2b,$af,$01,$a7,$01,$af,$01,$a6\r\n   
    .byte $01,$af,$01,$a6,$41,$ae,$01,$a5,$01,$ae,$41,$a5,$41,$ad,$01,$ad\r\n   
    .byte $41,$0e,$2b,$af,$01,$a7,$01,$af,$01,$a6,$01,$af,$01,$a6,$41,$ae\r\n   
    .byte $01,$a5,$01,$ae,$41,$a5,$41,$ad,$01,$ad,$41,$9a,$01,$9a,$41,$08\r\n   
    .byte $3c,$82,$03,$84,$03,$83,$03,$85,$03,$80,$03,$81,$03,$86,$03,$87\r\n   
    .byte $03,$02,$2a,$86,$02,$87,$02,$02,$2a,$88,$02,$89,$02,$02,$2a,$8a\r\n   
    .byte $02,$8b,$02,$04,$24,$9c,$41,$9b,$41,$9e,$41,$9d,$41,$04,$24,$a0\r\n   
    .byte $41,$9f,$41,$a2,$41,$a1,$41,$01,$00,$bf,$02,$01,$00,$d6,$00,$04\r\n   
    .byte $24,$d7,$00,$d7,$40,$d7,$80,$d7,$c0,$04,$24,$d8,$00,$d8,$40,$d8\r\n   
    .byte $80,$d8,$c0,$04,$24,$d9,$00,$d9,$40,$d9,$80,$d9,$c0,$09,$00,$cb\r\n   
    .byte $03,$cd,$03,$ce,$03,$cf,$03,$c7,$03,$c8,$03,$c9,$03,$ca,$03,$cc\r\n   
    .byte $03,$02,$42,$b9,$02,$ba,$02,$02,$43,$bb,$02,$b9,$82,$01,$00,$98\r\n   
    .byte $02,$01,$00,$b0,$03,$01,$00,$bc,$03,$08,$0d,$89,$01,$8a,$01,$82\r\n   
    .byte $01,$c0,$01,$c1,$01,$c2,$01,$c3,$01,$c4,$01,$08,$0d,$80,$01,$81\r\n   
    .byte $01,$82,$01,$b1,$01,$b2,$01,$b3,$01,$b4,$01,$b5,$01,$08,$0d,$96\r\n   
    .byte $02,$90,$02,$91,$02,$92,$02,$93,$02,$94,$02,$97,$02,$95,$02,$02\r\n   
    .byte $2b,$b7,$02,$b8,$02,$01,$00,$c6,$01,$0c,$44,$b0,$01,$b2,$01,$b4\r\n   
    .byte $01,$b6,$01,$b8,$01,$bf,$01,$b1,$01,$b3,$01,$b5,$01,$b7,$01,$b9\r\n   
    .byte $01,$bb,$01,$0b,$44,$d3,$03,$bd,$01,$f0,$01,$f0,$01,$f0,$01,$be\r\n   
    .byte $01,$ba,$01,$b3,$01,$b7,$01,$bc,$01,$bb,$01,$03,$44,$f0,$01,$f0\r\n   
    .byte $01,$f0,$01,$01,$44,$f0,$01,$02,$2b,$ae,$01,$af,$01,$0c,$3c,$8a\r\n   
    .byte $22,$8a,$62,$96,$22,$96,$22,$89,$22,$8c,$22,$89,$62,$8c,$62,$d9\r\n   
    .byte $22,$8b,$22,$d9,$22,$8b,$62,$10,$3c,$96,$22,$96,$22,$96,$22,$96\r\n   
    .byte $22,$96,$22,$96,$22,$96,$22,$96,$22,$8e,$22,$96,$22,$8e,$62,$96\r\n   
    .byte $22,$8d,$22,$8f,$22,$8d,$62,$8f,$62,$10,$3c,$98,$62,$98,$22,$96\r\n   
    .byte $22,$96,$22,$98,$22,$98,$22,$96,$22,$98,$62,$97,$22,$98,$22,$98\r\n   
    .byte $62,$98,$62,$d9,$22,$97,$22,$97,$62,$97,$62,$0a,$1f,$e9,$03,$ea\r\n   
    .byte $03,$eb,$03,$ec,$02,$ed,$02,$ee,$02,$ef,$02,$fd,$02,$fe,$02,$ff\r\n   
    .byte $01,$09,$1f,$e0,$01,$e1,$01,$e2,$01,$e3,$01,$e4,$01,$e5,$01,$e6\r\n   
    .byte $01,$e7,$01,$e8,$01,$0b,$04,$ba,$00,$bb,$00,$ca,$00,$cb,$00,$be\r\n   
    .byte $00,$bf,$00,$bc,$00,$bd,$00,$cf,$00,$00,$01,$b9,$00,$03,$2e,$b1\r\n   
    .byte $03,$b2,$03,$b0,$03,$02,$2e,$b3,$03,$b4,$03,$03,$2e,$b6,$03,$b7\r\n   
    .byte $03,$b5,$03,$03,$2e,$b9,$03,$ba,$03,$b8,$03,$02,$2a,$b0,$01,$b1\r\n   
    .byte $01,$02,$2a,$be,$01,$bf,$01,$04,$24,$a0,$02,$a1,$02,$a2,$02,$a3\r\n   
    .byte $02,$04,$24,$a4,$02,$a5,$02,$a6,$02,$a7,$02,$10,$3c,$b9,$02,$b4\r\n   
    .byte $02,$bb,$02,$b6,$02,$b8,$02,$ba,$02,$b5,$02,$b7,$02,$b5,$02,$b7\r\n   
    .byte $02,$b8,$02,$ba,$02,$b4,$02,$b6,$02,$b9,$02,$bb,$02,$10,$3c,$b5\r\n   
    .byte $02,$b8,$02,$b7,$02,$ba,$02,$b4,$02,$b6,$02,$b9,$02,$bb,$02,$b9\r\n   
    .byte $02,$bb,$02,$b4,$02,$b6,$02,$b8,$02,$ba,$02,$b5,$02,$b7,$02,$01\r\n   
    .byte $00,$6a,$03,$06,$01,$80,$02,$81,$02,$82,$02,$83,$02,$84,$02,$84\r\n   
    .byte $02,$06,$01,$8a,$02,$8b,$02,$8c,$02,$8d,$02,$8e,$02,$8f,$02,$06\r\n   
    .byte $01,$8b,$42,$8a,$42,$8c,$02,$8d,$02,$8e,$02,$8f,$02,$16,$3b,$a3\r\n   
    .byte $02,$9c,$02,$a3,$02,$98,$02,$99,$02,$9a,$02,$9d,$02,$9e,$02,$9f\r\n   
    .byte $02,$a1,$02,$a0,$02,$a2,$02,$94,$02,$95,$02,$96,$02,$90,$02,$91\r\n   
    .byte $02,$92,$02,$93,$02,$97,$02,$9b,$02,$a3,$02,$16,$3b,$98,$02,$99\r\n   
    .byte $02,$9a,$02,$94,$02,$95,$02,$96,$02,$9d,$02,$9e,$02,$9f,$02,$a1\r\n   
    .byte $02,$a0,$02,$a2,$02,$90,$02,$91,$02,$92,$02,$a3,$02,$a3,$02,$a3\r\n   
    .byte $02,$a3,$02,$93,$02,$97,$02,$9b,$02,$06,$01,$85,$02,$86,$02,$87\r\n   
    .byte $02,$88,$02,$89,$02,$89,$02,$06,$01,$85,$02,$86,$02,$87,$02,$8a\r\n   
    .byte $02,$89,$02,$89,$02,$06,$01,$8c,$01,$8d,$01,$8e,$01,$8f,$01,$89\r\n   
    .byte $01,$89,$01,$06,$01,$8b,$02,$86,$02,$87,$02,$88,$02,$89,$02,$89\r\n   
    .byte $02,$02,$2f,$cf,$03,$bc,$03,$04,$24,$c1,$03,$c2,$03,$c3,$03,$c4\r\n   
    .byte $03,$03,$2f,$bf,$03,$c0,$03,$ce,$03,$03,$2f,$bd,$03,$be,$03,$ce\r\n   
    .byte $03,$03,$2f,$cf,$03,$bc,$03,$ce,$03,$10,$40,$80,$23,$81,$23,$82\r\n   
    .byte $23,$83,$23,$82,$23,$83,$23,$82,$23,$83,$23,$82,$23,$83,$23,$82\r\n   
    .byte $23,$83,$23,$82,$23,$83,$23,$82,$23,$83,$23,$08,$3c,$93,$a2,$93\r\n   
    .byte $e2,$91,$a2,$91,$e2,$92,$a2,$90,$a2,$92,$e2,$90,$e2,$08,$3c,$97\r\n   
    .byte $a2,$97,$e2,$95,$a2,$95,$e2,$96,$a2,$94,$a2,$96,$e2,$94,$e2,$08\r\n   
    .byte $3c,$9b,$a2,$9b,$e2,$99,$a2,$99,$e2,$9a,$a2,$98,$a2,$9a,$e2,$98\r\n   
    .byte $e2,$08,$24,$c2,$22,$c3,$22,$c2,$a2,$c3,$a2,$c0,$22,$c1,$22,$c0\r\n   
    .byte $a2,$c1,$a2,$08,$24,$c6,$22,$c7,$22,$c6,$a2,$c7,$a2,$c4,$22,$c5\r\n   
    .byte $22,$c4,$a2,$c5,$a2,$08,$24,$ca,$22,$cb,$22,$ca,$a2,$cb,$a2,$c8\r\n   
    .byte $22,$c9,$22,$c8,$a2,$c9,$a2,$04,$24,$95,$02,$95,$42,$96,$02,$96\r\n   
    .byte $42,$04,$24,$05,$30,$97,$02,$98,$02,$9b,$02,$9c,$02,$9d,$02,$04\r\n   
    .byte $24,$80,$03,$80,$43,$80,$83,$80,$c3,$04,$24,$81,$03,$81,$43,$82\r\n   
    .byte $03,$82,$43,$04,$24,$83,$03,$83,$43,$84,$03,$84,$43,$04,$24,$8b\r\n   
    .byte $03,$8c,$03,$8d,$03,$8e,$03,$01,$00,$8a,$03,$04,$24,$c0,$03,$c1\r\n   
    .byte $03,$c2,$03,$c3,$03,$06,$31,$c6,$03,$c7,$03,$c4,$03,$c5,$03,$c2\r\n   
    .byte $03,$c3,$03,$05,$32,$c2,$03,$ce,$03,$cf,$03,$c0,$03,$c1,$03,$06\r\n   
    .byte $32,$c8,$03,$c9,$03,$cb,$03,$cc,$03,$cd,$03,$ca,$03,$04,$24,$bb\r\n   
    .byte $03,$bc,$03,$bd,$03,$be,$03,$06,$2b,$b9,$01,$bb,$01,$b7,$01,$b8\r\n   
    .byte $01,$ba,$01,$bc,$01,$06,$2b,$b9,$01,$bb,$01,$bd,$01,$be,$01,$ba\r\n   
    .byte $01,$bc,$01,$02,$2a,$ca,$03,$cb,$03,$02,$2a,$cc,$03,$cf,$03,$0c\r\n   
    .byte $33,$90,$03,$91,$03,$92,$03,$94,$03,$95,$03,$96,$03,$98,$03,$99\r\n   
    .byte $03,$9a,$03,$9b,$03,$97,$03,$93,$03,$0a,$34,$9c,$03,$9d,$03,$9e\r\n   
    .byte $03,$a0,$03,$a1,$03,$a2,$03,$a4,$03,$a5,$03,$a6,$03,$a3,$03,$09\r\n   
    .byte $35,$a7,$03,$a8,$03,$a9,$03,$aa,$03,$ab,$03,$ac,$03,$ad,$03,$ae\r\n   
    .byte $03,$af,$03,$03,$2f,$b5,$03,$b6,$03,$b7,$03,$03,$36,$b8,$03,$b9\r\n   
    .byte $03,$ba,$03,$03,$37,$b5,$83,$b6,$83,$b7,$83,$03,$2e,$b8,$43,$b9\r\n   
    .byte $43,$ba,$43,$0b,$33,$80,$02,$81,$02,$82,$02,$83,$02,$84,$02,$85\r\n   
    .byte $02,$87,$02,$ad,$02,$ae,$02,$af,$02,$86,$02,$09,$33,$90,$02,$91\r\n   
    .byte $02,$92,$02,$93,$02,$94,$02,$95,$02,$96,$02,$97,$02,$98,$02,$09\r\n   
    .byte $33,$99,$02,$9a,$02,$9b,$02,$9c,$02,$9d,$02,$9e,$02,$9f,$02,$a0\r\n   
    .byte $02,$a1,$02,$0b,$3a,$a2,$02,$a3,$02,$a4,$02,$a6,$02,$a7,$02,$a8\r\n   
    .byte $02,$a9,$02,$aa,$02,$ab,$02,$ac,$02,$a5,$02,$08,$38,$80,$02,$81\r\n   
    .byte $02,$83,$02,$84,$02,$82,$02,$85,$02,$86,$02,$89,$02,$0a,$38,$8f\r\n   
    .byte $02,$90,$02,$93,$02,$94,$02,$92,$02,$95,$02,$96,$02,$99,$02,$8e\r\n   
    .byte $02,$91,$02,$08,$38,$80,$02,$81,$02,$a0,$02,$a1,$02,$82,$02,$85\r\n   
    .byte $02,$86,$02,$89,$02,$09,$38,$a6,$02,$81,$02,$a0,$02,$a1,$02,$a7\r\n   
    .byte $02,$85,$02,$a8,$02,$89,$02,$a5,$02,$08,$38,$80,$02,$81,$02,$a0\r\n   
    .byte $02,$a1,$02,$a2,$02,$85,$02,$a3,$02,$89,$02,$06,$38,$87,$02,$88\r\n   
    .byte $02,$8b,$02,$8c,$02,$8a,$02,$8d,$02,$04,$38,$97,$02,$98,$02,$9a\r\n   
    .byte $02,$9b,$02,$04,$38,$9c,$02,$9d,$02,$9e,$02,$9f,$02,$06,$39,$91\r\n   
    .byte $02,$92,$02,$93,$02,$94,$02,$90,$02,$95,$02,$06,$39,$97,$02,$98\r\n   
    .byte $02,$93,$02,$94,$02,$96,$02,$99,$02,$08,$39,$9c,$02,$9d,$02,$93\r\n   
    .byte $02,$94,$02,$9b,$02,$9e,$02,$9a,$02,$9f,$02,$10,$40,$80,$22,$81\r\n   
    .byte $22,$82,$22,$83,$22,$82,$22,$83,$22,$82,$22,$83,$22,$82,$22,$83\r\n   
    .byte $22,$82,$22,$83,$22,$82,$22,$83,$22,$82,$22,$83,$22,$10,$40,$84\r\n   
    .byte $22,$85,$22,$86,$22,$87,$22,$86,$22,$87,$22,$86,$22,$87,$22,$86\r\n   
    .byte $22,$87,$22,$86,$22,$87,$22,$86,$22,$87,$22,$86,$22,$87,$22,$10\r\n   
    .byte $40,$88,$22,$89,$22,$8a,$22,$8b,$22,$8a,$22,$8b,$22,$8a,$22,$8b\r\n   
    .byte $22,$8a,$22,$8b,$22,$8a,$22,$8b,$22,$8a,$22,$8b,$22,$8a,$22,$8b\r\n   
    .byte $22,$01,$00,$bc,$02,$01,$00,$bd,$02,$08,$24,$a5,$03,$a6,$03,$a5\r\n   
    .byte $83,$a6,$83,$a3,$03,$a4,$03,$a3,$83,$a4,$83,$04,$24,$ab,$03,$ac\r\n   
    .byte $03,$ad,$03,$ae,$03,$04,$24,$8d,$02,$8e,$02,$8e,$c2,$8d,$c2,$01\r\n   
    .byte $00,$6a,$02,$01,$00,$d6,$01,$04,$24,$d7,$01,$d7,$41,$d7,$81,$d7\r\n   
    .byte $c1,$04,$24,$d8,$01,$d8,$41,$d8,$81,$d8,$c1,$04,$24,$d9,$01,$d9\r\n   
    .byte $41,$d9,$81,$d9,$c1,$02,$37,$bc,$c3,$cf,$c3,$04,$24,$c4,$c3,$c3\r\n   
    .byte $c3,$c2,$c3,$c1,$c3,$03,$37,$c0,$c3,$bf,$c3,$ce,$c3,$03,$37,$be\r\n   
    .byte $c3,$bd,$c3,$ce,$c3,$03,$37,$bc,$c3,$cf,$c3,$ce,$c3,$03,$3b,$ac\r\n   
    .byte $01,$ac,$81,$ac,$01,$0e,$35,$82,$02,$83,$02,$84,$02,$86,$02,$87\r\n   
    .byte $02,$88,$02,$8a,$02,$8b,$02,$8c,$02,$85,$02,$89,$02,$8d,$02,$80\r\n   
    .byte $02,$81,$02,$01,$00,$a4,$02,$03,$3b,$ac,$81,$ac,$01,$ac,$81,$09\r\n   
    .byte $00,$a8,$03,$9e,$03,$9f,$03,$a0,$03,$a4,$03,$a5,$03,$a6,$03,$a7\r\n   
    .byte $03,$a9,$03,$09,$00,$a8,$03,$a1,$03,$a2,$03,$a3,$03,$a4,$03,$a5\r\n   
    .byte $03,$a6,$03,$a7,$03,$a9,$03,$09,$00,$9c,$03,$9e,$03,$9f,$03,$a0\r\n   
    .byte $03,$a4,$03,$a5,$03,$a6,$03,$9b,$03,$9d,$03,$09,$00,$9c,$03,$a1\r\n   
    .byte $03,$a2,$03,$a3,$03,$a4,$03,$a5,$03,$a6,$03,$9b,$03,$9d,$03,$05\r\n   
    .byte $3d,$9e,$02,$9a,$02,$9b,$02,$9c,$02,$9d,$02,$07,$3e,$91,$02,$9f\r\n   
    .byte $02,$90,$02,$92,$02,$93,$02,$94,$02,$95,$02,$06,$3f,$97,$02,$9f\r\n   
    .byte $02,$96,$02,$98,$02,$99,$02,$af,$02,$04,$24,$9c,$03,$9c,$43,$9d\r\n   
    .byte $03,$9d,$43,$04,$24,$9e,$03,$9f,$03,$9e,$83,$9f,$83,$04,$24,$9d\r\n   
    .byte $83,$9d,$c3,$9c,$83,$9c,$c3,$04,$24,$9f,$43,$9e,$43,$9f,$c3,$9e\r\n   
    .byte $c3,$04,$24,$90,$00,$91,$00,$92,$00,$93,$00,$04,$24,$94,$00,$95\r\n   
    .byte $00,$96,$00,$97,$00,$04,$24,$aa,$00,$ab,$00,$ac,$00,$ac,$40,$04\r\n   
    .byte $24,$b0,$00,$b1,$00,$b0,$80,$b1,$80,$04,$24,$b4,$00,$b5,$00,$b4\r\n   
    .byte $80,$b5,$80,$04,$24,$b8,$00,$b9,$00,$b8,$80,$b9,$80,$04,$24,$bc\r\n   
    .byte $00,$bc,$40,$bc,$80,$bc,$c0,$04,$24,$bd,$00,$bd,$40,$bd,$80,$bd\r\n   
    .byte $c0,$04,$24,$be,$00,$be,$40,$be,$80,$be,$c0,$04,$24,$80,$03,$80\r\n   
    .byte $43,$80,$83,$80,$c3,$04,$24,$81,$03,$82,$03,$81,$83,$82,$83,$04\r\n   
    .byte $24,$83,$03,$83,$43,$83,$83,$83,$c3,$04,$24,$82,$43,$81,$43,$82\r\n   
    .byte $c3,$81,$c3,$04,$24,$84,$03,$84,$43,$84,$83,$84,$c3,$04,$24,$85\r\n   
    .byte $03,$85,$43,$85,$83,$85,$c3,$0c,$41,$81,$03,$82,$03,$83,$03,$84\r\n   
    .byte $03,$85,$03,$86,$03,$87,$03,$88,$02,$89,$03,$8d,$03,$8e,$03,$8f\r\n   
    .byte $03,$10,$41,$81,$03,$82,$03,$83,$03,$84,$03,$85,$03,$86,$03,$87\r\n   
    .byte $03,$88,$02,$89,$03,$8d,$03,$8e,$03,$8f,$03,$93,$01,$94,$01,$95\r\n   
    .byte $01,$96,$01,$18,$41,$81,$03,$82,$03,$83,$03,$84,$03,$85,$03,$86\r\n   
    .byte $03,$87,$03,$88,$02,$89,$03,$8d,$03,$8e,$03,$8f,$03,$a8,$01,$b6\r\n   
    .byte $01,$a8,$81,$b6,$01,$97,$01,$a5,$01,$a6,$01,$a7,$01,$a9,$01,$a7\r\n   
    .byte $81,$97,$81,$a5,$81,$30,$41,$81,$03,$82,$03,$83,$03,$84,$03,$85\r\n   
    .byte $03,$86,$03,$87,$03,$88,$02,$89,$03,$8d,$03,$8e,$03,$8f,$03,$cd\r\n   
    .byte $01,$b6,$01,$cd,$81,$b6,$01,$ce,$01,$cf,$01,$b3,$01,$b4,$01,$b6\r\n   
    .byte $01,$b6,$01,$b5,$c1,$b6,$01,$cb,$01,$cc,$01,$cc,$81,$cb,$81,$ca\r\n   
    .byte $01,$c9,$01,$c8,$01,$c8,$41,$c9,$41,$ca,$41,$b5,$01,$cb,$41,$cc\r\n   
    .byte $41,$cd,$41,$cd,$c1,$cc,$c1,$cb,$c1,$b5,$81,$ca,$81,$c9,$81,$c8\r\n   
    .byte $81,$c8,$c1,$c9,$c1,$ca,$c1,$01,$00,$d3,$03,$02,$2a,$d2,$00,$d2\r\n   
    .byte $40,$04,$24,$67,$01,$67,$41,$67,$81,$67,$c1,$04,$24,$68,$00,$68\r\n   
    .byte $40,$68,$80,$68,$c0,$04,$24,$6b,$00,$6b,$40,$6b,$80,$6b,$c0,$04\r\n   
    .byte $24,$65,$01,$65,$41,$65,$81,$65,$c1,$04,$24,$66,$01,$66,$41,$66\r\n   
    .byte $81,$66,$c1,$04,$24,$d0,$00,$d0,$40,$d1,$01,$d1,$41,$04,$24,$ae\r\n   
    .byte $00,$af,$00,$ae,$80,$af,$80,$04,$24,$bd,$01,$bd,$41,$bd,$81,$bd\r\n   
    .byte $c1,$04,$24,$be,$01,$be,$41,$be,$81,$be,$c1,$04,$24,$bf,$01,$bf\r\n   
    .byte $41,$bf,$81,$bf,$c1,$04,$24,$d4,$02,$d4,$42,$d4,$82,$d4,$c2,$04\r\n   
    .byte $24,$d4,$01,$d4,$41,$d4,$81,$d4,$c1,$09,$00,$94,$01,$96,$01,$97\r\n   
    .byte $01,$98,$01,$90,$01,$91,$01,$92,$01,$93,$01,$95,$91,$08,$3c,$9a\r\n   
    .byte $01,$9b,$01,$9e,$01,$9f,$01,$99,$01,$9d,$01,$9c,$01,$a0,$01,$08\r\n   
    .byte $3c,$a2,$01,$a3,$01,$a5,$01,$9f,$01,$a1,$01,$a4,$01,$9c,$01,$a0\r\n   
    .byte $01,$04,$06,$07,$08,$00,$01,$02,$03,$05,$09,$33,$32,$34,$0a,$0b\r\n   
    .byte $0d,$0e,$10,$11,$12,$13,$0f,$0c,$0a,$0b,$0d,$0e,$10,$11,$0f,$09\r\n   
    .byte $1a,$0a,$0b,$0d,$0e,$10,$11,$09,$18,$0c,$16,$0a,$0b,$0d,$0e,$10\r\n   
    .byte $11,$15,$16,$17,$09,$14,$0a,$0b,$0d,$0e,$10,$11,$18,$16,$1b,$09\r\n   
    .byte $1c,$0a,$0b,$0d,$0e,$10,$11,$15,$16,$17,$09,$1a,$00,$01,$03,$04\r\n   
    .byte $06,$07,$08,$1e,$1d,$1f,$0a,$0b,$0d,$0e,$10,$11,$13,$0c,$12,$20\r\n   
    .byte $01,$04,$07,$00,$03,$06,$02,$05,$08,$0a,$0b,$0d,$0e,$10,$11,$21\r\n   
    .byte $1c,$09,$0a,$0b,$0d,$0e,$11,$10,$22,$79,$83,$26,$0f,$23,$24,$25\r\n   
    .byte $00,$01,$02,$03,$04,$05,$06,$07,$08,$27,$28,$4b,$4c,$00,$01,$02\r\n   
    .byte $03,$04,$05,$06,$07,$08,$20,$29,$00,$01,$03,$04,$06,$07,$1d,$a1\r\n   
    .byte $08,$00,$01,$02,$03,$04,$05,$06,$07,$08,$2e,$2f,$0a,$0b,$0c,$0d\r\n   
    .byte $0e,$0f,$10,$11,$12,$81,$82,$0a,$0b,$0d,$0e,$0f,$10,$11,$12,$81\r\n   
    .byte $82,$0a,$0b,$0d,$0e,$0f,$10,$11,$2c,$2d,$37,$38,$39,$3a,$3b,$3c\r\n   
    .byte $3d,$3e,$30,$3f,$00,$01,$02,$03,$04,$05,$35,$06,$07,$08,$7a,$87\r\n   
    .byte $88,$89,$8a,$36,$32,$00,$01,$02,$03,$04,$05,$06,$07,$08,$40,$7b\r\n   
    .byte $7c,$00,$01,$02,$03,$04,$05,$06,$07,$08,$41,$00,$01,$02,$03,$04\r\n   
    .byte $05,$06,$07,$08,$42,$00,$01,$02,$03,$04,$05,$06,$07,$08,$43,$00\r\n   
    .byte $01,$02,$03,$04,$05,$06,$07,$08,$44,$45,$00,$01,$02,$03,$04,$05\r\n   
    .byte $06,$07,$08,$46,$7b,$7c,$00,$01,$02,$03,$04,$05,$06,$07,$08,$47\r\n   
    .byte $7d,$7e,$0a,$0b,$0d,$0e,$0f,$10,$11,$12,$13,$7f,$80,$0c,$0a,$0b\r\n   
    .byte $0d,$0e,$0f,$10,$11,$48,$2a,$2b,$00,$01,$02,$03,$04,$05,$06,$07\r\n   
    .byte $08,$4d,$00,$01,$02,$03,$04,$05,$06,$07,$08,$4e,$00,$01,$02,$03\r\n   
    .byte $04,$05,$06,$07,$08,$4a,$49,$00,$01,$03,$04,$06,$07,$4f,$1d,$08\r\n   
    .byte $00,$01,$02,$03,$04,$05,$06,$07,$08,$50,$2a,$29,$55,$56,$59,$5a\r\n   
    .byte $52,$53,$5d,$5e,$51,$54,$19,$57,$58,$5b,$5c,$5f,$43,$64,$66,$67\r\n   
    .byte $60,$61,$62,$63,$1c,$18,$65,$68,$69,$6a,$6b,$6c,$8c,$8d,$8e,$8f\r\n   
    .byte $90,$91,$92,$93,$94,$95,$96,$97,$98,$99,$9a,$9b,$72,$73,$76,$77\r\n   
    .byte $6d,$6e,$6f,$70,$71,$74,$75,$78,$9d,$9e,$9f,$a0,$00,$01,$02,$03\r\n   
    .byte $04,$05,$06,$07,$08,$09,$84,$8b,$85,$86,$00,$01,$02,$03,$04,$05\r\n   
    .byte $06,$07,$08,$09,$87,$88,$89,$8a,$33,$32,$34,$00,$01,$02,$03,$04\r\n   
    .byte $05,$06,$07,$08,$40,$9c,$7b,$7c,$0d,$0e,$a2,$a3,$a6,$ab,$a7,$ac\r\n   
    .byte $a5,$aa,$a8,$ad,$b2,$a9,$ae,$af,$00,$01,$03,$04,$06,$07,$08,$1e\r\n   
    .byte $4c,$1f,$a4,$a5,$a6,$a2,$a7,$a8,$b0,$aa,$ab,$a3,$ac,$ad,$b1,$56\r\n   
    .byte $5a,$0d,$55,$56,$a3,$55,$56,$59,$5a,$cb,$0a,$0b,$b3,$b4,$10,$11\r\n   
    .byte $b5,$b6,$b8,$b9,$ba,$b7,$bb,$bc,$bd,$bf,$c0,$c1,$c3,$c4,$c5,$c6\r\n   
    .byte $c2,$be,$bb,$bc,$bd,$bf,$c0,$c1,$c3,$c4,$c5,$c7,$83,$0a,$0b,$0c\r\n   
    .byte $0d,$0e,$16,$10,$11,$26,$0f,$12,$2a,$2b,$55,$59,$0e,$59,$5a,$a2\r\n   
    .byte $55,$56,$59,$5a,$58,$5b,$5c,$5f,$19,$57,$55,$56,$59,$5a,$c8,$cb\r\n   
    .byte $c9,$ca,$0a,$0b,$26,$0d,$0e,$0f,$10,$11,$21,$22,$cc,$03,$04,$05\r\n   
    .byte $00,$01,$02,$06,$07,$08,$32,$de,$df,$d8,$20,$29,$d9,$da,$db,$dc\r\n   
    .byte $dd,$d5,$35,$55,$56,$59,$5a,$19,$58,$57,$5b,$cd,$ce,$cf,$d0,$d1\r\n   
    .byte $d2,$d3,$d4,$4c,$49,$00,$01,$02,$4c,$49,$00,$03,$04,$06,$07,$4c\r\n   
    .byte $49,$00,$03,$d6,$d7,$e4,$e5,$e6,$e7,$52,$53,$55,$56,$59,$5a,$5d\r\n   
    .byte $5e,$e0,$e1,$e2,$e3,$52,$53,$19,$55,$56,$57,$58,$59,$5a,$5b,$5d\r\n   
    .byte $5e,$d1,$cd,$d2,$ce,$ed,$ee,$f2,$51,$f5,$5c,$f8,$f9,$ec,$f1,$f4\r\n   
    .byte $f7,$e8,$e9,$e4,$e5,$ea,$eb,$ef,$f0,$f3,$d3,$d4,$f6,$fb,$fa,$fc\r\n   
    .byte $fd,$e2,$e3,$fe,$ff,$01,$04,$04,$07,$d1,$cd,$19,$55,$56,$57,$58\r\n   
    .byte $59,$5a,$5b,$d0,$d4,$a8,$01,$01,$01,$01,$01,$01,$01,$01,$01,$01\r\n   
    .byte $00,$a8,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$10,$a8,$09,$09\r\n   
    .byte $09,$09,$09,$09,$09,$09,$09,$09,$08,$22,$01,$02,$02,$22,$10,$10\r\n   
    .byte $10,$22,$09,$0a,$0a,$36,$03,$05,$04,$05,$36,$11,$13,$12,$13,$36\r\n   
    .byte $0b,$0d,$0c,$0d,$00,$06,$00,$14,$00,$0e,$16,$05,$02,$17,$13,$10\r\n   
    .byte $17,$0d,$0a,$11,$04,$03,$11,$12,$11,$11,$0c,$0b,$92,$1a,$0f,$0f\r\n   
    .byte $1a,$0f,$0f,$1a,$0f,$0f,$1a,$57,$07,$07,$07,$07,$07,$07,$32,$15\r\n   
    .byte $16,$17,$15,$18,$18,$19,$18,$1b,$1b,$1a,$1c,$1d,$1a,$1b,$1b,$28\r\n   
    .byte $1e,$1f,$20,$00,$21,$18,$22,$24,$02,$22,$0f,$57,$5c,$57,$57,$58\r\n   
    .byte $58,$30,$30,$0f,$39,$28,$37,$37,$38,$28,$3f,$3e,$3e,$28,$3f,$3e\r\n   
    .byte $3e,$0f,$49,$28,$47,$47,$48,$1e,$4f,$50,$02,$4f,$1d,$5a,$5a,$00\r\n   
    .byte $59,$00,$34,$00,$36,$0f,$33,$0f,$32,$00,$51,$00,$54,$00,$52,$00\r\n   
    .byte $53,$00,$55,$2f,$5b,$5b,$5b,$28,$3f,$3f,$3e,$36,$42,$44,$43,$44\r\n   
    .byte $28,$46,$45,$45,$27,$64,$65,$66,$26,$64,$65,$66,$ba,$5f,$5e,$5e\r\n   
    .byte $5f,$5e,$5e,$5f,$5e,$5e,$5f,$5e,$5e,$80,$60,$60,$61,$62,$63,$60\r\n   
    .byte $61,$62,$63,$18,$67,$68,$1c,$3b,$3c,$00,$37,$00,$3d,$00,$3a,$36\r\n   
    .byte $2a,$2e,$2c,$2e,$36,$2b,$2f,$2d,$2f,$00,$28,$00,$29,$1f,$26,$27\r\n   
    .byte $1f,$27,$27,$34,$69,$6a,$6b,$6c,$18,$22,$24,$18,$23,$25,$16,$4a\r\n   
    .byte $4b,$00,$4e,$00,$4d,$00,$4c,$41,$6d,$6d,$6d,$6d,$6d,$41,$6e,$6e\r\n   
    .byte $6e,$6e,$6e,$41,$6f,$6f,$6f,$6f,$6f,$41,$70,$70,$70,$70,$70,$41\r\n   
    .byte $71,$71,$71,$71,$71,$41,$72,$72,$72,$72,$72,$41,$73,$73,$73,$73\r\n   
    .byte $73,$41,$74,$74,$74,$74,$74,$70,$61,$62,$63,$60,$61,$62,$63,$60\r\n   
    .byte $00,$76,$00,$77,$00,$2e,$00,$2f,$00,$4b,$1c,$5a,$5a,$34,$79,$7c\r\n   
    .byte $7b,$7a,$18,$7d,$7e,$00,$7f,$00,$80,$40,$60,$61,$62,$63,$60,$26\r\n   
    .byte $84,$85,$86,$30,$87,$88,$89,$88,$41,$8a,$8a,$8a,$8a,$8a,$41,$8b\r\n   
    .byte $8b,$8b,$8b,$8b,$41,$8c,$8c,$8c,$8c,$8c,$41,$8d,$8d,$8d,$8d,$8d\r\n   
    .byte $41,$8e,$8e,$8e,$8e,$8e,$41,$8f,$8f,$8f,$8f,$8f,$41,$90,$90,$90\r\n   
    .byte $90,$90,$41,$91,$91,$91,$91,$91,$20,$92,$93,$94,$21,$92,$94,$93\r\n   
    .byte $00,$95,$00,$81,$18,$97,$97,$00,$98,$00,$99,$00,$9a,$18,$9a,$9b\r\n   
    .byte $1f,$9a,$9c,$00,$9d,$28,$9e,$9f,$a0,$00,$a1,$20,$82,$83,$96,$20\r\n   
    .byte $82,$96,$83,$00,$a2,$44,$a5,$a4,$a3,$a4,$a5,$12,$a6,$a7,$00,$a8\r\n   
    .byte $40,$a9,$aa,$ab,$ac,$a9,$00,$ad,$11,$ae,$af,$00,$b0,$00,$b1,$00\r\n   
    .byte $b2,$1f,$b3,$b4,$00,$b5,$00,$b6,$00,$b7,$00,$b8,$00,$b9,$00,$ba\r\n   
    .byte $00,$bb,$00,$bc,$00,$bd,$00,$be,$00,$bf,$00,$c0,$00,$c1,$00,$c2\r\n   
    .byte $12,$0c,$0d,$1f,$27,$28,$14,$1d,$1f,$14,$2c,$2d,$38,$20,$21,$22\r\n   
    .byte $21,$64,$14,$15,$16,$17,$18,$15,$14,$38,$44,$45,$46,$45,$12,$2a\r\n   
    .byte $2b,$00,$29,$14,$0f,$0e,$1f,$25,$26,$16,$4a,$4b,$12,$04,$05,$66\r\n   
    .byte $00,$01,$02,$03,$02,$01,$00,$12,$08,$09,$00,$23,$54,$1a,$1b,$1c\r\n   
    .byte $31,$32,$33,$34,$47,$48,$49,$19,$54,$0b,$10,$11,$12,$13,$10,$19\r\n   
    .byte $4d,$4c,$36,$3b,$39,$3a,$38,$b4,$60,$61,$60,$61,$60,$61,$62,$63\r\n   
    .byte $62,$63,$62,$63,$00,$5d,$3f,$2e,$2f,$30,$2f,$64,$56,$57,$58,$59\r\n   
    .byte $5a,$57,$56,$00,$51,$32,$52,$53,$54,$55,$00,$50,$36,$3c,$3d,$3c\r\n   
    .byte $3d,$36,$41,$42,$43,$42,$2f,$3e,$3f,$40,$08,$5e,$03,$24,$00,$46\r\n   
    .byte $12,$5c,$5f,$32,$64,$65,$66,$65,$00,$0a,$32,$34,$35,$36,$37,$00\r\n   
    .byte $50,$00,$00,$18,$06,$07,$34,$67,$68,$69,$6a,$18,$6b,$6c,$00,$6d\r\n   
    .byte $24,$6e,$6f,$70,$30,$71,$72,$73,$71,$94,$79,$78,$74,$74,$75,$76\r\n   
    .byte $77,$74,$78,$79,$34,$7a,$7b,$7c,$7d,$00,$7e,$00,$7f,$00,$80,$18\r\n   
    .byte $81,$82,$18,$83,$84,$00,$85,$00,$86,$18,$8a,$8b,$00,$87,$bf,$8c\r\n   
    .byte $8d,$8e,$8d,$8e,$8d,$8e,$8d,$8e,$8d,$8e,$8d,$00,$00,$00,$00,$00\r\n   
    .byte $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00\r\n\r\nDefaultObjectFlags:
    ;at A380\r\n    .byte $06,$06,$17,$17,$07,$06,$06,$06,$06,$17,$06,$06,$20,$22,$52,$22\r\n   
    .byte $20,$20,$17,$42,$17,$17,$06,$46,$02,$20,$02,$00,$20,$20,$17,$06\r\n   
    .byte $06,$07,$06,$46,$20,$20,$00,$00,$00,$00,$00,$00,$00,$00,$00,$20\r\n   
    .byte $20,$20,$20,$00,$00,$00,$00,$00,$00,$00,$00,$20,$00,$02,$02,$02\r\n   
    .byte $02,$02,$02,$22,$02,$02\r\n\r\nDefaultObjectSpeedCtrl: ;at A3C6\r\n   
    .byte $b0,$08,$08,$b4,$b8,$08,$bc,$c0,$c0,$c4,$b0,$08,$08,$08,$2c,$08\r\n   
    .byte $08,$08,$c8,$cc,$b0,$c8,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08\r\n   
    .byte $08,$d0,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08\r\n   
    .byte $08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08,$08\r\n   
    .byte $08,$08,$08,$08,$08,$08\r\n\r\nDefaultObjectFireDelay: ;at A40C\r\n   
    .byte $00,$1f,$01,$00,$00,$00,$00,$00,$00,$0f,$00,$00,$3f,$01,$00,$10\r\n   
    .byte $bb,$00,$20,$00,$00,$20,$00,$00,$00,$01,$00,$00,$00,$00,$00,$00\r\n   
    .byte $00,$00,$26,$26,$20,$3f,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00\r\n   
    .byte $00,$18,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00\r\n   
    .byte $00,$00,$00,$00,$00,$00\r\n\r\nEnemyDataPointers ; Enemy data pointers
    at A452 in bank 6\r\n    .byte $68\r\n    .byte $a4,$29,$a5,$ce,$a5,$77,$a6,$54,$a7,$41,$a8,$c6,$a8,$1b,$a9,$cc\r\n   
    .byte $a9,$25,$aa,$72,$aa,$01,$10,$4c,$00,$01,$40,$8c,$00,$01,$50,$5c\r\n   
    .byte $00,$02,$38,$4c,$00,$02,$70,$8c,$00,$02,$80,$5c,$00,$03,$38,$48\r\n   
    .byte $0b,$03,$b8,$78,$0b,$04,$78,$58,$0b,$04,$98,$38,$22,$04,$d8,$98\r\n   
    .byte $0b,$05,$48,$b8,$17,$05,$78,$78,$0b,$05,$b8,$38,$22,$06,$78,$d8\r\n   
    .byte $17,$06,$98,$28,$0b,$06,$b8,$58,$22,$07,$90,$b4,$1c,$08,$38,$b8\r\n   
    .byte $02,$08,$58,$98,$02,$08,$78,$78,$02,$09,$48,$a8,$04,$09,$68,$68\r\n   
    .byte $04,$09,$b8,$88,$21,$0a,$48,$48,$21,$0a,$58,$88,$04,$0a,$78,$68\r\n   
    .byte $21,$0a,$d8,$88,$21,$0b,$78,$a8,$21,$0b,$88,$b8,$04,$0b,$b8,$68\r\n   
    .byte $21,$0b,$d8,$48,$21,$0c,$28,$48,$21,$0c,$38,$78,$04,$0c,$38,$a8\r\n   
    .byte $21,$0c,$88,$88,$21,$0c,$c8,$28,$04,$0d,$90,$b4,$1c,$0f,$28,$b8\r\n   
    .byte $40,$0f,$60,$4c,$00,$0f,$90,$8c,$00,$0f,$a0,$5c,$00,$10,$f8,$80\r\n   
    .byte $0a,$11,$f8,$80,$0a,$12,$e0,$ac,$09,$14,$d8,$a0,$05,$15,$c8,$60\r\n   
    .byte $16,$16,$50,$a0,$05,$ff,$01,$00,$b4,$14,$02,$30,$94,$14,$02,$b0\r\n   
    .byte $74,$14,$03,$30,$54,$14,$04,$80,$02,$ff,$04,$82,$fe,$1f,$04,$98\r\n   
    .byte $bc,$03,$04,$f0,$90,$07,$05,$98,$bc,$03,$06,$98,$bc,$03,$07,$78\r\n   
    .byte $9c,$03,$08,$00,$00,$ff,$08,$80,$fe,$07,$09,$08,$c8,$40,$09,$28\r\n   
    .byte $c8,$04,$09,$48,$a8,$04,$0a,$b8,$dc,$03,$0a,$e0,$80,$10,$0b,$98\r\n   
    .byte $dc,$03,$0b,$e0,$80,$10,$0d,$4c,$54,$13,$0d,$a4,$9c,$13,$0d,$f4\r\n   
    .byte $9c,$13,$0e,$64,$b4,$13,$0e,$90,$98,$3f,$0e,$ec,$9c,$13,$0f,$4c\r\n   
    .byte $ac,$13,$0f,$70,$70,$07,$0f,$a4,$84,$13,$0f,$f4,$9c,$13,$10,$01\r\n   
    .byte $fe,$07,$10,$48,$c8,$41,$11,$30,$7c,$3d,$11,$48,$7c,$3d,$11,$60\r\n   
    .byte $7c,$3d,$11,$78,$79,$3e,$11,$90,$79,$3e,$11,$a8,$79,$3e,$12,$e0\r\n   
    .byte $ac,$09,$14,$f0,$a0,$07,$16,$e0,$fe,$07,$ff,$01,$30,$98,$02,$01\r\n   
    .byte $68,$78,$02,$01,$a0,$58,$02,$01,$d0,$78,$02,$01,$f0,$98,$02,$03\r\n   
    .byte $50,$e0,$0d,$03,$d0,$e0,$0d,$04,$50,$e0,$0d,$04,$d0,$e0,$0d,$05\r\n   
    .byte $a0,$c0,$05,$06,$08,$c0,$05,$06,$28,$48,$3e,$06,$38,$48,$3e,$06\r\n   
    .byte $68,$c0,$05,$06,$c8,$a8,$3f,$07,$68,$58,$17,$07,$68,$78,$23,$07\r\n   
    .byte $68,$98,$17,$07,$68,$b8,$23,$07,$c8,$b8,$40,$09,$00,$84,$12,$0a\r\n   
    .byte $80,$a4,$08,$0a,$98,$98,$0b,$0b,$18,$98,$0b,$0b,$98,$98,$0b,$0c\r\n   
    .byte $c8,$7c,$03,$0d,$28,$4c,$03,$0d,$a8,$bc,$03,$0e,$f0,$80,$08,$0f\r\n   
    .byte $f0,$80,$0a,$11,$b0,$fe,$0a,$11,$d0,$44,$12,$11,$f8,$78,$41,$13\r\n   
    .byte $d0,$84,$12,$15,$68,$48,$21,$15,$98,$88,$21,$15,$68,$b8,$21,$15\r\n   
    .byte $98,$d8,$21,$16,$68,$48,$21,$16,$98,$88,$21,$16,$68,$b8,$21,$16\r\n   
    .byte $98,$d8,$21,$ff,$00,$80,$e0,$32,$00,$78,$80,$05,$00,$78,$40,$05\r\n   
    .byte $00,$f0,$40,$05,$01,$58,$04,$05,$01,$68,$80,$05,$01,$b8,$40,$05\r\n   
    .byte $02,$48,$38,$40,$02,$50,$e0,$31,$02,$78,$c0,$0f,$03,$28,$79,$3e\r\n   
    .byte $03,$38,$a0,$0f,$03,$48,$b9,$3e,$03,$58,$e0,$0f,$04,$78,$c0,$0f\r\n   
    .byte $04,$98,$e0,$0f,$04,$e0,$38,$3f,$04,$f0,$38,$3f,$05,$14,$b6,$18\r\n   
    .byte $05,$24,$86,$18,$05,$30,$b8,$0c,$05,$40,$88,$0c,$05,$c4,$76,$18\r\n   
    .byte $05,$e0,$78,$0c,$06,$58,$a0,$0f,$06,$78,$80,$0f,$06,$88,$c9,$3e\r\n   
    .byte $06,$98,$c9,$3e,$06,$a8,$c9,$3e,$07,$68,$e0,$31,$07,$98,$e0,$0f\r\n   
    .byte $07,$d8,$e0,$0f,$08,$58,$e0,$0f,$08,$98,$c0,$0f,$08,$b0,$e0,$31\r\n   
    .byte $09,$50,$e0,$31,$09,$f8,$e0,$0f,$0a,$38,$c0,$0f,$0a,$48,$e0,$31\r\n   
    .byte $0a,$d0,$04,$0e,$0b,$b0,$ff,$0e,$0c,$e0,$a0,$08,$0d,$18,$7c,$03\r\n   
    .byte $0d,$d8,$3c,$03,$0d,$f0,$bc,$03,$0e,$28,$38,$3f,$0e,$80,$fe,$08\r\n   
    .byte $0e,$88,$e0,$31,$0e,$c8,$e0,$31,$0f,$b8,$c0,$0f,$0f,$d8,$c0,$0f\r\n   
    .byte $10,$b0,$60,$16,$11,$50,$60,$16,$11,$e0,$60,$16,$12,$60,$60,$16\r\n   
    .byte $ff,$00,$28,$5c,$03,$00,$68,$9c,$03,$00,$d8,$7c,$03,$01,$58,$7c\r\n   
    .byte $03,$01,$98,$9c,$03,$01,$d8,$58,$40,$02,$90,$88,$0c,$02,$c0,$a8\r\n   
    .byte $24,$03,$10,$ff,$06,$04,$10,$ff,$06,$05,$10,$80,$10,$06,$10,$80\r\n   
    .byte $10,$06,$30,$77,$19,$06,$50,$cc,$3d,$06,$60,$cc,$3d,$06,$70,$cc\r\n   
    .byte $3d,$06,$d0,$37,$25,$07,$70,$b7,$19,$07,$d0,$d7,$25,$07,$f0,$c8\r\n   
    .byte $40,$09,$10,$ff,$06,$0a,$28,$3c,$03,$0a,$38,$7c,$03,$0a,$68,$5c\r\n   
    .byte $03,$0a,$90,$97,$25,$0a,$c0,$38,$0c,$0a,$c0,$78,$24,$0b,$10,$ff\r\n   
    .byte $06,$0b,$90,$37,$19,$0b,$90,$b7,$19,$0c,$d0,$78,$42,$0d,$38,$7c\r\n   
    .byte $03,$0d,$68,$5c,$03,$0d,$68,$bc,$03,$0d,$90,$37,$19,$0d,$c0,$58\r\n   
    .byte $0c,$0d,$c0,$98,$24,$0e,$30,$58,$0c,$0e,$30,$98,$24,$0e,$c0,$38\r\n   
    .byte $0c,$0f,$40,$78,$0c,$0f,$40,$b8,$24,$0f,$98,$78,$02,$0f,$d8,$58\r\n   
    .byte $02,$10,$70,$d7,$19,$10,$d0,$d7,$25,$12,$60,$88,$0c,$12,$80,$a8\r\n   
    .byte $24,$12,$d0,$37,$19,$12,$d0,$57,$19,$13,$90,$d7,$19,$13,$b0,$8c\r\n   
    .byte $09,$13,$d0,$b7,$25,$15,$80,$38,$0c,$15,$80,$78,$24,$15,$80,$b8\r\n   
    .byte $0c,$16,$80,$38,$0c,$16,$80,$78,$24,$16,$80,$b8,$0c,$ff,$00,$80\r\n   
    .byte $ff,$2c,$00,$d0,$98,$01,$00,$f8,$80,$30,$01,$30,$78,$01,$01,$70\r\n   
    .byte $58,$01,$01,$fc,$80,$2f,$04,$58,$80,$2f,$05,$01,$08,$ff,$05,$40\r\n   
    .byte $0a,$ff,$05,$60,$80,$30,$05,$6c,$4c,$00,$05,$a4,$8c,$00,$05,$b4\r\n   
    .byte $5c,$00,$06,$10,$04,$ff,$06,$50,$06,$ff,$06,$b0,$78,$40,$07,$c0\r\n   
    .byte $84,$15,$08,$70,$44,$15,$09,$04,$44,$15,$09,$d0,$44,$15,$0a,$e0\r\n   
    .byte $ff,$00,$0b,$28,$78,$3e,$0b,$38,$78,$3e,$0b,$70,$98,$3d,$0b,$b0\r\n   
    .byte $58,$40,$0b,$e0,$ff,$00,$0c,$30,$58,$41,$0c,$a0,$b9,$3e,$0d,$e0\r\n   
    .byte $ac,$09,$0f,$e0,$98,$01,$10,$88,$98,$01,$11,$28,$98,$01,$11,$b0\r\n   
    .byte $98,$01,$ff,$19,$08,$ac,$09,$1a,$f8,$ac,$09,$1c,$70,$6c,$09,$1e\r\n   
    .byte $68,$e0,$0f,$1e,$98,$c0,$0f,$1e,$c8,$a0,$0f,$1f,$90,$38,$40,$20\r\n   
    .byte $70,$a8,$02,$20,$b0,$a8,$02,$20,$f0,$a8,$02,$21,$08,$38,$40,$21\r\n   
    .byte $38,$38,$02,$21,$78,$38,$02,$21,$d8,$78,$02,$22,$f0,$80,$08,$23\r\n   
    .byte $e4,$ac,$3b,$24,$30,$ac,$13,$24,$84,$ac,$13,$24,$b8,$bc,$3d,$24\r\n   
    .byte $c8,$bc,$3d,$80,$00,$00,$00,$ff,$19,$10,$4c,$00,$19,$40,$8c,$00\r\n   
    .byte $19,$50,$5c,$00,$19,$c8,$a8,$3e,$19,$f0,$4c,$00,$1a,$20,$8c,$00\r\n   
    .byte $1a,$30,$5c,$00,$1a,$f0,$4c,$00,$1b,$20,$8c,$00,$1b,$30,$5c,$00\r\n   
    .byte $1b,$c8,$bc,$3d,$1b,$d8,$bc,$3d,$1c,$80,$80,$3b,$1d,$c8,$a8,$3e\r\n   
    .byte $1d,$d8,$b0,$05,$1e,$d8,$b0,$05,$1f,$c8,$bc,$3d,$1f,$d8,$bc,$3d\r\n   
    .byte $20,$80,$80,$3b,$21,$78,$e0,$0d,$21,$c8,$ac,$3d,$21,$f8,$e0,$0d\r\n   
    .byte $22,$68,$e0,$0d,$22,$c8,$ac,$3d,$22,$e8,$e0,$0d,$24,$28,$28,$41\r\n   
    .byte $24,$a8,$58,$04,$24,$c8,$88,$04,$24,$d0,$b8,$21,$25,$d8,$78,$21\r\n   
    .byte $25,$d8,$88,$21,$25,$d8,$b8,$04,$26,$88,$b8,$21,$26,$d0,$a8,$21\r\n   
    .byte $26,$d8,$c8,$21,$27,$28,$78,$3f,$27,$d8,$48,$0b,$27,$d8,$68,$22\r\n   
    .byte $27,$d8,$88,$0b,$27,$d8,$a8,$22,$28,$48,$88,$17,$28,$88,$38,$21\r\n   
    .byte $28,$d8,$48,$21,$28,$d8,$98,$21,$ff,$18,$88,$68,$04,$18,$98,$b8\r\n   
    .byte $04,$18,$a8,$c8,$21,$19,$58,$60,$16,$19,$28,$b8,$21,$19,$28,$d8\r\n   
    .byte $21,$19,$58,$c8,$21,$1a,$a8,$60,$16,$1a,$a8,$c8,$21,$1a,$d8,$a8\r\n   
    .byte $21,$1a,$d8,$b8,$21,$1b,$38,$c8,$21,$1b,$28,$d8,$21,$1b,$58,$e8\r\n   
    .byte $21,$1b,$98,$60,$16,$1b,$d8,$50,$16,$1d,$80,$80,$2f,$20,$01,$80\r\n   
    .byte $07,$24,$e0,$fe,$07,$25,$e0,$0c,$ff,$28,$08,$80,$08,$2e,$80,$80\r\n   
    .byte $30,$ff,$14,$10,$ff,$06,$15,$10,$ff,$06,$16,$10,$ff,$2c,$16,$90\r\n   
    .byte $58,$3f,$17,$78,$70,$16,$17,$f8,$70,$16,$18,$78,$50,$16,$18,$b8\r\n   
    .byte $50,$16,$19,$78,$70,$16,$19,$78,$d0,$05,$19,$f8,$70,$16,$1c,$68\r\n   
    .byte $98,$41,$1c,$b8,$98,$45,$1c,$d8,$30,$43,$1d,$80,$80,$3b,$1e,$80\r\n   
    .byte $80,$3b,$1f,$80,$80,$3b,$20,$80,$80,$3b,$22,$c8,$b8,$3f,$ff,$ff\r\n   
    .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff\r\n   
    .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff\r\n   
    .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff\r\n   
    .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff\r\n   
    .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff\r\n   
    .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff\r\n   
    .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff\r\n   
    .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff\r\n   
    .byte $ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff,$ff\r\n\r\nRunEndGameScene:
    ; at ab00\r\n    lda #$f8\r\n    sta ObjectPosY+0\r\n    lda #$00\r\n    sta
    ObjectLifeCycleCounter,\r\n    sta $bd\r\n    sta $be\r\n    sta $8b\r\n    lda
    #$14\r\n    sta CurrentBeginScreen\r\n    lda #$1E\r\n    sta CurrentEndScreen\r\n   
    lda #$30\r\n    sta $0c\r\n    ldx #$04\r\n\r\nLbl_ab1e:\r\n    jsr Lbl_c436\r\n   
    lda #$8b\r\n    sta ObjectSpriteNum,x\r\n    lda #$00\r\n    sta ObjectFlags,x\r\n   
    lda #$77\r\n    sta ObjectPosY,x\r\n    lda $0c\r\n    sta ObjectPosX,x\r\n   
    adc #$40\r\n    sta $0c\r\n    dex \r\n    bne Lbl_ab1e\r\n\r\nLbl_ab3c:\r\n   
    jsr Lbl_c442\r\n    lda $be\r\n    cmp #$01\r\n    bne Lbl_ab3c\r\n    lda #$03\r\n   
    sta $3c\r\n    lda #$00\r\n    sta $be\r\n    sta $59\r\n    lda #$bb\r\n   
    sta $5a\r\n    lda #$ae\r\n    sta $5b\r\n\r\nLbl_ab57:\r\n    ldy $59\r\n   
    lda ($5a),y\r\n    sta $5c\r\n    iny \r\n    bne Lbl_ab62\r\n    inc $5b\r\n\r\nLbl_ab62:\r\n   
    jsr Lbl_ae2b\r\n    jsr Lbl_c442\r\n    ldy $59\r\n    dec $5c\r\n    bne Lbl_ab62\r\n   
    lda #$02\r\n    sta $5c\r\n\r\nLbl_ab72:\r\n    lda $23\r\n    and #$07\r\n   
    bne Lbl_ab87\r\n    ldx $5c\r\n    lda Lbl_ab8d,x\r\n    sta $03d1\r\n    jsr
    PaletteSetupForBG\r\n    dec $5c\r\n    bmi Lbl_ab91\r\n\r\nLbl_ab87:\r\n   
    jsr Lbl_c442\r\n    jmp Lbl_ab72\r\n\r\nLbl_ab8d:\r\n    .byte $21,$11,$01,$0f\r\n\r\nLbl_ab91:\r\n   
    jsr Lbl_c442\r\n    lda $be\r\n    cmp #$08\r\n    bne Lbl_ab91\r\n    lda #$00\r\n   
    sta $be\r\n    sta $bd\r\n    lda #$00\r\n    sta $5c\r\n\r\nLbl_aba4:\r\n   
    lda $23\r\n    and #$07\r\n    bne Lbl_abbb\r\n    inc $5c\r\n    ldx $5c\r\n   
    lda Lbl_ab8d,x\r\n    sta $03d1\r\n    jsr PaletteSetupForBG\r\n    cpx #$03\r\n   
    beq Lbl_abc1\r\n\r\nLbl_abbb:\r\n    jsr Lbl_c442\r\n    jmp Lbl_aba4\r\n\r\nLbl_abc1:\r\n   
    lda #$05\r\n    sta $5c\r\n    lda #$22\r\n    sta RawPPUtransferAddress+0\r\n   
    lda #$42\r\n    sta RawPPUtransferAddress+1\r\n\r\nLbl_abcf:\r\n    ldx #$1c\r\n   
    stx $5e\r\n    lda #$04\r\n\r\nLbl_abd5:\r\n    sta RawPPUtransferAddress+1,x\r\n   
    dex \r\n    bne Lbl_abd5\r\n    jsr Lbl_c442\r\n    clc \r\n    lda RawPPUtransferAddress+1\r\n   
    adc #$40\r\n    sta RawPPUtransferAddress+1\r\n    lda RawPPUtransferAddress+0\r\n   
    adc #$00\r\n    sta RawPPUtransferAddress+0\r\n    dec $5c\r\n    bne Lbl_abcf\r\n   
    dec $3c\r\n    beq Lbl_abfa\r\n    jmp Lbl_ab57\r\n\r\nLbl_abfa:\r\n    lda $59\r\n   
    pha \r\n    lda #$04\r\n    sta ObjectPosY+0\r\n    jsr TeleportToStage_Bank06callback\r\n   
    pla \r\n    sta $59\r\n    inc $bf\r\n\r\nLbl_ac0a:\r\n    jsr Lbl_c442\r\n   
    lda ObjectUnknown440+0\r\n    bne Lbl_ac0a\r\n    sta ObjectFlags+0\r\n    lda
    #$06\r\n    sta ObjectSpriteNum+0\r\n    lda #$21\r\n    sta $03d1\r\n    jsr
    PaletteSetupForBG\r\n    lda #$fe\r\n    sta $3c\r\n\r\nLbl_ac26:\r\n    ldx
    #$04\r\n-\r\n    ; Move objects 1,2,3,4 to the right at speed $00.B0 (0.6875)\r\n   
    lda ObjectPosXfraction,x\r\n    adc #$b0\r\n    sta ObjectPosXfraction,x\r\n   
    lda ObjectPosX,x\r\n    adc #$00\r\n    sta ObjectPosX,x\r\n    dex \r\n    bne
    -\r\n    lda ObjectPosY+5\r\n    cmp #$f8\r\n    beq Lbl_ac45\r\n    jmp Lbl_add3\r\n\r\nLbl_ac45:\r\n   
    ldx $8b\r\n    lda Lbl_ae4b,x\r\n    pha \r\n    and #$0f\r\n    ora #$10\r\n   
    sta $05\r\n    pla \r\n    and #$f0\r\n    sta $04\r\n    sec \r\n    lda $1a\r\n   
    sbc $04\r\n    sta $0c\r\n    lda $1b\r\n    sbc $05\r\n    bcc Lbl_ac69\r\n   
    bne Lbl_ac97\r\n    lda $0c\r\n    bne Lbl_ac97\r\n\r\nLbl_ac69:\r\n    inx \r\n   
    lda Lbl_ae4b,x\r\n    cmp #$fc\r\n    bcc Lbl_ac74\r\n    jmp Lbl_ad63\r\n\r\nLbl_ac74:\r\n   
    sta $0c\r\n    inx \r\n    ldy Lbl_ae4b,x\r\n    inx \r\n\r\nLbl_ac7b:\r\n   
    lda Lbl_ae4b,x\r\n    sta BGPalettes,y\r\n    inx \r\n    iny \r\n    dec $0c\r\n   
    bne Lbl_ac7b\r\n    lda Lbl_ae4b,x\r\n    sta SpritePalettes\r\n    inx \r\n   
    stx $8b\r\n    jsr PaletteSetupForBG\r\n    lda #$20\r\n    sta WritePaletteParam\r\n\r\nLbl_ac97:\r\n   
    lda $c0\r\n    beq +\r\n    lda $93\r\n    sta $01\r\n    jsr SpawnObject_TypeIsFF\r\n   
    lda AutoSpawnObjectFFcounter\r\n    bne +\r\n    inc $93\r\n    inc $93\r\n   
    dec $c0\r\n+\r\n    lda #$00\r\n    sta $2f\r\n    sta ObjectXSpeed+0\r\n   
    lda #$b0\r\n    sta ObjectXSpeedFraction+0\r\n    jsr Lbl_c439\r\n    lda $1a\r\n   
    beq Lbl_acc9\r\n    cmp $3c\r\n    bne Lbl_acc6\r\n    jsr Lbl_ae0f\r\n\r\nLbl_acc6:\r\n   
    jmp Lbl_ac26\r\n\r\nLbl_acc9:\r\n    lda $1b\r\n    cmp #$14\r\n    beq Lbl_acd2\r\n   
    jmp Lbl_ac26\r\n\r\nLbl_acd2:\r\n    lda #$91\r\n    sta ObjectSpriteNum+0\r\n   
    lda #$04\r\n    sta ObjectYSpeed+0\r\n    lda #$df\r\n    sta ObjectYSpeedFraction+0\r\n   
    lda #$00\r\n    sta ObjectUnknown440+0\r\n\r\nLbl_ace6:\r\n    sec \r\n    lda
    ObjectPosYfraction+0\r\n    sbc ObjectYSpeedFraction+0\r\n    sta ObjectPosYfraction+0\r\n   
    lda ObjectPosY+0\r\n    sbc ObjectYSpeed+0\r\n    sta ObjectPosY+0\r\n    sec
    \r\n    lda ObjectYSpeedFraction+0\r\n    sbc #$40\r\n    sta ObjectYSpeedFraction+0\r\n   
    lda ObjectYSpeed+0\r\n    sbc #$00\r\n    sta ObjectYSpeed+0\r\n    bmi Lbl_ad12\r\n   
    jsr Lbl_c442\r\n    jmp Lbl_ace6\r\n\r\nLbl_ad12:\r\n    inc $06b1\r\n    lda
    #$02\r\n    sta $59\r\n    ldx #$00\r\n\r\nLbl_ad1b:\r\n    lda Lbl_b0ab,x\r\n   
    sta $5b\r\n    inx \r\n    lda Lbl_b0ab,x\r\n    sta RawPPUtransferAddress+0\r\n   
    inx \r\n    lda Lbl_b0ab,x\r\n    sta RawPPUtransferAddress+1\r\n    inx \r\n\r\nLbl_ad2f:\r\n   
    lda Lbl_b0ab,x\r\n    sta RawPPUtransferBuf\r\n    inc $5e\r\n    inx \r\n   
    stx $5a\r\n\r\nLbl_ad3a:\r\n    jsr Lbl_c442\r\n    lda $23\r\n    and #$07\r\n   
    bne Lbl_ad3a\r\n    inc RawPPUtransferAddress+1\r\n    ldx $5a\r\n    dec $5b\r\n   
    bne Lbl_ad2f\r\n    dec $59\r\n    bne Lbl_ad1b\r\n\r\nLbl_ad50:\r\n    jsr Lbl_c442\r\n   
    lda $14\r\n    and #$08\r\n    beq Lbl_ad50\r\n    ldx #$00\r\n    stx $bf\r\n   
    inx \r\n    stx $bb\r\n    jmp Lbl_c45e\r\n\r\nLbl_ad63:\r\n    inx \r\n    stx
    $8b\r\n    cmp #$fe\r\n    beq Lbl_ada9\r\n    cmp #$fd\r\n    beq Lbl_adaf\r\n   
    bcs Lbl_ad7b\r\n    lda #$0e\r\n    sta $93\r\n    lda #$03\r\n    sta $c0\r\n   
    jmp Lbl_ac97\r\n\r\nLbl_ad7b:\r\n    lda #$10\r\n    sta $0c\r\n    ldy #$8c\r\n   
    ldx #$05\r\n\r\nLbl_ad83:\r\n    tya \r\n    sta ObjectSpriteNum,x\r\n    lda
    #$80\r\n    sta ObjectPosX,x\r\n    lda $0c\r\n    sta ObjectPosY,x\r\n    clc
    \r\n    adc #$10\r\n    sta $0c\r\n    lda #$00\r\n    sta ObjectFlags,x\r\n   
    sta ObjectPosYfraction,x\r\n    sta ObjectPosXfraction,x\r\n    iny \r\n    inx
    \r\n    cpx #$08\r\n    bne Lbl_ad83\r\n    beq Lbl_add0\r\n\r\nLbl_ada9:\r\n   
    ldx #$10\r\n    lda #$8f\r\n    bne Lbl_adb3\r\n\r\nLbl_adaf:\r\n    ldx #$11\r\n   
    lda #$90\r\n\r\nLbl_adb3:\r\n    sta ObjectSpriteNum,x\r\n    lda $1a\r\n   
    sta ObjectPosX,x\r\n    lda #$64\r\n    sta ObjectPosY,x\r\n    lda #$40\r\n   
    sta ObjectFlags,x\r\n    lda #$00\r\n    sta ObjectUnknown440,x\r\n    sta ObjectFireDelay,x\r\n   
    sta ObjectLifeCycleCounter,x\r\n\r\nLbl_add0:\r\n    jmp Lbl_ac97\r\n\r\nLbl_add3:\r\n   
    ldx #$05\r\n\r\nLbl_add5:\r\n    lda ObjectPosY,x\r\n    cmp #$f8\r\n    beq
    Lbl_ae07\r\n    ; Move an object to the left at speed $00.B0\r\n    sec \r\n   
    lda ObjectPosXfraction,x\r\n    sbc #$b0\r\n    sta ObjectPosXfraction,x\r\n   
    lda ObjectPosX,x\r\n    sbc #$00\r\n    sta ObjectPosX,x\r\n    ; Move an object
    to the down at speed $00.0E\r\n    clc \r\n    lda ObjectPosYfraction,x\r\n   
    adc #$0e\r\n    sta ObjectPosYfraction,x\r\n    lda ObjectPosY,x\r\n    adc #$00\r\n   
    sta ObjectPosY,x\r\n    cmp #$58\r\n    bcc Lbl_ae07\r\n    lda #$f8\r\n    sta
    ObjectPosY,x\r\n\r\nLbl_ae07:\r\n    inx \r\n    cpx #$08\r\n    bne Lbl_add5\r\n   
    jmp Lbl_ac45\r\n\r\nLbl_ae0f:\r\n    dec $3c\r\n    dec $3c\r\n    cmp #$fc\r\n   
    bne Lbl_ae1b\r\n    lda #$fe\r\n    sta $3c\r\n\r\nLbl_ae1b:\r\n    ldy $59\r\n   
    lda ($5a),y\r\n    cmp #$ff\r\n    bne Lbl_ae2b\r\n    iny \r\n    bne Lbl_ae28\r\n   
    inc $5b\r\n\r\nLbl_ae28:\r\n    sty $59\r\n    rts \r\n\r\nLbl_ae2b:\r\n    lda
    ($5a),y\r\n    sta $5e\r\n    clc \r\n    adc #$02\r\n    sta $0c\r\n    ldx
    #$ff\r\n\r\nLbl_ae36:\r\n    iny \r\n    bne Lbl_ae3b\r\n    inc $5b\r\n\r\nLbl_ae3b:\r\n   
    inx \r\n    cpx $0c\r\n    beq Lbl_ae48\r\n    lda ($5a),y\r\n    sta RawPPUtransferAddress+0,x\r\n   
    jmp Lbl_ae36\r\n\r\nLbl_ae48:\r\n    sty $59\r\n    rts \r\n\r\nLbl_ae4b:\r\n   
    .byte $8b,$0b,$05,$28,$18,$26,$0f,$18,$0f,$bc,$0f,$26,$16,$06,$15,$0b\r\n   
    .byte $0a,$06,$17,$25,$0f,$17,$0f,$3c,$0f,$25,$15,$05,$15,$fa,$ff,$ea\r\n   
    .byte $06,$11,$0f,$0f,$0f,$0f,$0f,$0f,$15,$da,$fc,$99,$06,$11,$38,$26\r\n   
    .byte $0f,$0f,$30,$38,$15,$89,$01,$0b,$37,$05,$88,$01,$00,$06,$06,$87\r\n   
    .byte $07,$05,$27,$07,$0f,$0f,$06,$0f,$37,$06,$47,$07,$05,$16,$06,$0f\r\n   
    .byte $0f,$07,$0f,$27,$06,$07,$0b,$05,$10,$0f,$0f,$0f,$00,$0f,$02,$0f\r\n   
    .byte $01,$00,$0f,$0b,$45,$03,$0d,$11,$0f,$0f,$0b,$44,$fe,$24,$fd,$00\r\n   
    .byte $05,$11,$22,$48,$6d,$65,$67,$61,$6d,$61,$6e,$04,$68,$61,$73,$04\r\n   
    .byte $65,$6e,$64,$65,$64,$13,$22,$87,$74,$68,$65,$04,$65,$76,$69,$6c\r\n   
    .byte $04,$64,$6f,$6d,$69,$6e,$61,$74,$69,$6f,$6e,$09,$22,$cc,$6f,$66\r\n   
    .byte $04,$64,$7b,$77,$69,$6c,$79,$0c,$23,$0a,$61,$6e,$64,$04,$72,$65\r\n   
    .byte $73,$74,$6f,$72,$65,$64,$12,$23,$48,$74,$68,$65,$04,$77,$6f,$72\r\n   
    .byte $6c,$64,$04,$74,$6f,$04,$70,$65,$61,$63,$65,$04,$18,$22,$44,$68\r\n   
    .byte $6f,$77,$65,$76,$65,$72,$7d,$74,$68,$65,$04,$6e,$65,$76,$65,$72\r\n   
    .byte $04,$65,$6e,$64,$69,$6e,$67,$10,$22,$88,$62,$61,$74,$74,$6c,$65\r\n   
    .byte $04,$63,$6f,$6e,$74,$69,$6e,$75,$65,$73,$1c,$22,$c2,$75,$6e,$74\r\n   
    .byte $69,$6c,$04,$61,$6c,$6c,$04,$64,$65,$73,$74,$72,$75,$63,$74,$69\r\n   
    .byte $76,$65,$04,$66,$6f,$72,$63,$65,$73,$0d,$23,$0a,$61,$72,$65,$04\r\n   
    .byte $64,$65,$66,$65,$61,$74,$65,$64,$7c,$02,$0e,$22,$89,$66,$69,$67\r\n   
    .byte $68,$74,$7d,$6d,$65,$67,$61,$6d,$61,$6e,$7f,$16,$22,$c5,$66,$6f\r\n   
    .byte $72,$04,$65,$76,$65,$72,$6c,$61,$73,$74,$69,$6e,$67,$04,$70,$65\r\n   
    .byte $61,$63,$65,$7f,$ff,$05,$26,$8e,$73,$74,$61,$66,$66,$07,$22,$8d\r\n   
    .byte $70,$6c,$61,$6e,$6e,$65,$72,$03,$22,$ef,$61,$7c,$6b,$12,$26,$87\r\n   
    .byte $63,$68,$61,$72,$61,$63,$74,$65,$72,$04,$64,$65,$73,$69,$67,$6e\r\n   
    .byte $65,$72,$09,$26,$ec,$79,$61,$73,$75,$6b,$69,$63,$68,$69,$12,$22\r\n   
    .byte $87,$63,$68,$61,$72,$61,$63,$74,$65,$72,$04,$64,$65,$73,$69,$67\r\n   
    .byte $6e,$65,$72,$07,$22,$ed,$74,$6f,$6d,$04,$70,$6f,$6e,$ff,$09,$26\r\n   
    .byte $ec,$69,$6e,$61,$66,$6b,$69,$6e,$67,$04,$ff,$07,$22,$ed,$04,$04\r\n   
    .byte $61,$7c,$6b,$04,$04,$12,$26,$87,$04,$04,$04,$04,$70,$72,$6f,$67\r\n   
    .byte $72,$61,$6d,$6d,$65,$72,$04,$04,$04,$04,$09,$26,$ec,$04,$68,$7c\r\n   
    .byte $6d,$7c,$64,$7c,$04,$04,$12,$22,$87,$04,$73,$6f,$75,$6e,$64,$04\r\n   
    .byte $70,$72,$6f,$67,$72,$61,$6d,$6d,$65,$72,$04,$13,$22,$e7,$63,$68\r\n   
    .byte $61,$6e,$63,$68,$61,$63,$6f,$72,$69,$6e,$04,$6d,$61,$6e,$61,$6d\r\n   
    .byte $69,$10,$26,$88,$73,$6f,$75,$6e,$64,$04,$70,$72,$6f,$67,$72,$61\r\n   
    .byte $6d,$6d,$65,$72,$10,$26,$e8,$79,$75,$75,$6b,$69,$63,$68,$61,$6e\r\n   
    .byte $7e,$73,$04,$70,$61,$70,$61,$10,$22,$88,$04,$04,$04,$04,$04,$04\r\n   
    .byte $04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$13,$22,$e7,$04,$04,$04\r\n   
    .byte $04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04,$04\r\n\r\nLbl_b0ab:\r\n   
    .byte $0c,$22,$8a,$70,$72,$65,$73,$65,$6e,$74,$65,$64,$04,$62,$79,$0e\r\n   
    .byte $22,$ea,$63,$61,$70,$63,$6f,$6d,$04,$75,$7c,$73,$7c,$61,$7c,$7d\r\n\r\nWeaponSelectDialog
    ;at B0CB\r\n    clc \r\n    lda ScrollPosX\r\n    adc #$80\r\n    sta $57\r\n   
    lda ScrollPosScreen\r\n    adc #$00\r\n    sta $58\r\n    sta $05\r\n    lda
    $57\r\n    and #$e0\r\n    ora #$04\r\n    sta $57\r\n    sta $04\r\n    lda
    FrameCounter\r\n    pha \r\n    lda GutsmanStompCounter\r\n    pha \r\n    lda
    UseTempScrollX\r\n    pha \r\n    lda MegamanWalkTimer\r\n    pha \r\n    lda
    MegamanStallTimer\r\n    pha \r\n    lda $b1\r\n    pha \r\n    ldy #$04\r\n   
    ldx #$3f\r\n    jsr HideSprites\r\n    lda #$f8\r\n    sta ObjectPosY+5\r\n   
    lda #$00\r\n    jsr ChangeMegamanPalette\r\n    lda #$22\r\n    jsr IssueSound 
    ;play pause sound\r\n    jsr NextFrame\r\n    lda #$0e\r\n    sta RawPPUtransferAddress+0\r\n   
    lda #$00\r\n    sta RawPPUtransferAddress+1\r\n    sta GutsmanStompCounter\r\n   
    sta $5b\r\n    sta MiscCounter1\r\n    sta UseTempScrollX\r\n    sta MegamanWalkTimer\r\n   
    sta MegamanStallTimer\r\n    sta $b1\r\n    lda WeaponsOwned\r\n    sta $5a\r\n.(\r\nDrawWeaponSelectMenuLineLoop\r\n   
    ldx #$00\r\nDrawWeaponSelectMenuColumnLoop\r\n    stx $59\r\n    lda #$00\r\n   
    sta $0d\r\n    jsr Lbl_ce9a\r\n    ldx #$12\r\n    jsr Adjust32x32BlockAddress\r\n   
    ldy CurrentStage\r\n    lda Lbl_b4e4,y\r\n    sta TSAPPUtransfer0NTdata-2,x\r\n   
    lda #$01\r\n    sta $1c\r\n    jsr Lbl_b3d1\r\n    jsr NextFrame\r\n    lda RawPPUtransferAddress+1\r\n   
    clc \r\n    adc #$10\r\n    sta RawPPUtransferAddress+1\r\n    ldx $59\r\n   
    inx \r\n    cpx #$03\r\n    beq +\r\n    clc \r\n    lda $04\r\n    adc #$20\r\n   
    sta $04\r\n    lda $05\r\n    adc #$00\r\n    sta $05\r\n    jmp DrawWeaponSelectMenuColumnLoop\r\n+\r\n   
    inc MiscCounter1\r\n    lda MiscCounter1\r\n    cmp #$05\r\n    beq Lbl_b183\r\n   
    asl a \r\n    asl a \r\n    clc \r\n    adc $57\r\n    sta $04\r\n    lda $58\r\n   
    sta $05\r\n    jmp DrawWeaponSelectMenuLineLoop\r\n.)\r\n\r\nLbl_b183:\r\n   
    lda #$20\r\n    sta $0f\r\n    ldx #$01\r\n    stx $0c\r\n\r\nLbl_b18b:\r\n   
    lda ScrollPosX\r\n    and #$1f\r\n    sta $0d\r\n    lda #$9b\r\n    sec \r\n   
    sbc $0d\r\n    sta $0d\r\n    ldy WeaponSelectTab2,x\r\n    lda WeaponsOwned\r\n   
    and WeaponsOwnedMask,x\r\n    beq Lbl_b1f4\r\n    txa \r\n    asl a \r\n    tax
    \r\n    lda Lbl_b4ef,x\r\n    sta $0e\r\n    lda Meters,y\r\n    pha \r\n    
    lsr a \r\n     lsr a \r\n     sta $10\r\n    pla \r\n    and #$03\r\n    sta
    $11\r\n    sec \r\n    lda #$ec\r\n    sbc $11\r\n    sta $11\r\n    ldx #$00\r\n\r\nLbl_b1c0:\r\n   
    cpx $10\r\n    bcs Lbl_b1c8\r\n    lda #$e8\r\n    bne Lbl_b1d0\r\n\r\nLbl_b1c8:\r\n   
    bne Lbl_b1ce\r\n    lda $11\r\n    bne Lbl_b1d0\r\n\r\nLbl_b1ce:\r\n    lda #$ec\r\n\r\nLbl_b1d0:\r\n   
    ldy $0F : sta CurrentSpriteData+1,y\r\n    lda $0E : sta CurrentSpriteData+0,y\r\n   
    lda #1  : sta CurrentSpriteData+2,y\r\n    lda $0D : sta CurrentSpriteData+3,y\r\n   
    iny \r\n    iny \r\n    iny \r\n    iny \r\n    sty $0f\r\n    clc \r\n    adc
    #$08\r\n    sta $0d\r\n    inx \r\n    cpx #$07\r\n    bne Lbl_b1c0\r\n\r\nLbl_b1f4:\r\n   
    inc $0c\r\n    ldx $0c\r\n    cpx #$08\r\n    bne Lbl_b18b\r\n    lda ScrollPosX\r\n   
    and #$1f\r\n    sta $0c\r\n    sec \r\n    lda #$a8\r\n    sbc $0c\r\n    sta
    $0c\r\n    ldx #$17\r\n\r\nLbl_b20b:\r\n    lda Lbl_b52f,x\r\n    sta $02e8,x\r\n   
    txa \r\n    and #$03\r\n    cmp #$03\r\n    bne Lbl_b221\r\n    clc \r\n    lda
    $0c\r\n    adc $02e8,x\r\n    sta $02e8,x\r\n\r\nLbl_b221:\r\n    dex \r\n   
    bpl Lbl_b20b\r\n    ldx $a6\r\n    ldy #$00\r\n    lda #$0a\r\n    jsr EnemyCalculateJumpCurveToHitMegaman\r\n   
    lda $05\r\n    pha \r\n     ora #$f0\r\n     sta $02f9\r\n    pla \r\n    asl
    a \r\n    sta $05\r\n    asl a \r\n    asl a \r\n    adc $05\r\n    sta $05\r\n   
    sec \r\n    lda $a6\r\n    sbc $05\r\n    ora #$f0\r\n    sta $02fd\r\n    ldy
    WeaponSelect\r\n    lda WeaponSelectTab,y\r\n    sta WeaponSelect\r\n\r\nLbl_b250:\r\n   
    ldx #$1c\r\n    lda #$00\r\n\r\nLbl_b254:\r\n    sta CurrentSpriteData+2,x\r\n   
    dex \r\n    dex \r\n    dex \r\n    dex \r\n    bpl Lbl_b254\r\n    lda WeaponSelect\r\n   
    sec \r\n    sbc #$01\r\n    and #$07\r\n    asl a \r\n    asl a \r\n    tax \r\n   
    lda #$01\r\n    sta CurrentSpriteData+2,x\r\n\r\nLbl_b26c:\r\n    lda FrameCounter\r\n   
    and #$07\r\n    bne Lbl_b279\r\n    lda FrameCounter\r\n    and #$08\r\n    jsr
    Lbl_b3a7\r\n\r\nLbl_b279:\r\n    jsr NextFrame\r\n    lda JoyD0\r\n    and #$38\r\n   
    beq Lbl_b26c\r\n    pha \r\n     lda #$01\r\n     jsr Lbl_b3a7\r\n    pla \r\n   
    and #$30\r\n    beq Lbl_b2bf\r\n    and #$10\r\n    beq Lbl_b2a5\r\n\r\nLbl_b291:\r\n   
    dec WeaponSelect\r\n    lda WeaponSelect\r\n    and #$07\r\n    sta WeaponSelect\r\n   
    beq Lbl_b2b7\r\n    tay \r\n    lda WeaponsOwned\r\n    and WeaponsOwnedMask,y\r\n   
    beq Lbl_b291\r\n    bne Lbl_b2b7\r\n\r\nLbl_b2a5:\r\n    inc WeaponSelect\r\n   
    lda WeaponSelect\r\n    and #$07\r\n    sta WeaponSelect\r\n    beq Lbl_b2b7\r\n   
    tay \r\n    lda WeaponsOwned\r\n    and WeaponsOwnedMask,y\r\n    beq Lbl_b2a5\r\n\r\nLbl_b2b7:\r\n   
    lda #$1F\r\n    jsr IssueSound  ;play menu move sound\r\n    jmp Lbl_b250\r\n\r\nLbl_b2bf:\r\n   
    ldx WeaponSelect\r\n    lda WeaponSelectTab2,x\r\n    sta WeaponSelect\r\n   
    ldy #$04\r\n    ldx #$3f\r\n    jsr HideSprites\r\n    lda #$00\r\n    sta $2f\r\n   
    ldx WeaponSelect\r\n    cpx #$06\r\n    bne Lbl_b2f7\r\n    ldx CurrentStage\r\n   
    lda Lbl_b2e1,x\r\n    ldy Lbl_b2ec,x\r\n    bne Lbl_b2fc\r\n\r\nLbl_b2e1: ;indexed
    by current stage\r\n    .byte $96,$96,$96,$96,$b6,$be,$9e,$96,$96,$9e,$96\r\n\r\nLbl_b2ec:
    ;indexed by current stage\r\n    .byte $01,$01,$01,$01,$01,$01,$03,$01,$01,$03,$01\r\n\r\nLbl_b2f7:\r\n   
    ldy #$02\r\n    lda Lbl_b39f,x\r\n\r\nLbl_b2fc:\r\n    sta $5a\r\n    sty $5b\r\n   
    lda $57\r\n    sta $04\r\n    lda $58\r\n    sta $05\r\n    lda #$0e\r\n    sta
    RawPPUtransferAddress+0\r\n    lda #$00\r\n    sta RawPPUtransferAddress+1\r\n   
    sta MiscCounter1\r\n\r\nLbl_b314:\r\n    ldx #$00\r\n\r\nLbl_b316:\r\n    stx
    $59\r\n    lda #$00\r\n    sta $0d\r\n    sta $1c\r\n    jsr DrawBlockFromActiveLevelMap_Bank06callback\r\n   
    lda $5a\r\n    sta $07\r\n    lda #$00\r\n    sta $06\r\n    lda $5b\r\n    ldy
    RawPPUtransferAddress+1\r\n    jsr Lbl_c400\r\n    lda #$10\r\n    sta $5e\r\n   
    jsr NextFrame\r\n    lda RawPPUtransferAddress+1\r\n    clc \r\n    adc #$10\r\n   
    sta RawPPUtransferAddress+1\r\n    clc \r\n    lda $04\r\n    adc #$20\r\n   
    sta $04\r\n    lda $05\r\n    adc #$00\r\n    sta $05\r\n    ldx $59\r\n    inx
    \r\n    cpx #$03\r\n    bne Lbl_b316\r\n    inc MiscCounter1\r\n    lda MiscCounter1\r\n   
    asl a \r\n    asl a \r\n    clc \r\n    adc $57\r\n    sta $04\r\n    lda $58\r\n   
    sta $05\r\n    lda MiscCounter1\r\n    cmp #$05\r\n    bne Lbl_b314\r\n    lda
    $5a\r\n    sta $07\r\n    lda #$00\r\n    sta $06\r\n    lda $5b\r\n    ldy RawPPUtransferAddress+1\r\n   
    jsr Lbl_c400\r\n    lda #$10\r\n    sta $5e\r\n    lda WeaponSelect\r\n    jsr
    ChangeMegamanPalette\r\n    jsr NextFrame\r\n    lda #$ff\r\n    sta GutsmanWeaponTargetActive\r\n   
    pla \r\n    sta $b1\r\n    pla \r\n    sta MegamanStallTimer\r\n    pla \r\n   
    sta MegamanWalkTimer\r\n    pla \r\n    sta UseTempScrollX\r\n    pla \r\n   
    sta GutsmanStompCounter\r\n    pla \r\n    sta FrameCounter\r\n    jmp Lbl_c3e3\r\n\r\nLbl_b39f:\r\n   
    .byte $91,$91,$91,$92,$90,$94,$95,$91\r\n\r\nLbl_b3a7:\r\n    php \r\n    lda
    WeaponSelect\r\n    tax \r\n    sec \r\n    sbc #$01\r\n    and #$07\r\n    asl
    a \r\n    asl a \r\n    tay \r\n    lda #$f8\r\n    plp \r\n    beq Lbl_b3bb\r\n   
    lda Lbl_b527,x\r\n\r\nLbl_b3bb:\r\n    sta CurrentSpriteData+0,y\r\n    rts \r\n\r\nChangeMegamanPalette:
    ;At B3BF\r\n    asl a\r\n    tax\r\n    lda MegamanPalette+0,x\r\n    sta $03E1\r\n   
    lda MegamanPalette+1,x\r\n    sta $03E2\r\n    jsr PaletteSetupForSprites\r\n   
    rts \r\n\r\nLbl_b3d1:\r\n    ldx #$00\r\n\r\nLbl_b3d3:\r\n    ldy $5b\r\n   
    lda Lbl_b4c6,y\r\n    asl a \r\n    asl a \r\n    asl a \r\n    tay \r\n\r\nLbl_b3dc:\r\n   
    lda Lbl_b44e,y\r\n    sta TSAPPUtransfer0NTdata,x\r\n    iny \r\n    inx \r\n   
    txa \r\n    and #$07\r\n    bne Lbl_b3dc\r\n    inc $5b\r\n    lda $5b\r\n   
    and #$01\r\n    bne Lbl_b3d3\r\n    lda #$00\r\n    sta $06\r\n    lda #$ac\r\n   
    sta $07\r\n    lda #$02\r\n    ldx #$00\r\n    ldy RawPPUtransferAddress+1\r\n   
    jsr Lbl_c400\r\n    lda #$10\r\n    sta $5e\r\n    lda #$01\r\n    sta $0c\r\n   
    lda MiscCounter1\r\n    asl a \r\n    sta $0d\r\n\r\nLbl_b410:\r\n    lda $0d\r\n   
    tax \r\n    lda WeaponsOwned\r\n    ora #$01\r\n    and WeaponsOwnedMask,x\r\n   
    beq Lbl_b445\r\n    lda $0d\r\n    asl a \r\n    tay \r\n    lda Lbl_b503,x\r\n   
    tax \r\n    lda Lbl_b4ef,y\r\n    sta CurrentSpriteData+0,x\r\n    lda Lbl_b4f0,y\r\n   
    sta CurrentSpriteData+1,x\r\n    lda #$20\r\n    sta CurrentSpriteData+2,x\r\n   
    lda ScrollPosX\r\n    and #$1f\r\n    sta CurrentSpriteData+3,x\r\n    lda #$8e\r\n   
    sec \r\n    sbc CurrentSpriteData+3,x\r\n    sta CurrentSpriteData+3,x\r\n\r\nLbl_b445:\r\n   
    inc $0d\r\n    dec $0c\r\n    bpl Lbl_b410\r\n    ldx #$12\r\n    rts \r\n\r\nLbl_b44e:\r\n   
    .byte $60,$60,$60,$60,$60,$61,$61,$61,$60,$61,$62,$63,$60,$61,$64,$65\r\n   
    .byte $60,$61,$61,$61,$60,$61,$61,$61,$60,$61,$61,$61,$60,$60,$60,$60\r\n   
    .byte $60,$60,$60,$60,$61,$61,$61,$61,$61,$61,$61,$61,$61,$61,$61,$61\r\n   
    .byte $61,$61,$61,$61,$60,$60,$60,$60,$60,$60,$60,$60,$61,$61,$61,$60\r\n   
    .byte $62,$63,$61,$60,$64,$65,$61,$60,$61,$61,$61,$60,$61,$61,$61,$60\r\n   
    .byte $61,$61,$61,$60,$61,$6e,$61,$60,$61,$61,$61,$60,$60,$60,$60,$60\r\n   
    .byte $62,$63,$61,$61,$64,$65,$61,$61,$61,$61,$62,$63,$61,$61,$64,$65\r\n   
    .byte $62,$63,$62,$63,$64,$65,$64,$65\r\n\r\nLbl_b4c6:\r\n    .byte $00,$02,$02,$02,$02,$03,$04,$05,$05,$05,$05,$06,$04,$05,$05,$05\r\n   
    .byte $05,$06,$04,$05,$05,$05,$05,$06,$07,$09,$09,$0a,$09,$0b\r\n\r\nLbl_b4e4:
    ;indexed by \"current stage\"\r\n    .byte $aa,$ff,$aa,$00,$00,$00,$00,$aa,$00,$55,$55\r\n\r\nLbl_b4ef:\r\n   
    .byte $f8\r\n\r\nLbl_b4f0:\r\n    .byte $e0,$33,$e0,$43,$e1,$53,$e2,$63,$e3,$73,$e4,$83,$e5,$93,$e6,$a3\r\n   
    .byte $e7,$a3,$e7\r\n\r\nLbl_b503:\r\n    .byte $00,$00,$04,$08,$0c,$10,$14,$18,$1c,$1c\r\n\r\nWeaponSelectTab:
    ;at B50D\r\n    .byte 0,5,4,1,6,2,3,7 ;See also: WeaponsOwnedTab\r\n\r\nWeaponsOwnedMask:
    ; at B515\r\n    .byte $ff,$02,$04,$08,$10,$20,$40,$80,$ff,$ff ; \r\n\r\nWeaponSelectTab2:
    ;at B51F\r\n    .byte $00,$03,$05,$06,$02,$01,$04,$07\r\n\r\nLbl_b527:\r\n   
    .byte $a3,$33,$43,$53,$63,$73,$83,$93\r\n\r\nLbl_b52f:\r\n    .byte $a0,$ed,$00,$00,$a0,$ed,$40,$08,$a8,$ee,$01,$00,$a8,$ee,$41,$08\r\n   
    .byte $a8,$f0,$01,$1c,$a8,$f0,$01,$24\r\n\r\nStageSelectionScreenMain: ;at $B547
    (bank 6)\r\n    lda #$02\r\n    sta $0c\r\n    lda #$20  ;addr $2000\r\n    sta
    $2006\r\n    lda #$00\r\n    sta $2006\r\n--- ;   at $B555\r\n    lda #$02\r\n   
    sta $0d\r\n    lda #$20\r\n    ldy #$0f\r\n--  ;   at $B55D\r\n    ldx #$40\r\n-  
    ;   at $B55F\r\n    sta $2007\r\n    dex \r\n    bne -\r\n    dey \r\n    bne
    --\r\n    lda #$00\r\n    ldy #$01\r\n    dec $0d\r\n    bne --\r\n    dec $0c\r\n   
    bne ---\r\n    lda #$27\r\n    sta $2006 ;addr $27D0\r\n    lda #$d0\r\n    sta
    $2006\r\n    lda #$50\r\n    ldx #$08\r\n-   ;   at $B582\r\n    sta $2007\r\n   
    dex \r\n    bne -\r\n    lda #$55\r\n    ldx #$08\r\n-   ;   at $B58C\r\n   
    sta $2007\r\n    dex \r\n    bne -\r\n    lda #$05\r\n    ldx #$08\r\n-   ;  
    at $B596\r\n    sta $2007\r\n    dex \r\n    bne -\r\n    lda #$00\r\n    sta
    $0c\r\n    sta $0d\r\n\r\nLbl_b5a2:\r\n    asl a \r\n    tax \r\n    lda Lbl_be87,x\r\n   
    sta $04\r\n    lda Lbl_be88,x\r\n    sta $05\r\n    ldx $0c\r\n    cpx #$06\r\n   
    bne Lbl_b5b8\r\n    lda #$00\r\n    beq Lbl_b5bd\r\n\r\nLbl_b5b8:\r\n    lda
    WeaponsOwned\r\n    and Lbl_bfcc,x\r\n\r\nLbl_b5bd:\r\n    sta $0e\r\n    ldy
    #$00\r\n\r\nLbl_b5c1:\r\n    lda $05\r\n    sta $2006\r\n    lda $04\r\n    sta
    $2006\r\n    ldx #$06\r\n\r\nLbl_b5cd:\r\n    lda $0c\r\n    cmp #$05\r\n   
    bcs Lbl_b5d8\r\n    lda Lbl_be1b,y\r\n    bne Lbl_b5e2\r\n\r\nLbl_b5d8:\r\n   
    bne Lbl_b5df\r\n    lda Lbl_be3f,y\r\n    bne Lbl_b5e2\r\n\r\nLbl_b5df:\r\n   
    lda Lbl_be63,y\r\n\r\nLbl_b5e2:\r\n    cmp #$21\r\n    bne Lbl_b5f0\r\n    lda
    $0e\r\n    beq Lbl_b5ee\r\n    lda #$00\r\n    beq Lbl_b5f0\r\n\r\nLbl_b5ee:\r\n   
    lda #$21\r\n\r\nLbl_b5f0:\r\n    sta $2007\r\n    iny \r\n    dex \r\n    bne
    Lbl_b5cd\r\n    clc \r\n    lda $04\r\n    adc #$20\r\n    sta $04\r\n    lda
    $05\r\n    adc #$00\r\n    sta $05\r\n    cpy #$24\r\n    bne Lbl_b5c1\r\n   
    sta $2006\r\n    lda $04\r\n    sta $2006\r\n    ldx $0d\r\n    ldy #$07\r\n\r\nLbl_b614:\r\n   
    lda Lbl_bf6f,x\r\n    sta $2007\r\n    inx \r\n    dey \r\n    bne Lbl_b614\r\n   
    stx $0d\r\n    ldx $0c\r\n    lda Lbl_be95,x\r\n    clc \r\n    adc #$08\r\n   
    ldx #$23\r\n    stx $2006\r\n    sta $2006\r\n    lda #$88\r\n    sta $2007\r\n   
    lda #$22\r\n    sta $2007\r\n    inc $0c\r\n    lda WeaponsOwned\r\n    and #$7e\r\n   
    cmp #$7e\r\n    bne Lbl_b64c\r\n    lda $0c\r\n    cmp #$07\r\n    beq Lbl_b655\r\n   
    bne Lbl_b652\r\n\r\nLbl_b64c:\r\n    lda $0c\r\n    cmp #$06\r\n    beq Lbl_b655\r\n\r\nLbl_b652:\r\n   
    jmp Lbl_b5a2\r\n\r\nLbl_b655:\r\n    stx $2006\r\n    lda #$cc\r\n    sta $2006\r\n   
    sta $2007\r\n    lda #$33\r\n    sta $2007\r\n    lda WeaponsOwned\r\n    and
    #$7e\r\n    cmp #$7e\r\n    beq Lbl_b68e\r\n    ldy #$04\r\n    ldx #$00\r\n\r\nLbl_b671:\r\n   
    lda Lbl_bfac,x\r\n    sta $2006\r\n    inx \r\n    lda Lbl_bfac,x\r\n    sta
    $2006\r\n    inx \r\n\r\nLbl_b67f:\r\n    lda Lbl_bfac,x\r\n    sta $2007\r\n   
    inx \r\n    txa \r\n    and #$07\r\n    bne Lbl_b67f\r\n    dey \r\n    bne Lbl_b671\r\n\r\nLbl_b68e:\r\n   
    lda #(Lbl_bdab).lo\r\n    sta $35\r\n    lda #(Lbl_bdab).hi\r\n    sta $36\r\n   
    lda #$20\r\n    jsr WritePalette\r\n    lda WeaponsOwned\r\n    and #$08\r\n   
    beq Lbl_b6ae\r\n    lda #(Lbl_bddb).lo\r\n    sta $35\r\n    lda #(Lbl_bddb).hi\r\n   
    sta $36\r\n    lda #$10\r\n    jsr WritePalette\r\n\r\nLbl_b6ae:\r\n    ldy #$00\r\n   
    ldx #$40\r\n    jsr HideSprites\r\n    ldx #$04\r\n    lda #$00\r\n    sta CurrentStage\r\n\r\nLbl_b6bb:\r\n   
    asl a \r\n    asl a \r\n    tay \r\n    stx $0c\r\n    ldx #$00\r\n- ;at b6c2\r\n   
    lda Lbl_beca+0,y\r\n    sta $0d,x\r\n    inx \r\n    iny \r\n    cpx #$04\r\n   
    bne -\r\n    ldx $0c\r\n    jsr Lbl_bc5a\r\n    inc CurrentStage\r\n    lda CurrentStage\r\n   
    cmp #$06\r\n    bne Lbl_b6bb\r\n    lda #$01\r\n    jsr IssueSound  ;play stage
    select music\r\n    lda #$00\r\n    sta ScrollPosScreen\r\n    sta ScrollPosX\r\n   
    lda $ff\r\n    ora #$80\r\n    sta $ff\r\n    sta $2000\r\n    lda #$00\r\n   
    sta CurrentStage\r\n    sta FrameCounter\r\n    tay \r\n\r\nLbl_b6f5:\r\n   
    tya \r\n    asl a \r\n    asl a \r\n    tax \r\n    lda #$23\r\n    sta TSAPPUtransfer0AttrAddress+0,x\r\n   
    lda Lbl_be9c,y\r\n    sta TSAPPUtransfer0AttrData,x\r\n    iny \r\n    cpy #$0a\r\n   
    bne Lbl_b6f5\r\n    ldx #$00\r\n    ldy #$00\r\n\r\nLbl_b70d:\r\n    lda Lbl_bea6,y\r\n   
    sta $032b,x\r\n    inx \r\n    inx \r\n    inx \r\n    inx \r\n    iny \r\n   
    cpy #$04\r\n    bne Lbl_b70d\r\n    lda #$55\r\n    jsr Lbl_bb02\r\n\r\nLbl_b721:\r\n   
    jsr NextFrame\r\n    lda JoyD0\r\n    and #$c8\r\n    beq Lbl_b75e\r\n    and
    #$c0\r\n    beq Lbl_b775\r\n    ldx CurrentStage\r\n    pha \r\n    lda #$00\r\n   
    jsr Lbl_bb02\r\n    lda CurrentStage\r\n    asl a \r\n    tay \r\n    pla \r\n\r\nLbl_b73b:\r\n   
    asl a \r\n    bcs Lbl_b741\r\n    iny \r\n    bne Lbl_b73b\r\n\r\nLbl_b741:\r\n   
    lda WeaponsOwned\r\n    and #$7e\r\n    cmp #$7e\r\n    bne Lbl_b74e\r\n    clc
    \r\n    tya \r\n    adc #$0c\r\n    tay \r\n\r\nLbl_b74e:\r\n    lda Lbl_beb0,y\r\n   
    sta CurrentStage\r\n    lda #$ff\r\n    sta FrameCounter\r\n    lda #$1f\r\n   
    jsr IssueSound  ; play menu move sound\r\n    bne Lbl_b721\r\n\r\nLbl_b75e:\r\n   
    ldy #$00\r\n    lda FrameCounter\r\n    and #$0f\r\n    bne Lbl_b772\r\n    lda
    FrameCounter\r\n    and #$10\r\n    bne Lbl_b76e\r\n    ldy #$55\r\n\r\nLbl_b76e:\r\n   
    tya \r\n    jsr Lbl_bb02\r\n\r\nLbl_b772:\r\n    jmp Lbl_b721\r\n\r\nLbl_b775:
    ;boss selected!\r\n    lda #$1c\r\n    jsr IssueSound  ; play select boss effect\r\n   
    lda #$02\r\n    jsr IssueSound  ; play boss selected music\r\n    inc ScrollPosScreen\r\n   
    ldy #$00    ; delay = 0.\r\n    sty MiscCounter1\r\n    lda #$48\r\n    sta $37\r\n   
    lda #$cb\r\n    sta $38\r\n    lda #$bd\r\n    sta $39\r\n    lda #$0b\r\n   
    sta $3a\r\n    lda #$be\r\n    sta $3b\r\n    lda #$10\r\n    sta WritePaletteParam\r\n   
    lda CurrentStage\r\n    asl a \r\n    asl a \r\n    tax \r\n    lda Lbl_bee6+0,x\r\n   
    sta ObjectYSpeed+0\r\n    lda Lbl_bee6+1,x\r\n    sta ObjectYSpeedFraction+0\r\n   
    lda Lbl_bee6+2,x\r\n    sta ObjectPosX+1\r\n    lda Lbl_bee6+3,x\r\n    sta ObjectPosXfraction+1\r\n   
    lda Lbl_beca+1,x\r\n    sta ObjectPosY+0\r\n    sty ObjectPosYfraction+0\r\n   
    lda Lbl_beca+2,x\r\n    sta ObjectPosX+0\r\n    sty ObjectPosXfraction+0\r\n   
    lda Lbl_beca+3,x\r\n    sta ObjectFlags+0\r\n    ldx CurrentStage\r\n    lda
    Lbl_bf02,x\r\n    sta ObjectSpriteNum+0\r\n\r\nLbl_b7da:\r\n    lda CurrentStage\r\n   
    cmp #$05\r\n    bne Lbl_b7f3    ;Gutsman?\r\n    lda MiscCounter1        ;counter
    for various purposes\r\n    cmp #$08\r\n    bcs Lbl_b7ee\r\n    ldy #$00\r\n   
    jsr Lbl_bc39\r\n    jmp Lbl_b7f6\r\n\r\nLbl_b7ee:\r\n    lda #$53\r\n    sta
    ObjectSpriteNum+0\r\n\r\nLbl_b7f3:\r\n    jsr Lbl_bc00    ;Iteration: moves the
    boss to its proper location\r\n\r\nLbl_b7f6:\r\n    jsr NextFrame\r\n    inc
    MiscCounter1\r\n    lda MiscCounter1\r\n    cmp #$40\r\n    bne Lbl_b7da\r\n   
    ; Boss has now jumped into its location.\r\n    lda #$03\r\n    sta MiscCounter1\r\n   
    ldx CurrentStage\r\n    lda Lbl_bf09,x\r\n    sta ObjectSpriteNum+0\r\n    lda
    #$40\r\n    sta ObjectFlags+0\r\n\r\nLbl_b812:\r\n    ldy #$00\r\n    jsr Lbl_bc39\r\n   
    jsr NextFrame\r\n    dec MiscCounter1\r\n    bne Lbl_b812 ;This loop only uses
    3 frames... whatever it does.\r\n    lda #$07\r\n    sta RawPPUtransferAddress+0\r\n   
    lda #$b9\r\n    sta $5b\r\n    lda #$f0\r\n    sta RawPPUtransferAddress+1\r\n   
    sta $5a\r\n    lda #$00\r\n    sta $59\r\n    sta ObjectUnknown440\r\n    sta
    ObjectFireDelay\r\n    lda #$78  ;This is how much time the boss has to pose
    itself.\r\n    sta MiscCounter1\r\n\r\nLbl_b83c: ;Do boss pose\r\n    lda CurrentStage\r\n   
    asl a \r\n    tax \r\n    lda BossPoseTable,x\r\n    sta $04\r\n    lda Lbl_bf1f,x\r\n   
    sta $05\r\n    ; Load instruction of current pose (or something)\r\n    lda ObjectFireDelay\r\n   
    asl a \r\n    tay \r\n    lda ($04),y\r\n    cmp #$ff\r\n    bne Lbl_b85c\r\n   
    ldy #$00\r\n    sty ObjectFireDelay\r\n    lda ($04),y\r\n\r\nLbl_b85c:\r\n   
    sta ObjectSpriteNum+0\r\n    inc ObjectUnknown440\r\n    lda ObjectUnknown440\r\n   
    iny \r\n    cmp ($04),y\r\n    bne Lbl_b872\r\n    lda #$00\r\n    sta ObjectUnknown440\r\n   
    inc ObjectFireDelay\r\n\r\nLbl_b872:\r\n    ldy #$00\r\n    jsr Lbl_bc39\r\n   
    lda CurrentStage\r\n    cmp #$02\r\n    bne Lbl_b883\r\n    jsr Lbl_bbad ;Bombman
    has also a bomb!\r\n    jmp Lbl_b88a\r\n\r\nLbl_b883:\r\n    cmp #$06\r\n   
    bne Lbl_b88a\r\n    jsr Lbl_bcf1 ;This is for Wily...\r\n\r\nLbl_b88a:\r\n   
    jsr NextFrame\r\n    dec MiscCounter1         ;Done with boss pose? Do more frames
    if not\r\n    bne Lbl_b83c\r\n    ; The boss has now posed.\r\n    lda #$25\r\n   
    sta TSAPPUtransfer0AttrAddress+0\r\n    lda #$90\r\n    sta TSAPPUtransfer0AttrAddress+1\r\n   
    lda #$00\r\n    sta TSAPPUtransfer0AttrData\r\n    lda CurrentStage\r\n    ldx
    #$07    ; Text length\r\n    jsr Lbl_bb4a    ; Print text\r\n    lda #$d0\r\n   
    sta TSAPPUtransfer0AttrAddress+1\r\n    lda #$09\r\n    ldx #$0c\r\n    jsr Lbl_bb4a\r\n   
    ldx #$44\r\n    ldy #$03\r\n    lda #$b0\r\n    sta ObjectPosX+0\r\n    lda #$80\r\n   
    sta ObjectPosY+0\r\n    lda #$f0\r\n    sta $0d\r\n    sta $0e\r\n    sta $0f\r\n   
    jsr Lbl_bb88\r\n    lda FrameCounter\r\n    and #$0f\r\n    adc #$28\r\n    sta
    MiscCounter1\r\n    lda #$ff\r\n    sta ObjectUnknown440\r\n\r\nLbl_b8d9:\r\n   
    inc ObjectUnknown440\r\n    lda ObjectUnknown440\r\n    cmp #$05\r\n    bne Lbl_b8e7\r\n   
    lda #$fb\r\n    bne Lbl_b8f0\r\n\r\nLbl_b8e7:\r\n    cmp #$06\r\n    bne Lbl_b8f0\r\n   
    lda #$00\r\n    sta ObjectUnknown440\r\n\r\nLbl_b8f0:\r\n    clc \r\n    adc
    #$f5\r\n    sta $0d\r\n    lda #$f0\r\n    ldy #$02\r\n    jsr Lbl_bb81\r\n   
    lda #$f8\r\n    sta CurrentSpriteData+0,x\r\n    lda FrameCounter\r\n    and
    #$03\r\n    bne Lbl_b90c\r\n    lda #$21\r\n    jsr IssueSound  ;play Points
    SFX (shuffle score)\r\n\r\nLbl_b90c:\r\n    jsr NextFrame\r\n    dec MiscCounter1\r\n   
    bne Lbl_b8d9\r\n    lda CurrentStage\r\n    cmp #$06\r\n    bne Lbl_b926\r\n   
    lda #$0f\r\n    sta ObjectUnknown440\r\n    lda #$f0\r\n    sta $0e\r\n    lda
    #$f2\r\n    bne Lbl_b92f\r\n\r\nLbl_b926:\r\n    lda ObjectUnknown440\r\n   
    cmp #$05\r\n    bne Lbl_b936\r\n    lda #$f1\r\n\r\nLbl_b92f:\r\n    sta $0d\r\n   
    ldy #$03\r\n    jsr Lbl_bb81\r\n\r\nLbl_b936:\r\n    clc \r\n    lda ObjectUnknown440\r\n   
    adc #$05\r\n    asl a \r\n    sta $3d\r\n    asl a \r\n    asl a \r\n    adc
    $3d\r\n    sta $3d\r\n    ldx #$48\r\n\r\nLbl_b947:\r\n    jsr NextFrame\r\n   
    dex \r\n    bne Lbl_b947\r\n    lda CurrentStage\r\n    cmp #$06\r\n    beq Lbl_b978
    ;Is it Wily? \r\n\r\nLbl_b953:\r\n    lda #$fe\r\n    jsr IssueSound  ; stop
    sounds\r\n    lda #$ff\r\n    jsr IssueSound  ; stop sounds\r\n    jsr NextFrame\r\n   
    jsr NextFrame\r\n    dec ScrollPosScreen\r\n    lda $ff\r\n    and #$7f\r\n   
    sta $ff\r\n    sta $2000\r\n    lda $fe\r\n    and #$06\r\n    sta $fe\r\n   
    sta $2001\r\n    rts \r\n\r\nLbl_b978:   ; Wily and saucer show\r\n    lda #$f8\r\n   
    ldx #$1f\r\n\r\nLbl_b97c:\r\n    sta ObjectPosY,x\r\n    dex \r\n    bpl Lbl_b97c\r\n   
    lda #$eb\r\n    sta $38\r\n    sta $3a\r\n    lda #$bd\r\n    sta $39\r\n   
    sta $3b\r\n    lda #$20\r\n    sta WritePaletteParam\r\n    lda #$01\r\n    sta
    $37\r\n    lda #$73\r\n    sta ObjectSpriteNum+2\r\n    lda #$60\r\n    sta ObjectPosX+2\r\n   
    lda #$74\r\n    sta ObjectPosY+2\r\n    lda #$00\r\n    sta ObjectFlags+2\r\n   
    sta ObjectUnknown440+2\r\n    sta ObjectPosYfraction+2\r\n    sta ObjectLifeCycleCounter+2\r\n   
    lda #$60\r\n    sta MiscCounter1\r\n\r\nLbl_b9b7:\r\n    jsr Lbl_bd27\r\n   
    jsr NextFrame\r\n    dec MiscCounter1\r\n    bne Lbl_b9b7\r\n    lda #$00\r\n   
    sta ObjectUnknown440+2\r\n    sta ObjectUnknown440+0\r\n    sta ObjectUnknown440+1\r\n   
    sta ObjectFireDelay+0\r\n    sta ObjectFireDelay+1\r\n    sta ObjectLifeCycleCounter+0\r\n   
    sta ObjectLifeCycleCounter+1\r\n    sta ObjectLifeCycleCounter+2\r\n    sta ObjectFlags+0\r\n   
    sta ObjectFlags+0\r\n    sta ObjectPosXfraction+0\r\n    sta ObjectPosYfraction+0\r\n   
    lda #$71\r\n    sta ObjectSpriteNum+2\r\n    lda #$e4\r\n    sta ObjectPosX+0\r\n   
    lda #$48\r\n    sta ObjectPosY+0\r\n    lda #$74\r\n    sta ObjectSpriteNum+0\r\n   
    lda #$75\r\n    sta ObjectSpriteNum+1\r\n    lda #$11\r\n    jsr IssueSound 
    ; play wily saucer music\r\n\r\nLbl_ba05:\r\n    lda #$60 ;COULD BE ROCKMAN WALKING
    SPEED\r\n    sta $04\r\n    lda #$01\r\n    sta $05\r\n    lda #$00\r\n    sta
    $06\r\n    sta $07\r\n    jsr Lbl_bd40\r\n    lda ObjectPosX+0\r\n    cmp #$5f\r\n   
    bcc Lbl_ba05\r\n    cmp #$61\r\n    bcs Lbl_ba05\r\n\r\nLbl_ba21:\r\n    lda
    #$00\r\n    sta $04\r\n    sta $05\r\n    sta $07\r\n    lda #$80\r\n    sta
    $06\r\n    jsr Lbl_bd40\r\n    lda ObjectPosY+0\r\n    cmp #$6c\r\n    bcc Lbl_ba21\r\n   
    lda #$00\r\n    sta ObjectUnknown440+1\r\n    lda #$76\r\n    sta ObjectSpriteNum+1\r\n   
    lda #$40\r\n    sta ObjectFlags+2\r\n\r\nLbl_ba46:\r\n    sec \r\n    lda ObjectPosYfraction+0\r\n   
    sbc #$80\r\n    sta ObjectPosYfraction+0\r\n    lda ObjectPosY+0\r\n    sbc #$00\r\n   
    sta ObjectPosY+0\r\n    jsr Lbl_bd27\r\n    jsr NextFrame\r\n    lda ObjectPosY+0\r\n   
    cmp #$50\r\n    bcs Lbl_ba46\r\n    lda #$40\r\n    sta MiscCounter1\r\n\r\nLbl_ba68:\r\n   
    lda MiscCounter1\r\n    and #$07\r\n    bne Lbl_ba81\r\n    lda MiscCounter1\r\n   
    and #$08\r\n    bne Lbl_ba78\r\n    lda #$fc\r\n    bne Lbl_ba7a\r\n\r\nLbl_ba78:\r\n   
    lda #$02\r\n\r\nLbl_ba7a:\r\n    clc \r\n    adc ObjectPosY+2\r\n    sta ObjectPosY+2\r\n\r\nLbl_ba81:\r\n   
    jsr Lbl_bd27\r\n    jsr NextFrame\r\n    dec MiscCounter1\r\n    bne Lbl_ba68\r\n   
    lda #$70\r\n    sta ObjectPosY+2\r\n    lda #$72\r\n    sta ObjectSpriteNum+2\r\n   
    lda #$20\r\n    sta MiscCounter1\r\n\r\nLbl_ba99:\r\n    jsr Lbl_bd27\r\n   
    jsr NextFrame\r\n    dec MiscCounter1\r\n    bne Lbl_ba99\r\n\r\nLbl_baa3:\r\n   
    clc \r\n    lda ObjectPosYfraction+0\r\n    adc #$80\r\n    sta ObjectPosYfraction+0\r\n   
    lda ObjectPosY+0\r\n    adc #$00\r\n    sta ObjectPosY+0\r\n    jsr Lbl_bd27\r\n   
    jsr NextFrame\r\n    lda ObjectPosY+0\r\n    cmp #$6c\r\n    bcc Lbl_baa3\r\n   
    lda #$f8\r\n    sta ObjectPosY+2\r\n    lda #$75\r\n    sta ObjectSpriteNum+1\r\n\r\nLbl_bacb:\r\n   
    lda #$00\r\n    sta $04\r\n    sta $05\r\n    lda #$ff\r\n    sta $07\r\n   
    lda #$80\r\n    sta $06\r\n    jsr Lbl_bd40\r\n    lda ObjectPosY+0\r\n    cmp
    #$48\r\n    bcs Lbl_bacb\r\n\r\nLbl_bae3:\r\n    lda #$60\r\n    sta $04\r\n   
    lda #$01\r\n    sta $05\r\n    lda #$00\r\n    sta $06\r\n    sta $07\r\n   
    jsr Lbl_bd5b\r\n    lda ObjectPosX+0\r\n    cmp #$1b\r\n    bcc Lbl_bae3\r\n   
    cmp #$1d\r\n    bcs Lbl_bae3\r\n    jmp Lbl_b953\r\n\r\nLbl_bb02:\r\n    sta
    $0c\r\n    ldx CurrentStage\r\n    lda Lbl_be95,x\r\n    sta $0d\r\n    ldy #$00\r\n\r\nLbl_bb0d:\r\n   
    tya \r\n    asl a \r\n    asl a \r\n    tax \r\n    clc \r\n    lda $0d\r\n   
    adc Lbl_beaa,y\r\n    sta TSAPPUtransfer0AttrAddress+1,x\r\n    lda TSAPPUtransfer0AttrAndMask,x\r\n   
    eor #$ff\r\n    and $0c\r\n    sta TSAPPUtransfer0AttrOrMask,x\r\n    iny \r\n   
    cpy #$06\r\n    bne Lbl_bb0d\r\n    lda $0c\r\n    sta $032d\r\n    sta $0331\r\n   
    and #$0f\r\n    sta $0335\r\n    sta $0339\r\n    lda WeaponsOwned\r\n    and
    #$7e\r\n    cmp #$7e\r\n    bne Lbl_bb45\r\n    lda #$86\r\n    bne Lbl_bb47\r\n\r\nLbl_bb45:\r\n   
    lda #$8a\r\n\r\nLbl_bb47:\r\n    sta $1c\r\n    rts \r\n\r\nLbl_bb4a:\r\n   
    sta ObjectFlags+0\r\n    stx ObjectUnknown440\r\n    ldy #$00\r\n\r\nLbl_bb52:\r\n   
    dec ObjectUnknown440\r\n    bmi Lbl_bb80 ; End of text?\r\n    lda #$05\r\n   
    sta MiscCounter1      ; Frames per letter\r\n    lda ObjectFlags+0\r\n    asl
    a \r\n    tax \r\n    lda TextTable,x\r\n    sta $04\r\n    lda TextTable+1,x\r\n   
    sta $05\r\n    lda ($04),y\r\n    sta TSAPPUtransfer0AttrOrMask\r\n    lda #$81\r\n   
    sta $1c\r\n    inc TSAPPUtransfer0AttrAddress+1\r\n    iny \r\n\r\nLbl_bb77:\r\n   
    jsr NextFrame\r\n    dec MiscCounter1\r\n    beq Lbl_bb52\r\n    bne Lbl_bb77\r\n\r\nLbl_bb80:\r\n   
    rts \r\n\r\nLbl_bb81: ;display promised score.. maybe text, too\r\n    ldx #$50\r\n   
    lda #$98\r\n    sta ObjectPosX+0\r\n\r\nLbl_bb88:\r\n    lda ObjectPosY+0\r\n   
    sta CurrentSpriteData+0,x\r\n    lda ObjectPosX+0\r\n    sta CurrentSpriteData+3,x\r\n   
    sec \r\n    sbc #$08\r\n    sta ObjectPosX+0\r\n    lda a:$000c,y\r\n    sta
    CurrentSpriteData+1,x\r\n    lda #$01\r\n    sta CurrentSpriteData+2,x\r\n   
    inx \r\n    inx \r\n    inx \r\n    inx \r\n    dey \r\n    bne Lbl_bb88\r\n   
    rts \r\n\r\nLbl_bbad:\r\n    dec CurrentStage\r\n    dec CurrentStage\r\n   
    lda MiscCounter1\r\n    cmp #$48\r\n    beq Lbl_bbd8\r\n    bcs Lbl_bbbf\r\n   
    cmp #$28\r\n    bcc Lbl_bbbf\r\n    bcs Lbl_bbf6\r\n\r\nLbl_bbbf:\r\n    lda
    #$56\r\n    sta $0d\r\n    lda #$67\r\n    sta $0e\r\n    lda #$68\r\n    sta
    $0f\r\n    sta ObjectPosX+2\r\n    lda #$40\r\n    sta $10\r\n    jsr Lbl_bc5a\r\n   
    jmp Lbl_bbfb\r\n\r\nLbl_bbd8:\r\n    lda #$56\r\n    sta ObjectSpriteNum+2\r\n   
    lda #$00\r\n    sta ObjectPosYfraction+2\r\n    lda #$64\r\n    sta ObjectPosY+2\r\n   
    lda #$02\r\n    sta ObjectYSpeed+2\r\n    lda #$00\r\n    sta ObjectYSpeedFraction+2\r\n   
    lda #$40\r\n    sta ObjectFlags+2\r\n\r\nLbl_bbf6:\r\n    ldy #$02\r\n    jsr
    Lbl_bc15\r\n\r\nLbl_bbfb:\r\n    inc CurrentStage\r\n    inc CurrentStage\r\n   
    rts \r\n\r\nLbl_bc00:\r\n    ldy #$00\r\n    clc \r\n    lda ObjectPosXfraction+0\r\n   
    adc ObjectPosXfraction+1\r\n    sta ObjectPosXfraction+0\r\n    lda ObjectPosX+0\r\n   
    adc ObjectPosX+1\r\n    sta ObjectPosX+0\r\n\r\nLbl_bc15:\r\n    sec \r\n   
    lda ObjectPosYfraction,y\r\n    sbc ObjectYSpeedFraction,y\r\n    sta ObjectPosYfraction,y\r\n   
    lda ObjectPosY,y\r\n    sbc ObjectYSpeed,y\r\n    sta ObjectPosY,y\r\n    sec
    \r\n    lda ObjectYSpeedFraction,y\r\n    sbc #$20\r\n    sta ObjectYSpeedFraction,y\r\n   
    lda ObjectYSpeed,y\r\n    sbc #$00\r\n    sta ObjectYSpeed,y\r\n\r\nLbl_bc39:\r\n   
    lda ObjectSpriteNum,y\r\n    sta $0d\r\n    lda ObjectPosY,y\r\n    sta $0e\r\n   
    lda ObjectPosX,y\r\n    sta $0f\r\n    lda ObjectFlags,y\r\n    sta $10\r\n   
    cpy #$00\r\n    bne Lbl_bc5a\r\n    ldy #$00\r\n    ldx #$40\r\n    jsr HideSprites\r\n   
    ldx #$00\r\n\r\nLbl_bc5a:\r\n    lda $0d\r\n    asl a \r\n    rol $12\r\n   
    tay \r\n    lda #$00\r\n    sta $11\r\n    lda $12\r\n    and #$01\r\n    ora
    #$80\r\n    sta $12\r\n    lda ($11),y\r\n    sta $04\r\n    iny \r\n    lda
    ($11),y\r\n    sta $05\r\n    ldy #$00\r\n    sty $12\r\n    lda ($04),y\r\n   
    sta $11\r\n    iny \r\n    lda ($04),y\r\n    asl a \r\n    tay \r\n    lda Lbl_82aa,y\r\n   
    sta $06\r\n    lda Lbl_82ab,y\r\n    sta $07\r\n    ldy #$02\r\n    sty $0c\r\n\r\nLbl_bc90:\r\n   
    ldy $0c\r\n    lda ($04),y\r\n    clc \r\n    ldy CurrentStage\r\n    adc Lbl_bf10,y\r\n   
    sta CurrentSpriteData+1,x\r\n    ldy $0c\r\n    iny \r\n    lda $10\r\n    and
    #$40\r\n    eor ($04),y\r\n    iny \r\n    sty $0c\r\n    sta CurrentSpriteData+2,x\r\n   
    and #$03\r\n    cmp #$02\r\n    bne Lbl_bcbf\r\n    lda CurrentSpriteData+2,x\r\n   
    and #$fc\r\n    ldy CurrentStage\r\n    ora Lbl_bf17,y\r\n    sta CurrentSpriteData+2,x\r\n\r\nLbl_bcbf:\r\n   
    ldy $12\r\n    lda ($06),y\r\n    tay \r\n    clc \r\n    lda $0e\r\n    adc
    Lbl_833a,y\r\n    sta CurrentSpriteData+0,x\r\n    clc \r\n    lda $10\r\n   
    bne Lbl_bcd7\r\n    lda Lbl_843a,y\r\n    bcc Lbl_bcda\r\n\r\nLbl_bcd7:\r\n   
    lda Lbl_853a,y\r\n\r\nLbl_bcda:\r\n    adc $0f\r\n    sta CurrentSpriteData+3,x\r\n   
    inx \r\n    inx \r\n    inx \r\n    inx \r\n    cpx #$fc\r\n    beq Lbl_bcf0\r\n   
    dec $11\r\n    beq Lbl_bcf0\r\n    inc $12\r\n    jmp Lbl_bc90\r\n\r\nLbl_bcf0:\r\n   
    rts \r\n\r\nLbl_bcf1: ;something specific to Wily\r\n    lda $59\r\n    cmp #$30\r\n   
    beq Lbl_bd26\r\n    clc \r\n    lda $5a\r\n    adc #$10\r\n    sta $5a\r\n   
    sta $06\r\n    lda $5b\r\n    adc #$00\r\n    sta $5b\r\n    sta $07\r\n    clc
    \r\n    lda RawPPUtransferAddress+1\r\n    adc #$10\r\n    sta RawPPUtransferAddress+1\r\n   
    lda RawPPUtransferAddress+0\r\n    adc #$00\r\n    sta RawPPUtransferAddress+0\r\n   
    ldy #$00\r\n    lda #$02\r\n    jsr Lbl_c400\r\n    lda #$10\r\n    sta $5e\r\n   
    inc $59\r\n\r\nLbl_bd26:\r\n    rts \r\n\r\nLbl_bd27:\r\n    ldy #$00\r\n   
    sty $0d\r\n    ldx #$40\r\n    jsr HideSprites\r\n    lda #$00\r\n    sta $0c\r\n\r\nLbl_bd34:\r\n   
    jsr DrawObject\r\n    inc $0c\r\n    lda #$03\r\n    cmp $0c\r\n    bne Lbl_bd34\r\n   
    rts \r\n\r\nLbl_bd40:\r\n    jsr Lbl_bd76\r\n    ldx #$6c\r\n\r\nLbl_bd45:\r\n   
    lda CurrentSpriteData+3,x\r\n    cmp #$c8\r\n    bcc Lbl_bd51\r\n    lda #$f8\r\n   
    sta CurrentSpriteData+0,x\r\n\r\nLbl_bd51:\r\n    dex \r\n    dex \r\n    dex
    \r\n    dex \r\n    bpl Lbl_bd45\r\n    jsr NextFrame\r\n    rts \r\n\r\nLbl_bd5b:\r\n   
    jsr Lbl_bd76\r\n    ldx #$6c\r\n\r\nLbl_bd60:\r\n    lda CurrentSpriteData+3,x\r\n   
    cmp #$38\r\n    bcs Lbl_bd6c\r\n    lda #$f8\r\n    sta CurrentSpriteData+0,x\r\n\r\nLbl_bd6c:\r\n   
    dex \r\n    dex \r\n    dex \r\n    dex \r\n    bpl Lbl_bd60\r\n    jsr NextFrame\r\n   
    rts \r\n\r\nLbl_bd76:\r\n    clc \r\n    lda ObjectPosXfraction+0\r\n    adc
    $04\r\n    sta ObjectPosXfraction+0\r\n    sta ObjectPosXfraction+1\r\n    lda
    ObjectPosX+0\r\n    adc $05\r\n    sta ObjectPosX+0\r\n    sta ObjectPosX+1\r\n   
    clc \r\n    lda ObjectPosYfraction+0\r\n    adc $06\r\n    sta ObjectPosYfraction+0\r\n   
    sta ObjectPosYfraction+1\r\n    lda ObjectPosY+0\r\n    adc $07\r\n    sta ObjectPosY+0\r\n   
    clc \r\n    adc #$10\r\n    sta ObjectPosY+1\r\n    jsr Lbl_bd27\r\n    rts \r\n\r\n   
    ; Palettes?\r\nLbl_bdab:\r\n    .byte $0f,$3c,$21,$11,$0f,$30,$35,$11,$0f,$28,$0f,$0f,$0f,$28,$15,$27\r\n   
    .byte $0f,$20,$21,$0f,$0f,$20,$38,$0f,$0f,$20,$15,$0f,$0f,$27,$15,$0f\r\n   
    .byte $0f,$30,$30,$30,$0f,$20,$20,$20,$0f,$18,$0f,$0f,$0f,$18,$15,$27\r\nLbl_bddb:\r\n   
    .byte $0f,$3c,$21,$11,$0f,$30,$35,$11,$0f,$28,$30,$37,$0f,$0f,$15,$27\r\n   
    .byte $0f,$11,$11,$11,$0f,$0c,$0c,$0c,$0f,$11,$11,$11,$0f,$11,$11,$11\r\n   
    .byte $0f,$20,$21,$0f,$0f,$20,$38,$0f,$0f,$30,$15,$0f,$0f,$20,$38,$0f\r\n   
    .byte $0f,$3c,$21,$11,$0f,$30,$30,$0c,$0f,$28,$0f,$0f,$0f,$28,$15,$27\r\n\r\nLbl_be1b:\r\n   
    .byte $22,$24,$24,$24,$24,$26,$23,$21,$21,$21,$21,$27,$23,$21,$21,$21\r\n   
    .byte $21,$27,$23,$21,$21,$21,$21,$27,$23,$21,$21,$21,$21,$27,$28,$25\r\n   
    .byte $25,$25,$25,$29\r\n\r\nLbl_be3f:\r\n    .byte $22,$24,$24,$24,$24,$26,$23,$30,$32,$34,$36,$27,$23,$31,$33,$35\r\n   
    .byte $37,$27,$23,$38,$3a,$3c,$3e,$27,$23,$39,$3b,$3d,$3f,$27,$28,$25\r\n   
    .byte $25,$25,$25,$29\r\n\r\nLbl_be63:\r\n    .byte $22,$24,$24,$24,$24,$26,$23,$21,$21,$21,$21,$27,$23,$41,$43,$45\r\n   
    .byte $47,$27,$23,$21,$4a,$4c,$4e,$27,$23,$49,$4b,$4d,$4f,$27,$28,$25\r\n   
    .byte $25,$25,$25,$29\r\n\r\nLbl_be87:\r\n    .byte $69\r\n\r\nLbl_be88:\r\n   
    .byte $20,$75,$21,$71,$22,$69,$22,$65,$21,$71,$20,$6d,$21\r\n\r\nLbl_be95:\r\n   
    .byte $c2,$d5,$e4,$e2,$d1,$c4,$d3\r\n\r\nLbl_be9c:\r\n    .byte $0f,$0f,$cc,$33,$f0,$f0,$00,$00,$f0,$f0\r\n\r\nLbl_bea6:\r\n   
    .byte $db,$dc,$e3,$e4\r\n\r\nLbl_beaa:\r\n    .byte $00,$01,$08,$09,$10,$11\r\n\r\nLbl_beb0:\r\n   
    .byte $05,$04,$02,$05,$03,$01,$04,$02,$00,$03,$01,$00,$05,$06,$02,$05\r\n   
    .byte $03,$01,$04,$02,$06,$03,$01,$00,$00,$04\r\n\r\nLbl_beca: ;indexed by current
    stage*4\r\n    .byte $22,$34,$60,$40\r\n    .byte $37,$74,$c0,$00\r\n    .byte
    $30,$b4,$a0,$00\r\n    .byte $3e,$b4,$60,$40\r\n    .byte $47,$74,$40,$40\r\n   
    .byte $4f,$2f,$a0,$00\r\n    .byte $9a,$74,$80,$00\r\n    ; $400, $600,$480,$420.\r\n   
    \r\n    ; $400 = megaman state\r\n    ; $600 = megaman Y pos\r\n    ; $480 =
    megaman X pos\r\n    ; $420 = megaman flags\r\n    \r\n    ; These four bytes
    are also consumed at $0D..$10 by Lbl_b5ca\r\n    \r\n    ; Probably the frames
    and locations of bosses.\r\n\r\nLbl_bee6: ; indexed by current stage*4\r\n   
    .byte $02,$f0,$00,$00\r\n    .byte $03,$f0,$fe,$80\r\n    .byte $04,$f0,$ff,$00\r\n   
    .byte $04,$f0,$00,$00\r\n    .byte $03,$f0,$00,$80\r\n    .byte $02,$44,$fe,$dc\r\n   
    .byte $03,$f0,$ff,$80\r\n    ; $680,$660,$481,$4A1.\r\n\r\nLbl_bf02: ;indexed
    by current stage\r\n    .byte $28,$5c,$35,$5d,$4c,$55,$9a\r\n    ; goes to $400\r\n   
    ; ObjectSpriteNum+0. Possibly his different shots?? (Unverified)\r\n\r\nLbl_bf09:
    ;indexed by current stage\r\n    .byte $24,$38,$31,$40,$49,$55,$9a\r\n\r\nLbl_bf10:\r\n   
    .byte $80,$a0,$c0,$e0,$00,$30,$60\r\n\r\nLbl_bf17:\r\n    .byte $02,$00,$03,$02,$03,$03,$02\r\n\r\nBossPoseTable:
    ;indexed by current stage*2 -- at BF1E\r\n    .word Lbl_bf2c\r\n    .word Lbl_bf31\r\n   
    .word Lbl_bf37\r\n    .word Lbl_bf3c\r\n    .word Lbl_bf4e\r\n    .word Lbl_bf54\r\n   
    .word Lbl_bf59\r\nLbl_bf2c: ;C\r\n    .byte $22,$08,$24,$08,$ff\r\nLbl_bf31:
    ;I\r\n    .byte $37,$10,$38,$08,$39,$ff\r\nLbl_bf37: ;B\r\n    .byte $31,$30,$30,$20,$ff\r\nLbl_bf3c:
    ;F\r\n    .byte $3e,$10,$40,$08,$78,$10,$41,$08\r\n    .byte $78,$10,$41,$08,$78,$10,$41,$08,$78,$ff\r\nLbl_bf4e:
    ;E\r\n    .byte $47,$10,$48,$08,$49,$ff\r\nLbl_bf54: ;G\r\n    .byte $4f,$0e,$50,$0e,$ff\r\nLbl_bf59:
    ;wily\r\n    .byte $9a,$ff\r\n\r\nTextTable:\r\n    .byte Lbl_bf6f, Lbl_bf76,
    Lbl_bf7d, Lbl_bf84, Lbl_bf8b, Lbl_bf92\r\n    .byte Lbl_bf99, Lbl_bfbc, Lbl_bfc4,
    Lbl_bfa0\r\n\r\nLbl_bf6f:   .byte $03,$15,$14,$0d,$01,$0e,$20 ; CUTMAN_\r\nLbl_bf76:  
    .byte $09,$03,$05,$0d,$01,$0e,$20 ; ICEMAN_\r\nLbl_bf7d:   .byte $02,$0f,$0d,$02,$0d,$01,$0e
    ; BOMBMAN\r\nLbl_bf84:   .byte $06,$09,$12,$05,$0d,$01,$0e ; FIREMAN\r\nLbl_bf8b:  
    .byte $05,$0c,$05,$03,$0d,$01,$0e ; ELECMAN\r\nLbl_bf92:   .byte $07,$15,$14,$13,$0d,$01,$0e
    ; GUTSMAN\r\nLbl_bf99:   .byte $04,$1b,$17,$09,$0c,$19,$20 ; D?WILY_\r\nLbl_bfa0:  
    .byte $03,$0c,$05,$01,$12,$20,$10 ; CLEAR_P\r\n            .byte $0f,$09,$0e,$14,$13        
    ; OINTS\r\nLbl_bfbc:   .byte $21,$8d, $13,$05,$0c,$05,$03,$14 ; ?? SELECT\r\n           
    .byte $21,$ad, $13,$14,$01,$07,$05,$20 ; ?? STAGE\r\nLbl_bfc4:   .byte $21,$ed,
    $10,$12,$05,$13,$13,$20 ; ?? PRESS\r\n            .byte $22,$0d, $13,$14,$01,$12,$14,$20
    ; ?? START\r\n\r\nLbl_bfcc:\r\n    .byte $20,$10,$02,$40,$04,$08,$77,$e6,$02,$74,$77,$e7,$02,$7c,$77,$e8\r\n   
    .byte $02,$84,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00\r\n   
    .byte $00,$00,$00,$00\r\n\r\nLbl_bff0:\r\n    jmp RunEndGameScene\r\n\r\nDoWeaponSelectDialog:
    ;Lbl_bff3\r\n    jmp WeaponSelectDialog\r\n\r\nRunStageSelectionScreen:\r\n   
    jmp StageSelectionScreenMain\r\n\r\nLbl_bff9:\r\n    .byte $00,$00,$00,$00,$00,$00,$00\r\n\r\n\r\n;;;;;;;;;;;;
    BANK 6 ENDS HERE ;;;;;;;;;;;;;;;;\r\n\r\n;;;;;;;;;;;; BANK 4 BEGINS HERE ;;;;;;;;;;;;;;;;\r\n;
    Bank 4 is in separate file, mmmusic2.txt\r\n;;;;;;;;;;;; BANK 4 ENDS HERE ;;;;;;;;;;;;;;;;\r\n"
